<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="758" onload="init(evt)" viewBox="0 0 1200 758" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="758" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="741.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="741.00"> </text><svg id="frames" x="10" width="1180" total_samples="19419"><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.02%)</title><rect x="0.0000%" y="677" width="0.0206%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="4"/><text x="0.2500%" y="687.50"></text></g><g><title>&lt;num_modular::monty::Montgomery&lt;u64,u64&gt; as num_modular::Reducer&lt;u64&gt;&gt;::pow (3 samples, 0.02%)</title><rect x="0.0206%" y="677" width="0.0154%" height="15" fill="rgb(217,0,24)" fg:x="4" fg:w="3"/><text x="0.2706%" y="687.50"></text></g><g><title>&lt;num_prime::mint::Mint&lt;T,R&gt; as core::cmp::PartialOrd&gt;::partial_cmp (6 samples, 0.03%)</title><rect x="0.0360%" y="677" width="0.0309%" height="15" fill="rgb(221,193,54)" fg:x="7" fg:w="6"/><text x="0.2860%" y="687.50"></text></g><g><title>&lt;u64 as num_integer::roots::Roots&gt;::nth_root::go (6 samples, 0.03%)</title><rect x="0.0669%" y="677" width="0.0309%" height="15" fill="rgb(248,212,6)" fg:x="13" fg:w="6"/><text x="0.3169%" y="687.50"></text></g><g><title>&lt;u64 as num_integer::roots::Roots&gt;::cbrt (2 samples, 0.01%)</title><rect x="0.0875%" y="661" width="0.0103%" height="15" fill="rgb(208,68,35)" fg:x="17" fg:w="2"/><text x="0.3375%" y="671.50"></text></g><g><title>_int_free (2 samples, 0.01%)</title><rect x="0.1030%" y="661" width="0.0103%" height="15" fill="rgb(232,128,0)" fg:x="20" fg:w="2"/><text x="0.3530%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (3 samples, 0.02%)</title><rect x="0.1133%" y="661" width="0.0154%" height="15" fill="rgb(207,160,47)" fg:x="22" fg:w="3"/><text x="0.3633%" y="671.50"></text></g><g><title>[[heap]] (7 samples, 0.04%)</title><rect x="0.1030%" y="677" width="0.0360%" height="15" fill="rgb(228,23,34)" fg:x="20" fg:w="7"/><text x="0.3530%" y="687.50"></text></g><g><title>num_prime::nt_funcs::factorize64 (2 samples, 0.01%)</title><rect x="0.1287%" y="661" width="0.0103%" height="15" fill="rgb(218,30,26)" fg:x="25" fg:w="2"/><text x="0.3787%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.01%)</title><rect x="0.1390%" y="661" width="0.0103%" height="15" fill="rgb(220,122,19)" fg:x="27" fg:w="2"/><text x="0.3890%" y="671.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.02%)</title><rect x="0.1596%" y="661" width="0.0206%" height="15" fill="rgb(250,228,42)" fg:x="31" fg:w="4"/><text x="0.4096%" y="671.50"></text></g><g><title>__rdl_alloc (2 samples, 0.01%)</title><rect x="0.1854%" y="661" width="0.0103%" height="15" fill="rgb(240,193,28)" fg:x="36" fg:w="2"/><text x="0.4354%" y="671.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.01%)</title><rect x="0.1854%" y="645" width="0.0103%" height="15" fill="rgb(216,20,37)" fg:x="36" fg:w="2"/><text x="0.4354%" y="655.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (8 samples, 0.04%)</title><rect x="0.2008%" y="661" width="0.0412%" height="15" fill="rgb(206,188,39)" fg:x="39" fg:w="8"/><text x="0.4508%" y="671.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.02%)</title><rect x="0.2214%" y="645" width="0.0206%" height="15" fill="rgb(217,207,13)" fg:x="43" fg:w="4"/><text x="0.4714%" y="655.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (4 samples, 0.02%)</title><rect x="0.2214%" y="629" width="0.0206%" height="15" fill="rgb(231,73,38)" fg:x="43" fg:w="4"/><text x="0.4714%" y="639.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (4 samples, 0.02%)</title><rect x="0.2214%" y="613" width="0.0206%" height="15" fill="rgb(225,20,46)" fg:x="43" fg:w="4"/><text x="0.4714%" y="623.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (4 samples, 0.02%)</title><rect x="0.2214%" y="597" width="0.0206%" height="15" fill="rgb(210,31,41)" fg:x="43" fg:w="4"/><text x="0.4714%" y="607.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (4 samples, 0.02%)</title><rect x="0.2214%" y="581" width="0.0206%" height="15" fill="rgb(221,200,47)" fg:x="43" fg:w="4"/><text x="0.4714%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.02%)</title><rect x="0.2214%" y="565" width="0.0206%" height="15" fill="rgb(226,26,5)" fg:x="43" fg:w="4"/><text x="0.4714%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.02%)</title><rect x="0.2214%" y="549" width="0.0206%" height="15" fill="rgb(249,33,26)" fg:x="43" fg:w="4"/><text x="0.4714%" y="559.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.02%)</title><rect x="0.2214%" y="533" width="0.0206%" height="15" fill="rgb(235,183,28)" fg:x="43" fg:w="4"/><text x="0.4714%" y="543.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (5 samples, 0.03%)</title><rect x="0.2420%" y="661" width="0.0257%" height="15" fill="rgb(221,5,38)" fg:x="47" fg:w="5"/><text x="0.4920%" y="671.50"></text></g><g><title>[[stack]] (33 samples, 0.17%)</title><rect x="0.1390%" y="677" width="0.1699%" height="15" fill="rgb(247,18,42)" fg:x="27" fg:w="33"/><text x="0.3890%" y="687.50"></text></g><g><title>num_prime::primality::&lt;impl num_prime::traits::PrimalityUtils for T&gt;::test_sprp (7 samples, 0.04%)</title><rect x="0.2729%" y="661" width="0.0360%" height="15" fill="rgb(241,131,45)" fg:x="53" fg:w="7"/><text x="0.5229%" y="671.50"></text></g><g><title>[max-order-elements] (2 samples, 0.01%)</title><rect x="0.3090%" y="677" width="0.0103%" height="15" fill="rgb(249,31,29)" fg:x="60" fg:w="2"/><text x="0.5590%" y="687.50"></text></g><g><title>_int_free (2 samples, 0.01%)</title><rect x="0.3090%" y="661" width="0.0103%" height="15" fill="rgb(225,111,53)" fg:x="60" fg:w="2"/><text x="0.5590%" y="671.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.13%)</title><rect x="0.3193%" y="661" width="0.1287%" height="15" fill="rgb(238,160,17)" fg:x="62" fg:w="25"/><text x="0.5693%" y="671.50"></text></g><g><title>core::mem::drop (13 samples, 0.07%)</title><rect x="0.3811%" y="645" width="0.0669%" height="15" fill="rgb(214,148,48)" fg:x="74" fg:w="13"/><text x="0.6311%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;u64,usize&gt;&gt; (13 samples, 0.07%)</title><rect x="0.3811%" y="629" width="0.0669%" height="15" fill="rgb(232,36,49)" fg:x="74" fg:w="13"/><text x="0.6311%" y="639.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.07%)</title><rect x="0.3811%" y="613" width="0.0669%" height="15" fill="rgb(209,103,24)" fg:x="74" fg:w="13"/><text x="0.6311%" y="623.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (13 samples, 0.07%)</title><rect x="0.3811%" y="597" width="0.0669%" height="15" fill="rgb(229,88,8)" fg:x="74" fg:w="13"/><text x="0.6311%" y="607.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (12 samples, 0.06%)</title><rect x="0.3862%" y="581" width="0.0618%" height="15" fill="rgb(213,181,19)" fg:x="75" fg:w="12"/><text x="0.6362%" y="591.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.02%)</title><rect x="0.4480%" y="661" width="0.0154%" height="15" fill="rgb(254,191,54)" fg:x="87" fg:w="3"/><text x="0.6980%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.01%)</title><rect x="0.4635%" y="661" width="0.0103%" height="15" fill="rgb(241,83,37)" fg:x="90" fg:w="2"/><text x="0.7135%" y="671.50"></text></g><g><title>&lt;num_modular::monty::Montgomery&lt;u32,u32&gt; as num_modular::Reducer&lt;u32&gt;&gt;::pow (21 samples, 0.11%)</title><rect x="0.4738%" y="661" width="0.1081%" height="15" fill="rgb(233,36,39)" fg:x="92" fg:w="21"/><text x="0.7238%" y="671.50"></text></g><g><title>&lt;num_modular::monty::Montgomery&lt;u64,u64&gt; as num_modular::Reducer&lt;u64&gt;&gt;::pow (108 samples, 0.56%)</title><rect x="0.5819%" y="661" width="0.5562%" height="15" fill="rgb(226,3,54)" fg:x="113" fg:w="108"/><text x="0.8319%" y="671.50"></text></g><g><title>&lt;num_modular::monty::Montgomery&lt;u64,u64&gt; as num_modular::Reducer&lt;u64&gt;&gt;::transform (8 samples, 0.04%)</title><rect x="1.0969%" y="645" width="0.0412%" height="15" fill="rgb(245,192,40)" fg:x="213" fg:w="8"/><text x="1.3469%" y="655.50"></text></g><g><title>&lt;u32 as num_modular::monty::NegModInv&gt;::neginv (2 samples, 0.01%)</title><rect x="1.1381%" y="661" width="0.0103%" height="15" fill="rgb(238,167,29)" fg:x="221" fg:w="2"/><text x="1.3881%" y="671.50"></text></g><g><title>&lt;u64 as num_integer::roots::Roots&gt;::nth_root::go (42 samples, 0.22%)</title><rect x="1.1484%" y="661" width="0.2163%" height="15" fill="rgb(232,182,51)" fg:x="223" fg:w="42"/><text x="1.3984%" y="671.50"></text></g><g><title>&lt;u64 as num_integer::roots::Roots&gt;::sqrt::go (13 samples, 0.07%)</title><rect x="1.3646%" y="661" width="0.0669%" height="15" fill="rgb(231,60,39)" fg:x="265" fg:w="13"/><text x="1.6146%" y="671.50"></text></g><g><title>__GI___libc_free (16 samples, 0.08%)</title><rect x="1.4316%" y="661" width="0.0824%" height="15" fill="rgb(208,69,12)" fg:x="278" fg:w="16"/><text x="1.6816%" y="671.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.03%)</title><rect x="1.5140%" y="661" width="0.0257%" height="15" fill="rgb(235,93,37)" fg:x="294" fg:w="5"/><text x="1.7640%" y="671.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.02%)</title><rect x="1.5397%" y="661" width="0.0154%" height="15" fill="rgb(213,116,39)" fg:x="299" fg:w="3"/><text x="1.7897%" y="671.50"></text></g><g><title>__rdl_alloc (2 samples, 0.01%)</title><rect x="1.5603%" y="661" width="0.0103%" height="15" fill="rgb(222,207,29)" fg:x="303" fg:w="2"/><text x="1.8103%" y="671.50"></text></g><g><title>__rdl_realloc (3 samples, 0.02%)</title><rect x="1.5706%" y="661" width="0.0154%" height="15" fill="rgb(206,96,30)" fg:x="305" fg:w="3"/><text x="1.8206%" y="671.50"></text></g><g><title>_int_free (19 samples, 0.10%)</title><rect x="1.5861%" y="661" width="0.0978%" height="15" fill="rgb(218,138,4)" fg:x="308" fg:w="19"/><text x="1.8361%" y="671.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (32 samples, 0.16%)</title><rect x="1.6942%" y="661" width="0.1648%" height="15" fill="rgb(250,191,14)" fg:x="329" fg:w="32"/><text x="1.9442%" y="671.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (28 samples, 0.14%)</title><rect x="1.8590%" y="661" width="0.1442%" height="15" fill="rgb(239,60,40)" fg:x="361" fg:w="28"/><text x="2.1090%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (7 samples, 0.04%)</title><rect x="2.0032%" y="661" width="0.0360%" height="15" fill="rgb(206,27,48)" fg:x="389" fg:w="7"/><text x="2.2532%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (7 samples, 0.04%)</title><rect x="2.0032%" y="645" width="0.0360%" height="15" fill="rgb(225,35,8)" fg:x="389" fg:w="7"/><text x="2.2532%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.04%)</title><rect x="2.0392%" y="661" width="0.0360%" height="15" fill="rgb(250,213,24)" fg:x="396" fg:w="7"/><text x="2.2892%" y="671.50"></text></g><g><title>&lt;num_modular::reduced::ReducedInt&lt;T,R&gt; as num_modular::ModularInteger&gt;::convert (6 samples, 0.03%)</title><rect x="2.0753%" y="597" width="0.0309%" height="15" fill="rgb(247,123,22)" fg:x="403" fg:w="6"/><text x="2.3253%" y="607.50"></text></g><g><title>&lt;num_modular::monty::Montgomery&lt;u64,u64&gt; as num_modular::Reducer&lt;u64&gt;&gt;::transform (6 samples, 0.03%)</title><rect x="2.0753%" y="581" width="0.0309%" height="15" fill="rgb(231,138,38)" fg:x="403" fg:w="6"/><text x="2.3253%" y="591.50"></text></g><g><title>max_order_elements::ModularRing::max_order_element_close_to (10 samples, 0.05%)</title><rect x="2.0753%" y="645" width="0.0515%" height="15" fill="rgb(231,145,46)" fg:x="403" fg:w="10"/><text x="2.3253%" y="655.50"></text></g><g><title>max_order_elements::ModularRing::has_max_order (10 samples, 0.05%)</title><rect x="2.0753%" y="629" width="0.0515%" height="15" fill="rgb(251,118,11)" fg:x="403" fg:w="10"/><text x="2.3253%" y="639.50"></text></g><g><title>max_order_elements::ModularRing::has_max_order_helper (10 samples, 0.05%)</title><rect x="2.0753%" y="613" width="0.0515%" height="15" fill="rgb(217,147,25)" fg:x="403" fg:w="10"/><text x="2.3253%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (4 samples, 0.02%)</title><rect x="2.1062%" y="597" width="0.0206%" height="15" fill="rgb(247,81,37)" fg:x="409" fg:w="4"/><text x="2.3562%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.02%)</title><rect x="2.1062%" y="581" width="0.0206%" height="15" fill="rgb(209,12,38)" fg:x="409" fg:w="4"/><text x="2.3562%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (4 samples, 0.02%)</title><rect x="2.1062%" y="565" width="0.0206%" height="15" fill="rgb(227,1,9)" fg:x="409" fg:w="4"/><text x="2.3562%" y="575.50"></text></g><g><title>max_order_elements::ModularRing::has_max_order_helper::{{closure}} (4 samples, 0.02%)</title><rect x="2.1062%" y="549" width="0.0206%" height="15" fill="rgb(248,47,43)" fg:x="409" fg:w="4"/><text x="2.3562%" y="559.50"></text></g><g><title>&lt;num_modular::reduced::ReducedInt&lt;T,R&gt; as num_traits::pow::Pow&lt;T&gt;&gt;::pow (4 samples, 0.02%)</title><rect x="2.1062%" y="533" width="0.0206%" height="15" fill="rgb(221,10,30)" fg:x="409" fg:w="4"/><text x="2.3562%" y="543.50"></text></g><g><title>&lt;num_modular::monty::Montgomery&lt;u64,u64&gt; as num_modular::Reducer&lt;u64&gt;&gt;::new (2 samples, 0.01%)</title><rect x="2.1319%" y="613" width="0.0103%" height="15" fill="rgb(210,229,1)" fg:x="414" fg:w="2"/><text x="2.3819%" y="623.50"></text></g><g><title>max_order_elements::main (15 samples, 0.08%)</title><rect x="2.0753%" y="661" width="0.0772%" height="15" fill="rgb(222,148,37)" fg:x="403" fg:w="15"/><text x="2.3253%" y="671.50"></text></g><g><title>max_order_elements::ModularRing::new (5 samples, 0.03%)</title><rect x="2.1268%" y="645" width="0.0257%" height="15" fill="rgb(234,67,33)" fg:x="413" fg:w="5"/><text x="2.3768%" y="655.50"></text></g><g><title>num_modular::reduced::ReducedInt&lt;T,R&gt;::new (4 samples, 0.02%)</title><rect x="2.1319%" y="629" width="0.0206%" height="15" fill="rgb(247,98,35)" fg:x="414" fg:w="4"/><text x="2.3819%" y="639.50"></text></g><g><title>&lt;num_modular::monty::Montgomery&lt;u64,u64&gt; as num_modular::Reducer&lt;u64&gt;&gt;::transform (2 samples, 0.01%)</title><rect x="2.1422%" y="613" width="0.0103%" height="15" fill="rgb(247,138,52)" fg:x="416" fg:w="2"/><text x="2.3922%" y="623.50"></text></g><g><title>num_modular::monty::Montgomery&lt;u32,u32&gt;::reduce (2 samples, 0.01%)</title><rect x="2.1525%" y="661" width="0.0103%" height="15" fill="rgb(213,79,30)" fg:x="418" fg:w="2"/><text x="2.4025%" y="671.50"></text></g><g><title>&lt;u64 as num_integer::roots::Roots&gt;::sqrt (13 samples, 0.07%)</title><rect x="2.2349%" y="645" width="0.0669%" height="15" fill="rgb(246,177,23)" fg:x="434" fg:w="13"/><text x="2.4849%" y="655.50"></text></g><g><title>num_prime::nt_funcs::factorize64 (32 samples, 0.16%)</title><rect x="2.1628%" y="661" width="0.1648%" height="15" fill="rgb(230,62,27)" fg:x="420" fg:w="32"/><text x="2.4128%" y="671.50"></text></g><g><title>num_prime::nt_funcs::is_prime64 (3 samples, 0.02%)</title><rect x="2.3122%" y="645" width="0.0154%" height="15" fill="rgb(216,154,8)" fg:x="449" fg:w="3"/><text x="2.5622%" y="655.50"></text></g><g><title>&lt;u64 as num_integer::roots::Roots&gt;::sqrt (2 samples, 0.01%)</title><rect x="2.4461%" y="645" width="0.0103%" height="15" fill="rgb(244,35,45)" fg:x="475" fg:w="2"/><text x="2.6961%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.01%)</title><rect x="2.4564%" y="645" width="0.0103%" height="15" fill="rgb(251,115,12)" fg:x="477" fg:w="2"/><text x="2.7064%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (9 samples, 0.05%)</title><rect x="2.4667%" y="645" width="0.0463%" height="15" fill="rgb(240,54,50)" fg:x="479" fg:w="9"/><text x="2.7167%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (9 samples, 0.05%)</title><rect x="2.4667%" y="629" width="0.0463%" height="15" fill="rgb(233,84,52)" fg:x="479" fg:w="9"/><text x="2.7167%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.05%)</title><rect x="2.4667%" y="613" width="0.0463%" height="15" fill="rgb(207,117,47)" fg:x="479" fg:w="9"/><text x="2.7167%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (9 samples, 0.05%)</title><rect x="2.4667%" y="597" width="0.0463%" height="15" fill="rgb(249,43,39)" fg:x="479" fg:w="9"/><text x="2.7167%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (9 samples, 0.05%)</title><rect x="2.4667%" y="581" width="0.0463%" height="15" fill="rgb(209,38,44)" fg:x="479" fg:w="9"/><text x="2.7167%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9 samples, 0.05%)</title><rect x="2.4667%" y="565" width="0.0463%" height="15" fill="rgb(236,212,23)" fg:x="479" fg:w="9"/><text x="2.7167%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9 samples, 0.05%)</title><rect x="2.4667%" y="549" width="0.0463%" height="15" fill="rgb(242,79,21)" fg:x="479" fg:w="9"/><text x="2.7167%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (9 samples, 0.05%)</title><rect x="2.4667%" y="533" width="0.0463%" height="15" fill="rgb(211,96,35)" fg:x="479" fg:w="9"/><text x="2.7167%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.05%)</title><rect x="2.4667%" y="517" width="0.0463%" height="15" fill="rgb(253,215,40)" fg:x="479" fg:w="9"/><text x="2.7167%" y="527.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.05%)</title><rect x="2.4667%" y="501" width="0.0463%" height="15" fill="rgb(211,81,21)" fg:x="479" fg:w="9"/><text x="2.7167%" y="511.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.05%)</title><rect x="2.4667%" y="485" width="0.0463%" height="15" fill="rgb(208,190,38)" fg:x="479" fg:w="9"/><text x="2.7167%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(u64,usize)&gt;&gt; (2 samples, 0.01%)</title><rect x="2.5130%" y="645" width="0.0103%" height="15" fill="rgb(235,213,38)" fg:x="488" fg:w="2"/><text x="2.7630%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(u64,usize)&gt;&gt; (2 samples, 0.01%)</title><rect x="2.5130%" y="629" width="0.0103%" height="15" fill="rgb(237,122,38)" fg:x="488" fg:w="2"/><text x="2.7630%" y="639.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.01%)</title><rect x="2.5130%" y="613" width="0.0103%" height="15" fill="rgb(244,218,35)" fg:x="488" fg:w="2"/><text x="2.7630%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.01%)</title><rect x="2.5130%" y="597" width="0.0103%" height="15" fill="rgb(240,68,47)" fg:x="488" fg:w="2"/><text x="2.7630%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.01%)</title><rect x="2.5130%" y="581" width="0.0103%" height="15" fill="rgb(210,16,53)" fg:x="488" fg:w="2"/><text x="2.7630%" y="591.50"></text></g><g><title>num_prime::nt_funcs::factorize64_advanced (41 samples, 0.21%)</title><rect x="2.3276%" y="661" width="0.2111%" height="15" fill="rgb(235,124,12)" fg:x="452" fg:w="41"/><text x="2.5776%" y="671.50"></text></g><g><title>num_modular::reduced::ReducedInt&lt;T,R&gt;::new (3 samples, 0.02%)</title><rect x="2.5233%" y="645" width="0.0154%" height="15" fill="rgb(224,169,11)" fg:x="490" fg:w="3"/><text x="2.7733%" y="655.50"></text></g><g><title>&lt;num_modular::monty::Montgomery&lt;u64,u64&gt; as num_modular::Reducer&lt;u64&gt;&gt;::new (3 samples, 0.02%)</title><rect x="2.5233%" y="629" width="0.0154%" height="15" fill="rgb(250,166,2)" fg:x="490" fg:w="3"/><text x="2.7733%" y="639.50"></text></g><g><title>num_prime::nt_funcs::is_prime64_miller (2 samples, 0.01%)</title><rect x="2.5388%" y="661" width="0.0103%" height="15" fill="rgb(242,216,29)" fg:x="493" fg:w="2"/><text x="2.7888%" y="671.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::all (2 samples, 0.01%)</title><rect x="2.5388%" y="645" width="0.0103%" height="15" fill="rgb(230,116,27)" fg:x="493" fg:w="2"/><text x="2.7888%" y="655.50"></text></g><g><title>num_prime::nt_funcs::is_prime64_miller::{{closure}} (2 samples, 0.01%)</title><rect x="2.5388%" y="629" width="0.0103%" height="15" fill="rgb(228,99,48)" fg:x="493" fg:w="2"/><text x="2.7888%" y="639.50"></text></g><g><title>num_prime::primality::&lt;impl num_prime::traits::PrimalityUtils for T&gt;::is_sprp (2 samples, 0.01%)</title><rect x="2.5388%" y="613" width="0.0103%" height="15" fill="rgb(253,11,6)" fg:x="493" fg:w="2"/><text x="2.7888%" y="623.50"></text></g><g><title>num_prime::primality::&lt;impl num_prime::traits::PrimalityUtils for T&gt;::test_sprp (20 samples, 0.10%)</title><rect x="2.5490%" y="661" width="0.1030%" height="15" fill="rgb(247,143,39)" fg:x="495" fg:w="20"/><text x="2.7990%" y="671.50"></text></g><g><title>&lt;num_prime::mint::Mint&lt;T,R&gt; as num_modular::ModularPow&lt;&amp;num_prime::mint::Mint&lt;T,R&gt;,&amp;num_prime::mint::Mint&lt;T,R&gt;&gt;&gt;::powm (5 samples, 0.03%)</title><rect x="2.6263%" y="645" width="0.0257%" height="15" fill="rgb(236,97,10)" fg:x="510" fg:w="5"/><text x="2.8763%" y="655.50"></text></g><g><title>num_modular::reduced::ReducedInt&lt;T,R&gt;::new (4 samples, 0.02%)</title><rect x="2.6314%" y="629" width="0.0206%" height="15" fill="rgb(233,208,19)" fg:x="511" fg:w="4"/><text x="2.8814%" y="639.50"></text></g><g><title>&lt;num_modular::monty::Montgomery&lt;u32,u32&gt; as num_modular::Reducer&lt;u32&gt;&gt;::new (4 samples, 0.02%)</title><rect x="2.6314%" y="613" width="0.0206%" height="15" fill="rgb(216,164,2)" fg:x="511" fg:w="4"/><text x="2.8814%" y="623.50"></text></g><g><title>[unknown] (456 samples, 2.35%)</title><rect x="0.3193%" y="677" width="2.3482%" height="15" fill="rgb(220,129,5)" fg:x="62" fg:w="456"/><text x="0.5693%" y="687.50">[..</text></g><g><title>rand::random (3 samples, 0.02%)</title><rect x="2.6520%" y="661" width="0.0154%" height="15" fill="rgb(242,17,10)" fg:x="515" fg:w="3"/><text x="2.9020%" y="671.50"></text></g><g><title>__GI___libc_free (3 samples, 0.02%)</title><rect x="2.6675%" y="677" width="0.0154%" height="15" fill="rgb(242,107,0)" fg:x="518" fg:w="3"/><text x="2.9175%" y="687.50"></text></g><g><title>__GI___libc_malloc (6 samples, 0.03%)</title><rect x="2.6829%" y="677" width="0.0309%" height="15" fill="rgb(251,28,31)" fg:x="521" fg:w="6"/><text x="2.9329%" y="687.50"></text></g><g><title>core::cmp::Ord::max (5 samples, 0.03%)</title><rect x="3.0074%" y="405" width="0.0257%" height="15" fill="rgb(233,223,10)" fg:x="584" fg:w="5"/><text x="3.2574%" y="415.50"></text></g><g><title>core::cmp::max_by (5 samples, 0.03%)</title><rect x="3.0074%" y="389" width="0.0257%" height="15" fill="rgb(215,21,27)" fg:x="584" fg:w="5"/><text x="3.2574%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (9 samples, 0.05%)</title><rect x="3.0486%" y="357" width="0.0463%" height="15" fill="rgb(232,23,21)" fg:x="592" fg:w="9"/><text x="3.2986%" y="367.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::full_range (6 samples, 0.03%)</title><rect x="3.0640%" y="341" width="0.0309%" height="15" fill="rgb(244,5,23)" fg:x="595" fg:w="6"/><text x="3.3140%" y="351.50"></text></g><g><title>alloc::collections::btree::navigate::full_range (6 samples, 0.03%)</title><rect x="3.0640%" y="325" width="0.0309%" height="15" fill="rgb(226,81,46)" fg:x="595" fg:w="6"/><text x="3.3140%" y="335.50"></text></g><g><title>__GI___libc_free (34 samples, 0.18%)</title><rect x="3.2700%" y="213" width="0.1751%" height="15" fill="rgb(247,70,30)" fg:x="635" fg:w="34"/><text x="3.5200%" y="223.50"></text></g><g><title>_int_free (16 samples, 0.08%)</title><rect x="3.3627%" y="197" width="0.0824%" height="15" fill="rgb(212,68,19)" fg:x="653" fg:w="16"/><text x="3.6127%" y="207.50"></text></g><g><title>tcache_put (4 samples, 0.02%)</title><rect x="3.4245%" y="181" width="0.0206%" height="15" fill="rgb(240,187,13)" fg:x="665" fg:w="4"/><text x="3.6745%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (37 samples, 0.19%)</title><rect x="3.2648%" y="245" width="0.1905%" height="15" fill="rgb(223,113,26)" fg:x="634" fg:w="37"/><text x="3.5148%" y="255.50"></text></g><g><title>alloc::alloc::dealloc (37 samples, 0.19%)</title><rect x="3.2648%" y="229" width="0.1905%" height="15" fill="rgb(206,192,2)" fg:x="634" fg:w="37"/><text x="3.5148%" y="239.50"></text></g><g><title>__rust_dealloc (2 samples, 0.01%)</title><rect x="3.4451%" y="213" width="0.0103%" height="15" fill="rgb(241,108,4)" fg:x="669" fg:w="2"/><text x="3.6951%" y="223.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (42 samples, 0.22%)</title><rect x="3.2648%" y="277" width="0.2163%" height="15" fill="rgb(247,173,49)" fg:x="634" fg:w="42"/><text x="3.5148%" y="287.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (42 samples, 0.22%)</title><rect x="3.2648%" y="261" width="0.2163%" height="15" fill="rgb(224,114,35)" fg:x="634" fg:w="42"/><text x="3.5148%" y="271.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::ascend (5 samples, 0.03%)</title><rect x="3.4554%" y="245" width="0.0257%" height="15" fill="rgb(245,159,27)" fg:x="671" fg:w="5"/><text x="3.7054%" y="255.50"></text></g><g><title>core::ptr::read (5 samples, 0.03%)</title><rect x="3.4863%" y="229" width="0.0257%" height="15" fill="rgb(245,172,44)" fg:x="677" fg:w="5"/><text x="3.7363%" y="239.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (50 samples, 0.26%)</title><rect x="3.2597%" y="293" width="0.2575%" height="15" fill="rgb(236,23,11)" fg:x="633" fg:w="50"/><text x="3.5097%" y="303.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::take_front (7 samples, 0.04%)</title><rect x="3.4811%" y="277" width="0.0360%" height="15" fill="rgb(205,117,38)" fg:x="676" fg:w="7"/><text x="3.7311%" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (6 samples, 0.03%)</title><rect x="3.4863%" y="261" width="0.0309%" height="15" fill="rgb(237,72,25)" fg:x="677" fg:w="6"/><text x="3.7363%" y="271.50"></text></g><g><title>core::mem::replace (6 samples, 0.03%)</title><rect x="3.4863%" y="245" width="0.0309%" height="15" fill="rgb(244,70,9)" fg:x="677" fg:w="6"/><text x="3.7363%" y="255.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::first_leaf_edge (9 samples, 0.05%)</title><rect x="3.6820%" y="197" width="0.0463%" height="15" fill="rgb(217,125,39)" fg:x="715" fg:w="9"/><text x="3.9320%" y="207.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (14 samples, 0.07%)</title><rect x="3.6820%" y="213" width="0.0721%" height="15" fill="rgb(235,36,10)" fg:x="715" fg:w="14"/><text x="3.9320%" y="223.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (5 samples, 0.03%)</title><rect x="3.7283%" y="197" width="0.0257%" height="15" fill="rgb(251,123,47)" fg:x="724" fg:w="5"/><text x="3.9783%" y="207.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::force (5 samples, 0.03%)</title><rect x="3.7283%" y="181" width="0.0257%" height="15" fill="rgb(221,13,13)" fg:x="724" fg:w="5"/><text x="3.9783%" y="191.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::{{closure}} (21 samples, 0.11%)</title><rect x="3.6820%" y="245" width="0.1081%" height="15" fill="rgb(238,131,9)" fg:x="715" fg:w="21"/><text x="3.9320%" y="255.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (21 samples, 0.11%)</title><rect x="3.6820%" y="229" width="0.1081%" height="15" fill="rgb(211,50,8)" fg:x="715" fg:w="21"/><text x="3.9320%" y="239.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (7 samples, 0.04%)</title><rect x="3.7541%" y="213" width="0.0360%" height="15" fill="rgb(245,182,24)" fg:x="729" fg:w="7"/><text x="4.0041%" y="223.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (2 samples, 0.01%)</title><rect x="3.7798%" y="197" width="0.0103%" height="15" fill="rgb(242,14,37)" fg:x="734" fg:w="2"/><text x="4.0298%" y="207.50"></text></g><g><title>core::ptr::read (8 samples, 0.04%)</title><rect x="3.7901%" y="245" width="0.0412%" height="15" fill="rgb(246,228,12)" fg:x="736" fg:w="8"/><text x="4.0401%" y="255.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (63 samples, 0.32%)</title><rect x="3.5172%" y="277" width="0.3244%" height="15" fill="rgb(213,55,15)" fg:x="683" fg:w="63"/><text x="3.7672%" y="287.50"></text></g><g><title>alloc::collections::btree::mem::replace (56 samples, 0.29%)</title><rect x="3.5532%" y="261" width="0.2884%" height="15" fill="rgb(209,9,3)" fg:x="690" fg:w="56"/><text x="3.8032%" y="271.50"></text></g><g><title>core::ptr::write (2 samples, 0.01%)</title><rect x="3.8313%" y="245" width="0.0103%" height="15" fill="rgb(230,59,30)" fg:x="744" fg:w="2"/><text x="4.0813%" y="255.50"></text></g><g><title>core::mem::drop (157 samples, 0.81%)</title><rect x="3.0949%" y="357" width="0.8085%" height="15" fill="rgb(209,121,21)" fg:x="601" fg:w="157"/><text x="3.3449%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;u64,usize&gt;&gt; (157 samples, 0.81%)</title><rect x="3.0949%" y="341" width="0.8085%" height="15" fill="rgb(220,109,13)" fg:x="601" fg:w="157"/><text x="3.3449%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (157 samples, 0.81%)</title><rect x="3.0949%" y="325" width="0.8085%" height="15" fill="rgb(232,18,1)" fg:x="601" fg:w="157"/><text x="3.3449%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (153 samples, 0.79%)</title><rect x="3.1155%" y="309" width="0.7879%" height="15" fill="rgb(215,41,42)" fg:x="605" fg:w="153"/><text x="3.3655%" y="319.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (75 samples, 0.39%)</title><rect x="3.5172%" y="293" width="0.3862%" height="15" fill="rgb(224,123,36)" fg:x="683" fg:w="75"/><text x="3.7672%" y="303.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;BorrowType,K,V&gt;::init_front (12 samples, 0.06%)</title><rect x="3.8416%" y="277" width="0.0618%" height="15" fill="rgb(240,125,3)" fg:x="746" fg:w="12"/><text x="4.0916%" y="287.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::first_leaf_edge (4 samples, 0.02%)</title><rect x="3.8828%" y="261" width="0.0206%" height="15" fill="rgb(205,98,50)" fg:x="754" fg:w="4"/><text x="4.1328%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;max_order_elements::ModularRing&gt; (170 samples, 0.88%)</title><rect x="3.0331%" y="405" width="0.8754%" height="15" fill="rgb(205,185,37)" fg:x="589" fg:w="170"/><text x="3.2831%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;u64,usize&gt;&gt; (170 samples, 0.88%)</title><rect x="3.0331%" y="389" width="0.8754%" height="15" fill="rgb(238,207,15)" fg:x="589" fg:w="170"/><text x="3.2831%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (167 samples, 0.86%)</title><rect x="3.0486%" y="373" width="0.8600%" height="15" fill="rgb(213,199,42)" fg:x="592" fg:w="167"/><text x="3.2986%" y="383.50"></text></g><g><title>core::num::&lt;impl i64&gt;::signum (42 samples, 0.22%)</title><rect x="4.0939%" y="389" width="0.2163%" height="15" fill="rgb(235,201,11)" fg:x="795" fg:w="42"/><text x="4.3439%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (42 samples, 0.22%)</title><rect x="4.0939%" y="373" width="0.2163%" height="15" fill="rgb(207,46,11)" fg:x="795" fg:w="42"/><text x="4.3439%" y="383.50"></text></g><g><title>&lt;num_modular::reduced::ReducedInt&lt;T,R&gt; as num_modular::ModularInteger&gt;::convert (377 samples, 1.94%)</title><rect x="4.4904%" y="357" width="1.9414%" height="15" fill="rgb(241,35,35)" fg:x="872" fg:w="377"/><text x="4.7404%" y="367.50">&lt;..</text></g><g><title>&lt;num_modular::monty::Montgomery&lt;u64,u64&gt; as num_modular::Reducer&lt;u64&gt;&gt;::transform (377 samples, 1.94%)</title><rect x="4.4904%" y="341" width="1.9414%" height="15" fill="rgb(243,32,47)" fg:x="872" fg:w="377"/><text x="4.7404%" y="351.50">&lt;..</text></g><g><title>__umodti3 (365 samples, 1.88%)</title><rect x="4.5522%" y="325" width="1.8796%" height="15" fill="rgb(247,202,23)" fg:x="884" fg:w="365"/><text x="4.8022%" y="335.50">_..</text></g><g><title>compiler_builtins::int::udiv::__umodti3 (363 samples, 1.87%)</title><rect x="4.5625%" y="309" width="1.8693%" height="15" fill="rgb(219,102,11)" fg:x="886" fg:w="363"/><text x="4.8125%" y="319.50">c..</text></g><g><title>compiler_builtins::int::specialized_div_rem::u128_div_rem (363 samples, 1.87%)</title><rect x="4.5625%" y="293" width="1.8693%" height="15" fill="rgb(243,110,44)" fg:x="886" fg:w="363"/><text x="4.8125%" y="303.50">c..</text></g><g><title>compiler_builtins::int::specialized_div_rem::u128_by_u64_div_rem (361 samples, 1.86%)</title><rect x="4.5728%" y="277" width="1.8590%" height="15" fill="rgb(222,74,54)" fg:x="888" fg:w="361"/><text x="4.8228%" y="287.50">c..</text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (29 samples, 0.15%)</title><rect x="6.7511%" y="229" width="0.1493%" height="15" fill="rgb(216,99,12)" fg:x="1311" fg:w="29"/><text x="7.0011%" y="239.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (29 samples, 0.15%)</title><rect x="6.7511%" y="213" width="0.1493%" height="15" fill="rgb(226,22,26)" fg:x="1311" fg:w="29"/><text x="7.0011%" y="223.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (20 samples, 0.10%)</title><rect x="6.7975%" y="197" width="0.1030%" height="15" fill="rgb(217,163,10)" fg:x="1320" fg:w="20"/><text x="7.0475%" y="207.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (48 samples, 0.25%)</title><rect x="6.7511%" y="277" width="0.2472%" height="15" fill="rgb(213,25,53)" fg:x="1311" fg:w="48"/><text x="7.0011%" y="287.50"></text></g><g><title>alloc::collections::btree::mem::replace (48 samples, 0.25%)</title><rect x="6.7511%" y="261" width="0.2472%" height="15" fill="rgb(252,105,26)" fg:x="1311" fg:w="48"/><text x="7.0011%" y="271.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::{{closure}} (48 samples, 0.25%)</title><rect x="6.7511%" y="245" width="0.2472%" height="15" fill="rgb(220,39,43)" fg:x="1311" fg:w="48"/><text x="7.0011%" y="255.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (19 samples, 0.10%)</title><rect x="6.9005%" y="229" width="0.0978%" height="15" fill="rgb(229,68,48)" fg:x="1340" fg:w="19"/><text x="7.1505%" y="239.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (19 samples, 0.10%)</title><rect x="6.9005%" y="213" width="0.0978%" height="15" fill="rgb(252,8,32)" fg:x="1340" fg:w="19"/><text x="7.1505%" y="223.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::force (19 samples, 0.10%)</title><rect x="6.9005%" y="197" width="0.0978%" height="15" fill="rgb(223,20,43)" fg:x="1340" fg:w="19"/><text x="7.1505%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (91 samples, 0.47%)</title><rect x="6.6224%" y="325" width="0.4686%" height="15" fill="rgb(229,81,49)" fg:x="1286" fg:w="91"/><text x="6.8724%" y="335.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (91 samples, 0.47%)</title><rect x="6.6224%" y="309" width="0.4686%" height="15" fill="rgb(236,28,36)" fg:x="1286" fg:w="91"/><text x="6.8724%" y="319.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_unchecked (66 samples, 0.34%)</title><rect x="6.7511%" y="293" width="0.3399%" height="15" fill="rgb(249,185,26)" fg:x="1311" fg:w="66"/><text x="7.0011%" y="303.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;BorrowType,K,V&gt;::init_front (18 samples, 0.09%)</title><rect x="6.9983%" y="277" width="0.0927%" height="15" fill="rgb(249,174,33)" fg:x="1359" fg:w="18"/><text x="7.2483%" y="287.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::first_leaf_edge (6 samples, 0.03%)</title><rect x="7.0601%" y="261" width="0.0309%" height="15" fill="rgb(233,201,37)" fg:x="1371" fg:w="6"/><text x="7.3101%" y="271.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="16.3448%" y="229" width="0.0103%" height="15" fill="rgb(221,78,26)" fg:x="3174" fg:w="2"/><text x="16.5948%" y="239.50"></text></g><g><title>sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="16.3448%" y="213" width="0.0103%" height="15" fill="rgb(250,127,30)" fg:x="3174" fg:w="2"/><text x="16.5948%" y="223.50"></text></g><g><title>__sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="16.3448%" y="197" width="0.0103%" height="15" fill="rgb(230,49,44)" fg:x="3174" fg:w="2"/><text x="16.5948%" y="207.50"></text></g><g><title>hrtimer_interrupt (2 samples, 0.01%)</title><rect x="16.3448%" y="181" width="0.0103%" height="15" fill="rgb(229,67,23)" fg:x="3174" fg:w="2"/><text x="16.5948%" y="191.50"></text></g><g><title>tick_program_event (2 samples, 0.01%)</title><rect x="16.3448%" y="165" width="0.0103%" height="15" fill="rgb(249,83,47)" fg:x="3174" fg:w="2"/><text x="16.5948%" y="175.50"></text></g><g><title>core::num::&lt;impl u128&gt;::overflowing_add (303 samples, 1.56%)</title><rect x="16.3603%" y="229" width="1.5603%" height="15" fill="rgb(215,43,3)" fg:x="3177" fg:w="303"/><text x="16.6103%" y="239.50"></text></g><g><title>&lt;num_modular::monty::Montgomery&lt;u64,u64&gt; as num_modular::Reducer&lt;u64&gt;&gt;::mul (1,599 samples, 8.23%)</title><rect x="11.7205%" y="261" width="8.2342%" height="15" fill="rgb(238,154,13)" fg:x="2276" fg:w="1599"/><text x="11.9705%" y="271.50">&lt;num_modula..</text></g><g><title>num_modular::monty::Montgomery&lt;u64,u64&gt;::reduce (1,051 samples, 5.41%)</title><rect x="14.5425%" y="245" width="5.4122%" height="15" fill="rgb(219,56,2)" fg:x="2824" fg:w="1051"/><text x="14.7925%" y="255.50">num_mod..</text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (395 samples, 2.03%)</title><rect x="17.9206%" y="229" width="2.0341%" height="15" fill="rgb(233,0,4)" fg:x="3480" fg:w="395"/><text x="18.1706%" y="239.50">c..</text></g><g><title>core::num::&lt;impl u128&gt;::overflowing_add (274 samples, 1.41%)</title><rect x="28.1837%" y="229" width="1.4110%" height="15" fill="rgb(235,30,7)" fg:x="5473" fg:w="274"/><text x="28.4337%" y="239.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="29.5844%" y="213" width="0.0103%" height="15" fill="rgb(250,79,13)" fg:x="5745" fg:w="2"/><text x="29.8344%" y="223.50"></text></g><g><title>sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="29.5844%" y="197" width="0.0103%" height="15" fill="rgb(211,146,34)" fg:x="5745" fg:w="2"/><text x="29.8344%" y="207.50"></text></g><g><title>__sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="29.5844%" y="181" width="0.0103%" height="15" fill="rgb(228,22,38)" fg:x="5745" fg:w="2"/><text x="29.8344%" y="191.50"></text></g><g><title>hrtimer_interrupt (2 samples, 0.01%)</title><rect x="29.5844%" y="165" width="0.0103%" height="15" fill="rgb(235,168,5)" fg:x="5745" fg:w="2"/><text x="29.8344%" y="175.50"></text></g><g><title>__hrtimer_run_queues (2 samples, 0.01%)</title><rect x="29.5844%" y="149" width="0.0103%" height="15" fill="rgb(221,155,16)" fg:x="5745" fg:w="2"/><text x="29.8344%" y="159.50"></text></g><g><title>&lt;num_modular::monty::Montgomery&lt;u64,u64&gt; as num_modular::Reducer&lt;u64&gt;&gt;::square (2,009 samples, 10.35%)</title><rect x="19.9547%" y="261" width="10.3455%" height="15" fill="rgb(215,215,53)" fg:x="3875" fg:w="2009"/><text x="20.2047%" y="271.50">&lt;num_modular::m..</text></g><g><title>num_modular::monty::Montgomery&lt;u64,u64&gt;::reduce (1,186 samples, 6.11%)</title><rect x="24.1928%" y="245" width="6.1074%" height="15" fill="rgb(223,4,10)" fg:x="4698" fg:w="1186"/><text x="24.4428%" y="255.50">num_modu..</text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (137 samples, 0.71%)</title><rect x="29.5947%" y="229" width="0.7055%" height="15" fill="rgb(234,103,6)" fg:x="5747" fg:w="137"/><text x="29.8447%" y="239.50"></text></g><g><title>&lt;num_modular::reduced::ReducedInt&lt;T,R&gt; as num_traits::pow::Pow&lt;T&gt;&gt;::pow (4,954 samples, 25.51%)</title><rect x="8.5483%" y="293" width="25.5111%" height="15" fill="rgb(227,97,0)" fg:x="1660" fg:w="4954"/><text x="8.7983%" y="303.50">&lt;num_modular::reduced::ReducedInt&lt;T,R&gt; as..</text></g><g><title>&lt;num_modular::monty::Montgomery&lt;u64,u64&gt; as num_modular::Reducer&lt;u64&gt;&gt;::pow (4,941 samples, 25.44%)</title><rect x="8.6153%" y="277" width="25.4442%" height="15" fill="rgb(234,150,53)" fg:x="1673" fg:w="4941"/><text x="8.8653%" y="287.50">&lt;num_modular::monty::Montgomery&lt;u64,u64&gt; ..</text></g><g><title>&lt;num_modular::monty::Montgomery&lt;u64,u64&gt; as num_modular::Reducer&lt;u64&gt;&gt;::transform (730 samples, 3.76%)</title><rect x="30.3002%" y="261" width="3.7592%" height="15" fill="rgb(228,201,54)" fg:x="5884" fg:w="730"/><text x="30.5502%" y="271.50">&lt;num..</text></g><g><title>__umodti3 (724 samples, 3.73%)</title><rect x="30.3311%" y="245" width="3.7283%" height="15" fill="rgb(222,22,37)" fg:x="5890" fg:w="724"/><text x="30.5811%" y="255.50">__um..</text></g><g><title>compiler_builtins::int::udiv::__umodti3 (714 samples, 3.68%)</title><rect x="30.3826%" y="229" width="3.6768%" height="15" fill="rgb(237,53,32)" fg:x="5900" fg:w="714"/><text x="30.6326%" y="239.50">comp..</text></g><g><title>compiler_builtins::int::specialized_div_rem::u128_div_rem (714 samples, 3.68%)</title><rect x="30.3826%" y="213" width="3.6768%" height="15" fill="rgb(233,25,53)" fg:x="5900" fg:w="714"/><text x="30.6326%" y="223.50">comp..</text></g><g><title>compiler_builtins::int::specialized_div_rem::u128_by_u64_div_rem (709 samples, 3.65%)</title><rect x="30.4084%" y="197" width="3.6511%" height="15" fill="rgb(210,40,34)" fg:x="5905" fg:w="709"/><text x="30.6584%" y="207.50">comp..</text></g><g><title>max_order_elements::ModularRing::has_max_order_helper (5,743 samples, 29.57%)</title><rect x="4.4904%" y="373" width="29.5741%" height="15" fill="rgb(241,220,44)" fg:x="872" fg:w="5743"/><text x="4.7404%" y="383.50">max_order_elements::ModularRing::has_max_order_h..</text></g><g><title>core::iter::traits::iterator::Iterator::all (5,366 samples, 27.63%)</title><rect x="6.4318%" y="357" width="27.6327%" height="15" fill="rgb(235,28,35)" fg:x="1249" fg:w="5366"/><text x="6.6818%" y="367.50">core::iter::traits::iterator::Iterator::all</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5,366 samples, 27.63%)</title><rect x="6.4318%" y="341" width="27.6327%" height="15" fill="rgb(210,56,17)" fg:x="1249" fg:w="5366"/><text x="6.6818%" y="351.50">core::iter::traits::iterator::Iterator::try_..</text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (5,238 samples, 26.97%)</title><rect x="7.0910%" y="325" width="26.9736%" height="15" fill="rgb(224,130,29)" fg:x="1377" fg:w="5238"/><text x="7.3410%" y="335.50">core::iter::traits::iterator::Iterator::all..</text></g><g><title>max_order_elements::ModularRing::has_max_order_helper::{{closure}} (5,238 samples, 26.97%)</title><rect x="7.0910%" y="309" width="26.9736%" height="15" fill="rgb(235,212,8)" fg:x="1377" fg:w="5238"/><text x="7.3410%" y="319.50">max_order_elements::ModularRing::has_max_or..</text></g><g><title>asm_sysvec_apic_timer_interrupt (5 samples, 0.03%)</title><rect x="39.2399%" y="341" width="0.0257%" height="15" fill="rgb(223,33,50)" fg:x="7620" fg:w="5"/><text x="39.4899%" y="351.50"></text></g><g><title>sysvec_apic_timer_interrupt (5 samples, 0.03%)</title><rect x="39.2399%" y="325" width="0.0257%" height="15" fill="rgb(219,149,13)" fg:x="7620" fg:w="5"/><text x="39.4899%" y="335.50"></text></g><g><title>irqentry_exit (5 samples, 0.03%)</title><rect x="39.2399%" y="309" width="0.0257%" height="15" fill="rgb(250,156,29)" fg:x="7620" fg:w="5"/><text x="39.4899%" y="319.50"></text></g><g><title>irqentry_exit_to_user_mode (5 samples, 0.03%)</title><rect x="39.2399%" y="293" width="0.0257%" height="15" fill="rgb(216,193,19)" fg:x="7620" fg:w="5"/><text x="39.4899%" y="303.50"></text></g><g><title>exit_to_user_mode_prepare (5 samples, 0.03%)</title><rect x="39.2399%" y="277" width="0.0257%" height="15" fill="rgb(216,135,14)" fg:x="7620" fg:w="5"/><text x="39.4899%" y="287.50"></text></g><g><title>exit_to_user_mode_loop (5 samples, 0.03%)</title><rect x="39.2399%" y="261" width="0.0257%" height="15" fill="rgb(241,47,5)" fg:x="7620" fg:w="5"/><text x="39.4899%" y="271.50"></text></g><g><title>schedule (5 samples, 0.03%)</title><rect x="39.2399%" y="245" width="0.0257%" height="15" fill="rgb(233,42,35)" fg:x="7620" fg:w="5"/><text x="39.4899%" y="255.50"></text></g><g><title>__schedule (5 samples, 0.03%)</title><rect x="39.2399%" y="229" width="0.0257%" height="15" fill="rgb(231,13,6)" fg:x="7620" fg:w="5"/><text x="39.4899%" y="239.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 0.03%)</title><rect x="39.2399%" y="213" width="0.0257%" height="15" fill="rgb(207,181,40)" fg:x="7620" fg:w="5"/><text x="39.4899%" y="223.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.03%)</title><rect x="39.2399%" y="197" width="0.0257%" height="15" fill="rgb(254,173,49)" fg:x="7620" fg:w="5"/><text x="39.4899%" y="207.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.03%)</title><rect x="39.2399%" y="181" width="0.0257%" height="15" fill="rgb(221,1,38)" fg:x="7620" fg:w="5"/><text x="39.4899%" y="191.50"></text></g><g><title>x86_pmu_enable (5 samples, 0.03%)</title><rect x="39.2399%" y="165" width="0.0257%" height="15" fill="rgb(206,124,46)" fg:x="7620" fg:w="5"/><text x="39.4899%" y="175.50"></text></g><g><title>intel_pmu_enable_all (5 samples, 0.03%)</title><rect x="39.2399%" y="149" width="0.0257%" height="15" fill="rgb(249,21,11)" fg:x="7620" fg:w="5"/><text x="39.4899%" y="159.50"></text></g><g><title>native_write_msr (5 samples, 0.03%)</title><rect x="39.2399%" y="133" width="0.0257%" height="15" fill="rgb(222,201,40)" fg:x="7620" fg:w="5"/><text x="39.4899%" y="143.50"></text></g><g><title>max_order_elements::ModularRing::has_max_order (7,310 samples, 37.64%)</title><rect x="4.3102%" y="389" width="37.6435%" height="15" fill="rgb(235,61,29)" fg:x="837" fg:w="7310"/><text x="4.5602%" y="399.50">max_order_elements::ModularRing::has_max_order</text></g><g><title>num_integer::gcd (1,532 samples, 7.89%)</title><rect x="34.0646%" y="373" width="7.8892%" height="15" fill="rgb(219,207,3)" fg:x="6615" fg:w="1532"/><text x="34.3146%" y="383.50">num_integer..</text></g><g><title>&lt;u64 as num_integer::Integer&gt;::gcd (1,532 samples, 7.89%)</title><rect x="34.0646%" y="357" width="7.8892%" height="15" fill="rgb(222,56,46)" fg:x="6615" fg:w="1532"/><text x="34.3146%" y="367.50">&lt;u64 as num..</text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (522 samples, 2.69%)</title><rect x="39.2657%" y="341" width="2.6881%" height="15" fill="rgb(239,76,54)" fg:x="7625" fg:w="522"/><text x="39.5157%" y="351.50">co..</text></g><g><title>max_order_elements::ModularRing::max_order_element_close_to (7,403 samples, 38.12%)</title><rect x="3.9085%" y="405" width="38.1225%" height="15" fill="rgb(231,124,27)" fg:x="759" fg:w="7403"/><text x="4.1585%" y="415.50">max_order_elements::ModularRing::max_order_element_close_to</text></g><g><title>std::f64::&lt;impl f64&gt;::round (15 samples, 0.08%)</title><rect x="41.9538%" y="389" width="0.0772%" height="15" fill="rgb(249,195,6)" fg:x="8147" fg:w="15"/><text x="42.2038%" y="399.50"></text></g><g><title>__round (15 samples, 0.08%)</title><rect x="41.9538%" y="373" width="0.0772%" height="15" fill="rgb(237,174,47)" fg:x="8147" fg:w="15"/><text x="42.2038%" y="383.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_kv (3 samples, 0.02%)</title><rect x="42.3245%" y="277" width="0.0154%" height="15" fill="rgb(206,201,31)" fg:x="8219" fg:w="3"/><text x="42.5745%" y="287.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (3 samples, 0.02%)</title><rect x="42.3245%" y="261" width="0.0154%" height="15" fill="rgb(231,57,52)" fg:x="8219" fg:w="3"/><text x="42.5745%" y="271.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::{{closure}} (8 samples, 0.04%)</title><rect x="42.3142%" y="293" width="0.0412%" height="15" fill="rgb(248,177,22)" fg:x="8217" fg:w="8"/><text x="42.5642%" y="303.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (3 samples, 0.02%)</title><rect x="42.3400%" y="277" width="0.0154%" height="15" fill="rgb(215,211,37)" fg:x="8222" fg:w="3"/><text x="42.5900%" y="287.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (3 samples, 0.02%)</title><rect x="42.3400%" y="261" width="0.0154%" height="15" fill="rgb(241,128,51)" fg:x="8222" fg:w="3"/><text x="42.5900%" y="271.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::force (3 samples, 0.02%)</title><rect x="42.3400%" y="245" width="0.0154%" height="15" fill="rgb(227,165,31)" fg:x="8222" fg:w="3"/><text x="42.5900%" y="255.50"></text></g><g><title>core::ptr::read (5 samples, 0.03%)</title><rect x="42.3554%" y="293" width="0.0257%" height="15" fill="rgb(228,167,24)" fg:x="8225" fg:w="5"/><text x="42.6054%" y="303.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (19 samples, 0.10%)</title><rect x="42.3142%" y="325" width="0.0978%" height="15" fill="rgb(228,143,12)" fg:x="8217" fg:w="19"/><text x="42.5642%" y="335.50"></text></g><g><title>alloc::collections::btree::mem::replace (19 samples, 0.10%)</title><rect x="42.3142%" y="309" width="0.0978%" height="15" fill="rgb(249,149,8)" fg:x="8217" fg:w="19"/><text x="42.5642%" y="319.50"></text></g><g><title>core::ptr::write (6 samples, 0.03%)</title><rect x="42.3812%" y="293" width="0.0309%" height="15" fill="rgb(243,35,44)" fg:x="8230" fg:w="6"/><text x="42.6312%" y="303.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.12%)</title><rect x="42.2936%" y="357" width="0.1236%" height="15" fill="rgb(246,89,9)" fg:x="8213" fg:w="24"/><text x="42.5436%" y="367.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_unchecked (20 samples, 0.10%)</title><rect x="42.3142%" y="341" width="0.1030%" height="15" fill="rgb(233,213,13)" fg:x="8217" fg:w="20"/><text x="42.5642%" y="351.50"></text></g><g><title>core::ops::function::FnMut::call_mut (429 samples, 2.21%)</title><rect x="42.4172%" y="341" width="2.2092%" height="15" fill="rgb(233,141,41)" fg:x="8237" fg:w="429"/><text x="42.6672%" y="351.50">c..</text></g><g><title>num_integer::lcm (429 samples, 2.21%)</title><rect x="42.4172%" y="325" width="2.2092%" height="15" fill="rgb(239,167,4)" fg:x="8237" fg:w="429"/><text x="42.6672%" y="335.50">n..</text></g><g><title>&lt;u64 as num_integer::Integer&gt;::lcm (429 samples, 2.21%)</title><rect x="42.4172%" y="309" width="2.2092%" height="15" fill="rgb(209,217,16)" fg:x="8237" fg:w="429"/><text x="42.6672%" y="319.50">&lt;..</text></g><g><title>&lt;u64 as num_integer::Integer&gt;::gcd_lcm (429 samples, 2.21%)</title><rect x="42.4172%" y="293" width="2.2092%" height="15" fill="rgb(219,88,35)" fg:x="8237" fg:w="429"/><text x="42.6672%" y="303.50">&lt;..</text></g><g><title>&lt;u64 as num_integer::Integer&gt;::gcd (301 samples, 1.55%)</title><rect x="43.0764%" y="277" width="1.5500%" height="15" fill="rgb(220,193,23)" fg:x="8365" fg:w="301"/><text x="43.3264%" y="287.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (67 samples, 0.35%)</title><rect x="44.2814%" y="261" width="0.3450%" height="15" fill="rgb(230,90,52)" fg:x="8599" fg:w="67"/><text x="44.5314%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (513 samples, 2.64%)</title><rect x="42.0876%" y="389" width="2.6417%" height="15" fill="rgb(252,106,19)" fg:x="8173" fg:w="513"/><text x="42.3376%" y="399.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (488 samples, 2.51%)</title><rect x="42.2164%" y="373" width="2.5130%" height="15" fill="rgb(206,74,20)" fg:x="8198" fg:w="488"/><text x="42.4664%" y="383.50">co..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (449 samples, 2.31%)</title><rect x="42.4172%" y="357" width="2.3122%" height="15" fill="rgb(230,138,44)" fg:x="8237" fg:w="449"/><text x="42.6672%" y="367.50">c..</text></g><g><title>max_order_elements::ModularRing::new::{{closure}} (20 samples, 0.10%)</title><rect x="44.6264%" y="341" width="0.1030%" height="15" fill="rgb(235,182,43)" fg:x="8666" fg:w="20"/><text x="44.8764%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::pow (9 samples, 0.05%)</title><rect x="44.6830%" y="325" width="0.0463%" height="15" fill="rgb(242,16,51)" fg:x="8677" fg:w="9"/><text x="44.9330%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::map (5 samples, 0.03%)</title><rect x="44.7345%" y="389" width="0.0257%" height="15" fill="rgb(248,9,4)" fg:x="8687" fg:w="5"/><text x="44.9845%" y="399.50"></text></g><g><title>core::iter::adapters::map::Map&lt;I,F&gt;::new (5 samples, 0.03%)</title><rect x="44.7345%" y="373" width="0.0257%" height="15" fill="rgb(210,31,22)" fg:x="8687" fg:w="5"/><text x="44.9845%" y="383.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (3 samples, 0.02%)</title><rect x="44.7603%" y="357" width="0.0154%" height="15" fill="rgb(239,54,39)" fg:x="8692" fg:w="3"/><text x="45.0103%" y="367.50"></text></g><g><title>_int_free (25 samples, 0.13%)</title><rect x="45.0023%" y="197" width="0.1287%" height="15" fill="rgb(230,99,41)" fg:x="8739" fg:w="25"/><text x="45.2523%" y="207.50"></text></g><g><title>tcache_put (3 samples, 0.02%)</title><rect x="45.1156%" y="181" width="0.0154%" height="15" fill="rgb(253,106,12)" fg:x="8761" fg:w="3"/><text x="45.3656%" y="191.50"></text></g><g><title>__GI___libc_free (39 samples, 0.20%)</title><rect x="44.9354%" y="213" width="0.2008%" height="15" fill="rgb(213,46,41)" fg:x="8726" fg:w="39"/><text x="45.1854%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (42 samples, 0.22%)</title><rect x="44.9251%" y="245" width="0.2163%" height="15" fill="rgb(215,133,35)" fg:x="8724" fg:w="42"/><text x="45.1751%" y="255.50"></text></g><g><title>alloc::alloc::dealloc (42 samples, 0.22%)</title><rect x="44.9251%" y="229" width="0.2163%" height="15" fill="rgb(213,28,5)" fg:x="8724" fg:w="42"/><text x="45.1751%" y="239.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (47 samples, 0.24%)</title><rect x="44.9251%" y="277" width="0.2420%" height="15" fill="rgb(215,77,49)" fg:x="8724" fg:w="47"/><text x="45.1751%" y="287.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (47 samples, 0.24%)</title><rect x="44.9251%" y="261" width="0.2420%" height="15" fill="rgb(248,100,22)" fg:x="8724" fg:w="47"/><text x="45.1751%" y="271.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::ascend (5 samples, 0.03%)</title><rect x="45.1414%" y="245" width="0.0257%" height="15" fill="rgb(208,67,9)" fg:x="8766" fg:w="5"/><text x="45.3914%" y="255.50"></text></g><g><title>core::ptr::read (9 samples, 0.05%)</title><rect x="45.1723%" y="229" width="0.0463%" height="15" fill="rgb(219,133,21)" fg:x="8772" fg:w="9"/><text x="45.4223%" y="239.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (61 samples, 0.31%)</title><rect x="44.9148%" y="293" width="0.3141%" height="15" fill="rgb(246,46,29)" fg:x="8722" fg:w="61"/><text x="45.1648%" y="303.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::take_front (12 samples, 0.06%)</title><rect x="45.1671%" y="277" width="0.0618%" height="15" fill="rgb(246,185,52)" fg:x="8771" fg:w="12"/><text x="45.4171%" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (11 samples, 0.06%)</title><rect x="45.1723%" y="261" width="0.0566%" height="15" fill="rgb(252,136,11)" fg:x="8772" fg:w="11"/><text x="45.4223%" y="271.50"></text></g><g><title>core::mem::replace (11 samples, 0.06%)</title><rect x="45.1723%" y="245" width="0.0566%" height="15" fill="rgb(219,138,53)" fg:x="8772" fg:w="11"/><text x="45.4223%" y="255.50"></text></g><g><title>core::ptr::write (2 samples, 0.01%)</title><rect x="45.2186%" y="229" width="0.0103%" height="15" fill="rgb(211,51,23)" fg:x="8781" fg:w="2"/><text x="45.4686%" y="239.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::first_leaf_edge (12 samples, 0.06%)</title><rect x="45.3267%" y="197" width="0.0618%" height="15" fill="rgb(247,221,28)" fg:x="8802" fg:w="12"/><text x="45.5767%" y="207.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,alloc::collections::btree::node::marker::KV&gt;&gt;::next_leaf_edge (14 samples, 0.07%)</title><rect x="45.3267%" y="213" width="0.0721%" height="15" fill="rgb(251,222,45)" fg:x="8802" fg:w="14"/><text x="45.5767%" y="223.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (2 samples, 0.01%)</title><rect x="45.3885%" y="197" width="0.0103%" height="15" fill="rgb(217,162,53)" fg:x="8814" fg:w="2"/><text x="45.6385%" y="207.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::force (2 samples, 0.01%)</title><rect x="45.3885%" y="181" width="0.0103%" height="15" fill="rgb(229,93,14)" fg:x="8814" fg:w="2"/><text x="45.6385%" y="191.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::{{closure}} (17 samples, 0.09%)</title><rect x="45.3267%" y="245" width="0.0875%" height="15" fill="rgb(209,67,49)" fg:x="8802" fg:w="17"/><text x="45.5767%" y="255.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (17 samples, 0.09%)</title><rect x="45.3267%" y="229" width="0.0875%" height="15" fill="rgb(213,87,29)" fg:x="8802" fg:w="17"/><text x="45.5767%" y="239.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (3 samples, 0.02%)</title><rect x="45.3988%" y="213" width="0.0154%" height="15" fill="rgb(205,151,52)" fg:x="8816" fg:w="3"/><text x="45.6488%" y="223.50"></text></g><g><title>core::ptr::read (6 samples, 0.03%)</title><rect x="45.4143%" y="245" width="0.0309%" height="15" fill="rgb(253,215,39)" fg:x="8819" fg:w="6"/><text x="45.6643%" y="255.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (42 samples, 0.22%)</title><rect x="45.2340%" y="277" width="0.2163%" height="15" fill="rgb(221,220,41)" fg:x="8784" fg:w="42"/><text x="45.4840%" y="287.50"></text></g><g><title>alloc::collections::btree::mem::replace (37 samples, 0.19%)</title><rect x="45.2598%" y="261" width="0.1905%" height="15" fill="rgb(218,133,21)" fg:x="8789" fg:w="37"/><text x="45.5098%" y="271.50"></text></g><g><title>core::mem::drop (139 samples, 0.72%)</title><rect x="44.7757%" y="357" width="0.7158%" height="15" fill="rgb(221,193,43)" fg:x="8695" fg:w="139"/><text x="45.0257%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;u64,usize&gt;&gt; (139 samples, 0.72%)</title><rect x="44.7757%" y="341" width="0.7158%" height="15" fill="rgb(240,128,52)" fg:x="8695" fg:w="139"/><text x="45.0257%" y="351.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (139 samples, 0.72%)</title><rect x="44.7757%" y="325" width="0.7158%" height="15" fill="rgb(253,114,12)" fg:x="8695" fg:w="139"/><text x="45.0257%" y="335.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (135 samples, 0.70%)</title><rect x="44.7963%" y="309" width="0.6952%" height="15" fill="rgb(215,223,47)" fg:x="8699" fg:w="135"/><text x="45.0463%" y="319.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (51 samples, 0.26%)</title><rect x="45.2289%" y="293" width="0.2626%" height="15" fill="rgb(248,225,23)" fg:x="8783" fg:w="51"/><text x="45.4789%" y="303.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;BorrowType,K,V&gt;::init_front (8 samples, 0.04%)</title><rect x="45.4503%" y="277" width="0.0412%" height="15" fill="rgb(250,108,0)" fg:x="8826" fg:w="8"/><text x="45.7003%" y="287.50"></text></g><g><title>core::ptr::read (2 samples, 0.01%)</title><rect x="45.4812%" y="261" width="0.0103%" height="15" fill="rgb(228,208,7)" fg:x="8832" fg:w="2"/><text x="45.7312%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;u64,usize&gt;&gt; (144 samples, 0.74%)</title><rect x="44.7603%" y="389" width="0.7415%" height="15" fill="rgb(244,45,10)" fg:x="8692" fg:w="144"/><text x="45.0103%" y="399.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (144 samples, 0.74%)</title><rect x="44.7603%" y="373" width="0.7415%" height="15" fill="rgb(207,125,25)" fg:x="8692" fg:w="144"/><text x="45.0103%" y="383.50"></text></g><g><title>core::ptr::read (2 samples, 0.01%)</title><rect x="45.4915%" y="357" width="0.0103%" height="15" fill="rgb(210,195,18)" fg:x="8834" fg:w="2"/><text x="45.7415%" y="367.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (19 samples, 0.10%)</title><rect x="45.5070%" y="341" width="0.0978%" height="15" fill="rgb(249,80,12)" fg:x="8837" fg:w="19"/><text x="45.7570%" y="351.50"></text></g><g><title>&lt;num_modular::monty::Montgomery&lt;u64,u64&gt; as num_modular::Reducer&lt;u64&gt;&gt;::new (25 samples, 0.13%)</title><rect x="45.5018%" y="373" width="0.1287%" height="15" fill="rgb(221,65,9)" fg:x="8836" fg:w="25"/><text x="45.7518%" y="383.50"></text></g><g><title>&lt;u64 as num_modular::monty::NegModInv&gt;::neginv (25 samples, 0.13%)</title><rect x="45.5018%" y="357" width="0.1287%" height="15" fill="rgb(235,49,36)" fg:x="8836" fg:w="25"/><text x="45.7518%" y="367.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_sub (5 samples, 0.03%)</title><rect x="45.6048%" y="341" width="0.0257%" height="15" fill="rgb(225,32,20)" fg:x="8856" fg:w="5"/><text x="45.8548%" y="351.50"></text></g><g><title>num_modular::reduced::ReducedInt&lt;T,R&gt;::new (105 samples, 0.54%)</title><rect x="45.5018%" y="389" width="0.5407%" height="15" fill="rgb(215,141,46)" fg:x="8836" fg:w="105"/><text x="45.7518%" y="399.50"></text></g><g><title>&lt;num_modular::monty::Montgomery&lt;u64,u64&gt; as num_modular::Reducer&lt;u64&gt;&gt;::transform (80 samples, 0.41%)</title><rect x="45.6306%" y="373" width="0.4120%" height="15" fill="rgb(250,160,47)" fg:x="8861" fg:w="80"/><text x="45.8806%" y="383.50"></text></g><g><title>__umodti3 (78 samples, 0.40%)</title><rect x="45.6409%" y="357" width="0.4017%" height="15" fill="rgb(216,222,40)" fg:x="8863" fg:w="78"/><text x="45.8909%" y="367.50"></text></g><g><title>compiler_builtins::int::udiv::__umodti3 (77 samples, 0.40%)</title><rect x="45.6460%" y="341" width="0.3965%" height="15" fill="rgb(234,217,39)" fg:x="8864" fg:w="77"/><text x="45.8960%" y="351.50"></text></g><g><title>compiler_builtins::int::specialized_div_rem::u128_div_rem (77 samples, 0.40%)</title><rect x="45.6460%" y="325" width="0.3965%" height="15" fill="rgb(207,178,40)" fg:x="8864" fg:w="77"/><text x="45.8960%" y="335.50"></text></g><g><title>compiler_builtins::int::specialized_div_rem::u128_by_u64_div_rem (75 samples, 0.39%)</title><rect x="45.6563%" y="309" width="0.3862%" height="15" fill="rgb(221,136,13)" fg:x="8866" fg:w="75"/><text x="45.9063%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (3 samples, 0.02%)</title><rect x="55.5899%" y="373" width="0.0154%" height="15" fill="rgb(249,199,10)" fg:x="10795" fg:w="3"/><text x="55.8399%" y="383.50"></text></g><g><title>core::mem::manually_drop::ManuallyDrop&lt;T&gt;::new (3 samples, 0.02%)</title><rect x="55.5899%" y="357" width="0.0154%" height="15" fill="rgb(249,222,13)" fg:x="10795" fg:w="3"/><text x="55.8399%" y="367.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.03%)</title><rect x="55.6053%" y="373" width="0.0309%" height="15" fill="rgb(244,185,38)" fg:x="10798" fg:w="6"/><text x="55.8553%" y="383.50"></text></g><g><title>core::ptr::read (4 samples, 0.02%)</title><rect x="55.6156%" y="357" width="0.0206%" height="15" fill="rgb(236,202,9)" fg:x="10800" fg:w="4"/><text x="55.8656%" y="367.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.06%)</title><rect x="55.6980%" y="341" width="0.0566%" height="15" fill="rgb(250,229,37)" fg:x="10816" fg:w="11"/><text x="55.9480%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.14%)</title><rect x="55.6362%" y="357" width="0.1390%" height="15" fill="rgb(206,174,23)" fg:x="10804" fg:w="27"/><text x="55.8862%" y="367.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::nth (4 samples, 0.02%)</title><rect x="55.7547%" y="341" width="0.0206%" height="15" fill="rgb(211,33,43)" fg:x="10827" fg:w="4"/><text x="56.0047%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (125 samples, 0.64%)</title><rect x="55.6362%" y="373" width="0.6437%" height="15" fill="rgb(245,58,50)" fg:x="10804" fg:w="125"/><text x="55.8862%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (98 samples, 0.50%)</title><rect x="55.7753%" y="357" width="0.5047%" height="15" fill="rgb(244,68,36)" fg:x="10831" fg:w="98"/><text x="56.0253%" y="367.50"></text></g><g><title>&lt;u64 as num_integer::roots::Roots&gt;::sqrt::go::guess (102 samples, 0.53%)</title><rect x="56.3314%" y="341" width="0.5253%" height="15" fill="rgb(232,229,15)" fg:x="10939" fg:w="102"/><text x="56.5814%" y="351.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (28 samples, 0.14%)</title><rect x="56.7125%" y="325" width="0.1442%" height="15" fill="rgb(254,30,23)" fg:x="11013" fg:w="28"/><text x="56.9625%" y="335.50"></text></g><g><title>&lt;u64 as num_integer::roots::Roots&gt;::sqrt::go::{{closure}} (71 samples, 0.37%)</title><rect x="56.8773%" y="325" width="0.3656%" height="15" fill="rgb(235,160,14)" fg:x="11045" fg:w="71"/><text x="57.1273%" y="335.50"></text></g><g><title>&lt;u64 as num_integer::roots::Roots&gt;::sqrt (191 samples, 0.98%)</title><rect x="56.2799%" y="373" width="0.9836%" height="15" fill="rgb(212,155,44)" fg:x="10929" fg:w="191"/><text x="56.5299%" y="383.50"></text></g><g><title>&lt;u64 as num_integer::roots::Roots&gt;::sqrt::go (182 samples, 0.94%)</title><rect x="56.3263%" y="357" width="0.9372%" height="15" fill="rgb(226,2,50)" fg:x="10938" fg:w="182"/><text x="56.5763%" y="367.50"></text></g><g><title>num_integer::roots::fixpoint (79 samples, 0.41%)</title><rect x="56.8567%" y="341" width="0.4068%" height="15" fill="rgb(234,177,6)" fg:x="11041" fg:w="79"/><text x="57.1067%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u64&gt;::lt (4 samples, 0.02%)</title><rect x="57.2429%" y="325" width="0.0206%" height="15" fill="rgb(217,24,9)" fg:x="11116" fg:w="4"/><text x="57.4929%" y="335.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,Type&gt;::borrow_mut (5 samples, 0.03%)</title><rect x="57.2635%" y="357" width="0.0257%" height="15" fill="rgb(220,13,46)" fg:x="11120" fg:w="5"/><text x="57.5135%" y="367.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;,Type&gt;::force (14 samples, 0.07%)</title><rect x="57.2893%" y="341" width="0.0721%" height="15" fill="rgb(239,221,27)" fg:x="11125" fg:w="14"/><text x="57.5393%" y="351.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::force (14 samples, 0.07%)</title><rect x="57.2893%" y="325" width="0.0721%" height="15" fill="rgb(222,198,25)" fg:x="11125" fg:w="14"/><text x="57.5393%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.06%)</title><rect x="57.4798%" y="309" width="0.0618%" height="15" fill="rgb(211,99,13)" fg:x="11162" fg:w="12"/><text x="57.7298%" y="319.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.06%)</title><rect x="57.4798%" y="293" width="0.0618%" height="15" fill="rgb(232,111,31)" fg:x="11162" fg:w="12"/><text x="57.7298%" y="303.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (4 samples, 0.02%)</title><rect x="57.5416%" y="309" width="0.0206%" height="15" fill="rgb(245,82,37)" fg:x="11174" fg:w="4"/><text x="57.7916%" y="319.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (122 samples, 0.63%)</title><rect x="57.2635%" y="373" width="0.6283%" height="15" fill="rgb(227,149,46)" fg:x="11120" fg:w="122"/><text x="57.5135%" y="383.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (117 samples, 0.60%)</title><rect x="57.2893%" y="357" width="0.6025%" height="15" fill="rgb(218,36,50)" fg:x="11125" fg:w="117"/><text x="57.5393%" y="367.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (103 samples, 0.53%)</title><rect x="57.3613%" y="341" width="0.5304%" height="15" fill="rgb(226,80,48)" fg:x="11139" fg:w="103"/><text x="57.6113%" y="351.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (103 samples, 0.53%)</title><rect x="57.3613%" y="325" width="0.5304%" height="15" fill="rgb(238,224,15)" fg:x="11139" fg:w="103"/><text x="57.6113%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (64 samples, 0.33%)</title><rect x="57.5622%" y="309" width="0.3296%" height="15" fill="rgb(241,136,10)" fg:x="11178" fg:w="64"/><text x="57.8122%" y="319.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;::push (5 samples, 0.03%)</title><rect x="57.9021%" y="341" width="0.0257%" height="15" fill="rgb(208,32,45)" fg:x="11244" fg:w="5"/><text x="58.1521%" y="351.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (2 samples, 0.01%)</title><rect x="57.9175%" y="325" width="0.0103%" height="15" fill="rgb(207,135,9)" fg:x="11247" fg:w="2"/><text x="58.1675%" y="335.50"></text></g><g><title>__GI___libc_malloc (15 samples, 0.08%)</title><rect x="57.9381%" y="229" width="0.0772%" height="15" fill="rgb(206,86,44)" fg:x="11251" fg:w="15"/><text x="58.1881%" y="239.50"></text></g><g><title>tcache_get (6 samples, 0.03%)</title><rect x="57.9844%" y="213" width="0.0309%" height="15" fill="rgb(245,177,15)" fg:x="11260" fg:w="6"/><text x="58.2344%" y="223.50"></text></g><g><title>__rdl_alloc (2 samples, 0.01%)</title><rect x="58.0153%" y="229" width="0.0103%" height="15" fill="rgb(206,64,50)" fg:x="11266" fg:w="2"/><text x="58.2653%" y="239.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.01%)</title><rect x="58.0153%" y="213" width="0.0103%" height="15" fill="rgb(234,36,40)" fg:x="11266" fg:w="2"/><text x="58.2653%" y="223.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (21 samples, 0.11%)</title><rect x="57.9278%" y="309" width="0.1081%" height="15" fill="rgb(213,64,8)" fg:x="11249" fg:w="21"/><text x="58.1778%" y="319.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (20 samples, 0.10%)</title><rect x="57.9330%" y="293" width="0.1030%" height="15" fill="rgb(210,75,36)" fg:x="11250" fg:w="20"/><text x="58.1830%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (20 samples, 0.10%)</title><rect x="57.9330%" y="277" width="0.1030%" height="15" fill="rgb(229,88,21)" fg:x="11250" fg:w="20"/><text x="58.1830%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (20 samples, 0.10%)</title><rect x="57.9330%" y="261" width="0.1030%" height="15" fill="rgb(252,204,47)" fg:x="11250" fg:w="20"/><text x="58.1830%" y="271.50"></text></g><g><title>alloc::alloc::alloc (20 samples, 0.10%)</title><rect x="57.9330%" y="245" width="0.1030%" height="15" fill="rgb(208,77,27)" fg:x="11250" fg:w="20"/><text x="58.1830%" y="255.50"></text></g><g><title>__rust_alloc (2 samples, 0.01%)</title><rect x="58.0256%" y="229" width="0.0103%" height="15" fill="rgb(221,76,26)" fg:x="11268" fg:w="2"/><text x="58.2756%" y="239.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (29 samples, 0.15%)</title><rect x="57.8918%" y="373" width="0.1493%" height="15" fill="rgb(225,139,18)" fg:x="11242" fg:w="29"/><text x="58.1418%" y="383.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (29 samples, 0.15%)</title><rect x="57.8918%" y="357" width="0.1493%" height="15" fill="rgb(230,137,11)" fg:x="11242" fg:w="29"/><text x="58.1418%" y="367.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (22 samples, 0.11%)</title><rect x="57.9278%" y="341" width="0.1133%" height="15" fill="rgb(212,28,1)" fg:x="11249" fg:w="22"/><text x="58.1778%" y="351.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (22 samples, 0.11%)</title><rect x="57.9278%" y="325" width="0.1133%" height="15" fill="rgb(248,164,17)" fg:x="11249" fg:w="22"/><text x="58.1778%" y="335.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::new (2 samples, 0.01%)</title><rect x="58.0411%" y="373" width="0.0103%" height="15" fill="rgb(222,171,42)" fg:x="11271" fg:w="2"/><text x="58.2911%" y="383.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_val_mut (8 samples, 0.04%)</title><rect x="59.0298%" y="341" width="0.0412%" height="15" fill="rgb(243,84,45)" fg:x="11463" fg:w="8"/><text x="59.2798%" y="351.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (34 samples, 0.18%)</title><rect x="59.3182%" y="277" width="0.1751%" height="15" fill="rgb(252,49,23)" fg:x="11519" fg:w="34"/><text x="59.5682%" y="287.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_fit (54 samples, 0.28%)</title><rect x="59.2204%" y="309" width="0.2781%" height="15" fill="rgb(215,19,7)" fg:x="11500" fg:w="54"/><text x="59.4704%" y="319.50"></text></g><g><title>alloc::collections::btree::node::slice_insert (35 samples, 0.18%)</title><rect x="59.3182%" y="293" width="0.1802%" height="15" fill="rgb(238,81,41)" fg:x="11519" fg:w="35"/><text x="59.5682%" y="303.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (120 samples, 0.62%)</title><rect x="59.0710%" y="341" width="0.6180%" height="15" fill="rgb(210,199,37)" fg:x="11471" fg:w="120"/><text x="59.3210%" y="351.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert (100 samples, 0.51%)</title><rect x="59.1740%" y="325" width="0.5150%" height="15" fill="rgb(244,192,49)" fg:x="11491" fg:w="100"/><text x="59.4240%" y="335.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (37 samples, 0.19%)</title><rect x="59.4984%" y="309" width="0.1905%" height="15" fill="rgb(226,211,11)" fg:x="11554" fg:w="37"/><text x="59.7484%" y="319.50"></text></g><g><title>checked_request2size (2 samples, 0.01%)</title><rect x="59.7662%" y="213" width="0.0103%" height="15" fill="rgb(236,162,54)" fg:x="11606" fg:w="2"/><text x="60.0162%" y="223.50"></text></g><g><title>__GI___libc_malloc (25 samples, 0.13%)</title><rect x="59.6993%" y="229" width="0.1287%" height="15" fill="rgb(220,229,9)" fg:x="11593" fg:w="25"/><text x="59.9493%" y="239.50"></text></g><g><title>tcache_get (10 samples, 0.05%)</title><rect x="59.7765%" y="213" width="0.0515%" height="15" fill="rgb(250,87,22)" fg:x="11608" fg:w="10"/><text x="60.0265%" y="223.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (28 samples, 0.14%)</title><rect x="59.6941%" y="309" width="0.1442%" height="15" fill="rgb(239,43,17)" fg:x="11592" fg:w="28"/><text x="59.9441%" y="319.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (27 samples, 0.14%)</title><rect x="59.6993%" y="293" width="0.1390%" height="15" fill="rgb(231,177,25)" fg:x="11593" fg:w="27"/><text x="59.9493%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (27 samples, 0.14%)</title><rect x="59.6993%" y="277" width="0.1390%" height="15" fill="rgb(219,179,1)" fg:x="11593" fg:w="27"/><text x="59.9493%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (27 samples, 0.14%)</title><rect x="59.6993%" y="261" width="0.1390%" height="15" fill="rgb(238,219,53)" fg:x="11593" fg:w="27"/><text x="59.9493%" y="271.50"></text></g><g><title>alloc::alloc::alloc (27 samples, 0.14%)</title><rect x="59.6993%" y="245" width="0.1390%" height="15" fill="rgb(232,167,36)" fg:x="11593" fg:w="27"/><text x="59.9493%" y="255.50"></text></g><g><title>alloc::collections::btree::map::entry::Entry&lt;K,V,A&gt;::or_insert (350 samples, 1.80%)</title><rect x="58.0514%" y="373" width="1.8024%" height="15" fill="rgb(244,19,51)" fg:x="11273" fg:w="350"/><text x="58.3014%" y="383.50">a..</text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (286 samples, 1.47%)</title><rect x="58.3810%" y="357" width="1.4728%" height="15" fill="rgb(224,6,22)" fg:x="11337" fg:w="286"/><text x="58.6310%" y="367.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (31 samples, 0.16%)</title><rect x="59.6941%" y="341" width="0.1596%" height="15" fill="rgb(224,145,5)" fg:x="11592" fg:w="31"/><text x="59.9441%" y="351.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (31 samples, 0.16%)</title><rect x="59.6941%" y="325" width="0.1596%" height="15" fill="rgb(234,130,49)" fg:x="11592" fg:w="31"/><text x="59.9441%" y="335.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::init (3 samples, 0.02%)</title><rect x="59.8383%" y="309" width="0.0154%" height="15" fill="rgb(254,6,2)" fg:x="11620" fg:w="3"/><text x="60.0883%" y="319.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (3 samples, 0.02%)</title><rect x="59.8383%" y="293" width="0.0154%" height="15" fill="rgb(208,96,46)" fg:x="11620" fg:w="3"/><text x="60.0883%" y="303.50"></text></g><g><title>core::ptr::write (3 samples, 0.02%)</title><rect x="59.8383%" y="277" width="0.0154%" height="15" fill="rgb(239,3,39)" fg:x="11620" fg:w="3"/><text x="60.0883%" y="287.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (3 samples, 0.02%)</title><rect x="59.8538%" y="373" width="0.0154%" height="15" fill="rgb(233,210,1)" fg:x="11623" fg:w="3"/><text x="60.1038%" y="383.50"></text></g><g><title>sysvec_apic_timer_interrupt (3 samples, 0.02%)</title><rect x="59.8538%" y="357" width="0.0154%" height="15" fill="rgb(244,137,37)" fg:x="11623" fg:w="3"/><text x="60.1038%" y="367.50"></text></g><g><title>__sysvec_apic_timer_interrupt (3 samples, 0.02%)</title><rect x="59.8538%" y="341" width="0.0154%" height="15" fill="rgb(240,136,2)" fg:x="11623" fg:w="3"/><text x="60.1038%" y="351.50"></text></g><g><title>hrtimer_interrupt (3 samples, 0.02%)</title><rect x="59.8538%" y="325" width="0.0154%" height="15" fill="rgb(239,18,37)" fg:x="11623" fg:w="3"/><text x="60.1038%" y="335.50"></text></g><g><title>__hrtimer_run_queues (3 samples, 0.02%)</title><rect x="59.8538%" y="309" width="0.0154%" height="15" fill="rgb(218,185,22)" fg:x="11623" fg:w="3"/><text x="60.1038%" y="319.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (2 samples, 0.01%)</title><rect x="59.8692%" y="373" width="0.0103%" height="15" fill="rgb(225,218,4)" fg:x="11626" fg:w="2"/><text x="60.1192%" y="383.50"></text></g><g><title>get_max_fast (3 samples, 0.02%)</title><rect x="60.0700%" y="213" width="0.0154%" height="15" fill="rgb(230,182,32)" fg:x="11665" fg:w="3"/><text x="60.3200%" y="223.50"></text></g><g><title>_int_free (28 samples, 0.14%)</title><rect x="59.9516%" y="229" width="0.1442%" height="15" fill="rgb(242,56,43)" fg:x="11642" fg:w="28"/><text x="60.2016%" y="239.50"></text></g><g><title>tcache_put (2 samples, 0.01%)</title><rect x="60.0855%" y="213" width="0.0103%" height="15" fill="rgb(233,99,24)" fg:x="11668" fg:w="2"/><text x="60.3355%" y="223.50"></text></g><g><title>__GI___libc_free (43 samples, 0.22%)</title><rect x="59.8846%" y="245" width="0.2214%" height="15" fill="rgb(234,209,42)" fg:x="11629" fg:w="43"/><text x="60.1346%" y="255.50"></text></g><g><title>arena_for_chunk (2 samples, 0.01%)</title><rect x="60.0958%" y="229" width="0.0103%" height="15" fill="rgb(227,7,12)" fg:x="11670" fg:w="2"/><text x="60.3458%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (50 samples, 0.26%)</title><rect x="59.8795%" y="277" width="0.2575%" height="15" fill="rgb(245,203,43)" fg:x="11628" fg:w="50"/><text x="60.1295%" y="287.50"></text></g><g><title>alloc::alloc::dealloc (50 samples, 0.26%)</title><rect x="59.8795%" y="261" width="0.2575%" height="15" fill="rgb(238,205,33)" fg:x="11628" fg:w="50"/><text x="60.1295%" y="271.50"></text></g><g><title>__rust_dealloc (5 samples, 0.03%)</title><rect x="60.1112%" y="245" width="0.0257%" height="15" fill="rgb(231,56,7)" fg:x="11673" fg:w="5"/><text x="60.3612%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(u64,usize)&gt;&gt; (54 samples, 0.28%)</title><rect x="59.8795%" y="373" width="0.2781%" height="15" fill="rgb(244,186,29)" fg:x="11628" fg:w="54"/><text x="60.1295%" y="383.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (54 samples, 0.28%)</title><rect x="59.8795%" y="357" width="0.2781%" height="15" fill="rgb(234,111,31)" fg:x="11628" fg:w="54"/><text x="60.1295%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(u64,usize),alloc::alloc::Global&gt;&gt; (54 samples, 0.28%)</title><rect x="59.8795%" y="341" width="0.2781%" height="15" fill="rgb(241,149,10)" fg:x="11628" fg:w="54"/><text x="60.1295%" y="351.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (54 samples, 0.28%)</title><rect x="59.8795%" y="325" width="0.2781%" height="15" fill="rgb(249,206,44)" fg:x="11628" fg:w="54"/><text x="60.1295%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(u64,usize)&gt;&gt; (54 samples, 0.28%)</title><rect x="59.8795%" y="309" width="0.2781%" height="15" fill="rgb(251,153,30)" fg:x="11628" fg:w="54"/><text x="60.1295%" y="319.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (54 samples, 0.28%)</title><rect x="59.8795%" y="293" width="0.2781%" height="15" fill="rgb(239,152,38)" fg:x="11628" fg:w="54"/><text x="60.1295%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (4 samples, 0.02%)</title><rect x="60.1370%" y="277" width="0.0206%" height="15" fill="rgb(249,139,47)" fg:x="11678" fg:w="4"/><text x="60.3870%" y="287.50"></text></g><g><title>compiler_builtins::int::specialized_div_rem::u128_by_u64_div_rem (35 samples, 0.18%)</title><rect x="60.3430%" y="277" width="0.1802%" height="15" fill="rgb(244,64,35)" fg:x="11718" fg:w="35"/><text x="60.5930%" y="287.50"></text></g><g><title>&lt;num_modular::reduced::ReducedInt&lt;T,R&gt; as num_modular::ModularInteger&gt;::convert (59 samples, 0.30%)</title><rect x="60.3378%" y="357" width="0.3038%" height="15" fill="rgb(216,46,15)" fg:x="11717" fg:w="59"/><text x="60.5878%" y="367.50"></text></g><g><title>&lt;num_modular::monty::Montgomery&lt;u64,u64&gt; as num_modular::Reducer&lt;u64&gt;&gt;::transform (59 samples, 0.30%)</title><rect x="60.3378%" y="341" width="0.3038%" height="15" fill="rgb(250,74,19)" fg:x="11717" fg:w="59"/><text x="60.5878%" y="351.50"></text></g><g><title>__umodti3 (59 samples, 0.30%)</title><rect x="60.3378%" y="325" width="0.3038%" height="15" fill="rgb(249,42,33)" fg:x="11717" fg:w="59"/><text x="60.5878%" y="335.50"></text></g><g><title>compiler_builtins::int::udiv::__umodti3 (59 samples, 0.30%)</title><rect x="60.3378%" y="309" width="0.3038%" height="15" fill="rgb(242,149,17)" fg:x="11717" fg:w="59"/><text x="60.5878%" y="319.50"></text></g><g><title>compiler_builtins::int::specialized_div_rem::u128_div_rem (59 samples, 0.30%)</title><rect x="60.3378%" y="293" width="0.3038%" height="15" fill="rgb(244,29,21)" fg:x="11717" fg:w="59"/><text x="60.5878%" y="303.50"></text></g><g><title>compiler_builtins::int::specialized_div_rem::u64_by_u64_div_rem (23 samples, 0.12%)</title><rect x="60.5232%" y="277" width="0.1184%" height="15" fill="rgb(220,130,37)" fg:x="11753" fg:w="23"/><text x="60.7732%" y="287.50"></text></g><g><title>core::num::&lt;impl u64&gt;::checked_rem (23 samples, 0.12%)</title><rect x="60.5232%" y="261" width="0.1184%" height="15" fill="rgb(211,67,2)" fg:x="11753" fg:w="23"/><text x="60.7732%" y="271.50"></text></g><g><title>&lt;u64 as num_integer::roots::Roots&gt;::sqrt::go::guess (13 samples, 0.07%)</title><rect x="60.6468%" y="325" width="0.0669%" height="15" fill="rgb(235,68,52)" fg:x="11777" fg:w="13"/><text x="60.8968%" y="335.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (8 samples, 0.04%)</title><rect x="60.6725%" y="309" width="0.0412%" height="15" fill="rgb(246,142,3)" fg:x="11782" fg:w="8"/><text x="60.9225%" y="319.50"></text></g><g><title>&lt;u64 as num_integer::roots::Roots&gt;::sqrt (24 samples, 0.12%)</title><rect x="60.6416%" y="357" width="0.1236%" height="15" fill="rgb(241,25,7)" fg:x="11776" fg:w="24"/><text x="60.8916%" y="367.50"></text></g><g><title>&lt;u64 as num_integer::roots::Roots&gt;::sqrt::go (24 samples, 0.12%)</title><rect x="60.6416%" y="341" width="0.1236%" height="15" fill="rgb(242,119,39)" fg:x="11776" fg:w="24"/><text x="60.8916%" y="351.50"></text></g><g><title>num_integer::roots::fixpoint (10 samples, 0.05%)</title><rect x="60.7137%" y="325" width="0.0515%" height="15" fill="rgb(241,98,45)" fg:x="11790" fg:w="10"/><text x="60.9637%" y="335.50"></text></g><g><title>&lt;u64 as num_integer::roots::Roots&gt;::sqrt::go::{{closure}} (10 samples, 0.05%)</title><rect x="60.7137%" y="309" width="0.0515%" height="15" fill="rgb(254,28,30)" fg:x="11790" fg:w="10"/><text x="60.9637%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (3 samples, 0.02%)</title><rect x="60.8116%" y="341" width="0.0154%" height="15" fill="rgb(241,142,54)" fg:x="11809" fg:w="3"/><text x="61.0616%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (3 samples, 0.02%)</title><rect x="60.8116%" y="325" width="0.0154%" height="15" fill="rgb(222,85,15)" fg:x="11809" fg:w="3"/><text x="61.0616%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (20 samples, 0.10%)</title><rect x="60.7652%" y="357" width="0.1030%" height="15" fill="rgb(210,85,47)" fg:x="11800" fg:w="20"/><text x="61.0152%" y="367.50"></text></g><g><title>core::ptr::read (8 samples, 0.04%)</title><rect x="60.8270%" y="341" width="0.0412%" height="15" fill="rgb(224,206,25)" fg:x="11812" fg:w="8"/><text x="61.0770%" y="351.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 0.02%)</title><rect x="60.9352%" y="309" width="0.0206%" height="15" fill="rgb(243,201,19)" fg:x="11833" fg:w="4"/><text x="61.1852%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (3 samples, 0.02%)</title><rect x="60.9558%" y="309" width="0.0154%" height="15" fill="rgb(236,59,4)" fg:x="11837" fg:w="3"/><text x="61.2058%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (2 samples, 0.01%)</title><rect x="60.9712%" y="309" width="0.0103%" height="15" fill="rgb(254,179,45)" fg:x="11840" fg:w="2"/><text x="61.2212%" y="319.50"></text></g><g><title>__memcpy_avx_unaligned_erms (3 samples, 0.02%)</title><rect x="61.1360%" y="213" width="0.0154%" height="15" fill="rgb(226,14,10)" fg:x="11872" fg:w="3"/><text x="61.3860%" y="223.50"></text></g><g><title>_int_free (8 samples, 0.04%)</title><rect x="61.1514%" y="213" width="0.0412%" height="15" fill="rgb(244,27,41)" fg:x="11875" fg:w="8"/><text x="61.4014%" y="223.50"></text></g><g><title>_int_realloc (26 samples, 0.13%)</title><rect x="61.1000%" y="229" width="0.1339%" height="15" fill="rgb(235,35,32)" fg:x="11865" fg:w="26"/><text x="61.3500%" y="239.50"></text></g><g><title>_int_malloc (8 samples, 0.04%)</title><rect x="61.1926%" y="213" width="0.0412%" height="15" fill="rgb(218,68,31)" fg:x="11883" fg:w="8"/><text x="61.4426%" y="223.50"></text></g><g><title>__GI___libc_realloc (39 samples, 0.20%)</title><rect x="61.0382%" y="245" width="0.2008%" height="15" fill="rgb(207,120,37)" fg:x="11853" fg:w="39"/><text x="61.2882%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (41 samples, 0.21%)</title><rect x="61.0382%" y="293" width="0.2111%" height="15" fill="rgb(227,98,0)" fg:x="11853" fg:w="41"/><text x="61.2882%" y="303.50"></text></g><g><title>alloc::alloc::Global::grow_impl (41 samples, 0.21%)</title><rect x="61.0382%" y="277" width="0.2111%" height="15" fill="rgb(207,7,3)" fg:x="11853" fg:w="41"/><text x="61.2882%" y="287.50"></text></g><g><title>alloc::alloc::realloc (41 samples, 0.21%)</title><rect x="61.0382%" y="261" width="0.2111%" height="15" fill="rgb(206,98,19)" fg:x="11853" fg:w="41"/><text x="61.2882%" y="271.50"></text></g><g><title>__GI___libc_malloc (67 samples, 0.35%)</title><rect x="61.2493%" y="293" width="0.3450%" height="15" fill="rgb(217,5,26)" fg:x="11894" fg:w="67"/><text x="61.4993%" y="303.50"></text></g><g><title>tcache_get (25 samples, 0.13%)</title><rect x="61.4656%" y="277" width="0.1287%" height="15" fill="rgb(235,190,38)" fg:x="11936" fg:w="25"/><text x="61.7156%" y="287.50"></text></g><g><title>__rdl_alloc (2 samples, 0.01%)</title><rect x="61.5943%" y="293" width="0.0103%" height="15" fill="rgb(247,86,24)" fg:x="11961" fg:w="2"/><text x="61.8443%" y="303.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.01%)</title><rect x="61.5943%" y="277" width="0.0103%" height="15" fill="rgb(205,101,16)" fg:x="11961" fg:w="2"/><text x="61.8443%" y="287.50"></text></g><g><title>__rust_alloc (2 samples, 0.01%)</title><rect x="61.6046%" y="293" width="0.0103%" height="15" fill="rgb(246,168,33)" fg:x="11963" fg:w="2"/><text x="61.8546%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (128 samples, 0.66%)</title><rect x="60.9815%" y="309" width="0.6591%" height="15" fill="rgb(231,114,1)" fg:x="11842" fg:w="128"/><text x="61.2315%" y="319.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (5 samples, 0.03%)</title><rect x="61.6149%" y="293" width="0.0257%" height="15" fill="rgb(207,184,53)" fg:x="11965" fg:w="5"/><text x="61.8649%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (147 samples, 0.76%)</title><rect x="60.9197%" y="341" width="0.7570%" height="15" fill="rgb(224,95,51)" fg:x="11830" fg:w="147"/><text x="61.1697%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (147 samples, 0.76%)</title><rect x="60.9197%" y="325" width="0.7570%" height="15" fill="rgb(212,188,45)" fg:x="11830" fg:w="147"/><text x="61.1697%" y="335.50"></text></g><g><title>core::cmp::max (7 samples, 0.04%)</title><rect x="61.6407%" y="309" width="0.0360%" height="15" fill="rgb(223,154,38)" fg:x="11970" fg:w="7"/><text x="61.8907%" y="319.50"></text></g><g><title>core::cmp::Ord::max (7 samples, 0.04%)</title><rect x="61.6407%" y="293" width="0.0360%" height="15" fill="rgb(251,22,52)" fg:x="11970" fg:w="7"/><text x="61.8907%" y="303.50"></text></g><g><title>core::cmp::max_by (7 samples, 0.04%)</title><rect x="61.6407%" y="277" width="0.0360%" height="15" fill="rgb(229,209,22)" fg:x="11970" fg:w="7"/><text x="61.8907%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (5 samples, 0.03%)</title><rect x="61.6767%" y="341" width="0.0257%" height="15" fill="rgb(234,138,34)" fg:x="11977" fg:w="5"/><text x="61.9267%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (5 samples, 0.03%)</title><rect x="61.6767%" y="325" width="0.0257%" height="15" fill="rgb(212,95,11)" fg:x="11977" fg:w="5"/><text x="61.9267%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (175 samples, 0.90%)</title><rect x="60.8682%" y="357" width="0.9012%" height="15" fill="rgb(240,179,47)" fg:x="11820" fg:w="175"/><text x="61.1182%" y="367.50"></text></g><g><title>core::ptr::write (13 samples, 0.07%)</title><rect x="61.7025%" y="341" width="0.0669%" height="15" fill="rgb(240,163,11)" fg:x="11982" fg:w="13"/><text x="61.9525%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (2 samples, 0.01%)</title><rect x="61.7694%" y="357" width="0.0103%" height="15" fill="rgb(236,37,12)" fg:x="11995" fg:w="2"/><text x="62.0194%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.01%)</title><rect x="61.7900%" y="293" width="0.0103%" height="15" fill="rgb(232,164,16)" fg:x="11999" fg:w="2"/><text x="62.0400%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (2 samples, 0.01%)</title><rect x="61.7900%" y="277" width="0.0103%" height="15" fill="rgb(244,205,15)" fg:x="11999" fg:w="2"/><text x="62.0400%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.01%)</title><rect x="61.7900%" y="261" width="0.0103%" height="15" fill="rgb(223,117,47)" fg:x="11999" fg:w="2"/><text x="62.0400%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.01%)</title><rect x="61.7900%" y="245" width="0.0103%" height="15" fill="rgb(244,107,35)" fg:x="11999" fg:w="2"/><text x="62.0400%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.01%)</title><rect x="61.7900%" y="229" width="0.0103%" height="15" fill="rgb(205,140,8)" fg:x="11999" fg:w="2"/><text x="62.0400%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.01%)</title><rect x="61.7900%" y="213" width="0.0103%" height="15" fill="rgb(228,84,46)" fg:x="11999" fg:w="2"/><text x="62.0400%" y="223.50"></text></g><g><title>__GI___libc_malloc (29 samples, 0.15%)</title><rect x="61.8415%" y="181" width="0.1493%" height="15" fill="rgb(254,188,9)" fg:x="12009" fg:w="29"/><text x="62.0915%" y="191.50"></text></g><g><title>tcache_get (13 samples, 0.07%)</title><rect x="61.9239%" y="165" width="0.0669%" height="15" fill="rgb(206,112,54)" fg:x="12025" fg:w="13"/><text x="62.1739%" y="175.50"></text></g><g><title>__rdl_alloc (5 samples, 0.03%)</title><rect x="61.9908%" y="181" width="0.0257%" height="15" fill="rgb(216,84,49)" fg:x="12038" fg:w="5"/><text x="62.2408%" y="191.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (5 samples, 0.03%)</title><rect x="61.9908%" y="165" width="0.0257%" height="15" fill="rgb(214,194,35)" fg:x="12038" fg:w="5"/><text x="62.2408%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (44 samples, 0.23%)</title><rect x="61.8106%" y="261" width="0.2266%" height="15" fill="rgb(249,28,3)" fg:x="12003" fg:w="44"/><text x="62.0606%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (44 samples, 0.23%)</title><rect x="61.8106%" y="245" width="0.2266%" height="15" fill="rgb(222,56,52)" fg:x="12003" fg:w="44"/><text x="62.0606%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (40 samples, 0.21%)</title><rect x="61.8312%" y="229" width="0.2060%" height="15" fill="rgb(245,217,50)" fg:x="12007" fg:w="40"/><text x="62.0812%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (40 samples, 0.21%)</title><rect x="61.8312%" y="213" width="0.2060%" height="15" fill="rgb(213,201,24)" fg:x="12007" fg:w="40"/><text x="62.0812%" y="223.50"></text></g><g><title>alloc::alloc::alloc (40 samples, 0.21%)</title><rect x="61.8312%" y="197" width="0.2060%" height="15" fill="rgb(248,116,28)" fg:x="12007" fg:w="40"/><text x="62.0812%" y="207.50"></text></g><g><title>__rust_alloc (4 samples, 0.02%)</title><rect x="62.0166%" y="181" width="0.0206%" height="15" fill="rgb(219,72,43)" fg:x="12043" fg:w="4"/><text x="62.2666%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (51 samples, 0.26%)</title><rect x="61.7797%" y="357" width="0.2626%" height="15" fill="rgb(209,138,14)" fg:x="11997" fg:w="51"/><text x="62.0297%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (51 samples, 0.26%)</title><rect x="61.7797%" y="341" width="0.2626%" height="15" fill="rgb(222,18,33)" fg:x="11997" fg:w="51"/><text x="62.0297%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (51 samples, 0.26%)</title><rect x="61.7797%" y="325" width="0.2626%" height="15" fill="rgb(213,199,7)" fg:x="11997" fg:w="51"/><text x="62.0297%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (51 samples, 0.26%)</title><rect x="61.7797%" y="309" width="0.2626%" height="15" fill="rgb(250,110,10)" fg:x="11997" fg:w="51"/><text x="62.0297%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (47 samples, 0.24%)</title><rect x="61.8003%" y="293" width="0.2420%" height="15" fill="rgb(248,123,6)" fg:x="12001" fg:w="47"/><text x="62.0503%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (47 samples, 0.24%)</title><rect x="61.8003%" y="277" width="0.2420%" height="15" fill="rgb(206,91,31)" fg:x="12001" fg:w="47"/><text x="62.0503%" y="287.50"></text></g><g><title>__GI___libc_free (34 samples, 0.18%)</title><rect x="62.0681%" y="277" width="0.1751%" height="15" fill="rgb(211,154,13)" fg:x="12053" fg:w="34"/><text x="62.3181%" y="287.50"></text></g><g><title>_int_free (25 samples, 0.13%)</title><rect x="62.1144%" y="261" width="0.1287%" height="15" fill="rgb(225,148,7)" fg:x="12062" fg:w="25"/><text x="62.3644%" y="271.50"></text></g><g><title>tcache_put (2 samples, 0.01%)</title><rect x="62.2329%" y="245" width="0.0103%" height="15" fill="rgb(220,160,43)" fg:x="12085" fg:w="2"/><text x="62.4829%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (38 samples, 0.20%)</title><rect x="62.0578%" y="309" width="0.1957%" height="15" fill="rgb(213,52,39)" fg:x="12051" fg:w="38"/><text x="62.3078%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (38 samples, 0.20%)</title><rect x="62.0578%" y="293" width="0.1957%" height="15" fill="rgb(243,137,7)" fg:x="12051" fg:w="38"/><text x="62.3078%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(u64,usize)&gt;&gt; (43 samples, 0.22%)</title><rect x="62.0475%" y="357" width="0.2214%" height="15" fill="rgb(230,79,13)" fg:x="12049" fg:w="43"/><text x="62.2975%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(u64,usize)&gt;&gt; (43 samples, 0.22%)</title><rect x="62.0475%" y="341" width="0.2214%" height="15" fill="rgb(247,105,23)" fg:x="12049" fg:w="43"/><text x="62.2975%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (43 samples, 0.22%)</title><rect x="62.0475%" y="325" width="0.2214%" height="15" fill="rgb(223,179,41)" fg:x="12049" fg:w="43"/><text x="62.2975%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (3 samples, 0.02%)</title><rect x="62.2535%" y="309" width="0.0154%" height="15" fill="rgb(218,9,34)" fg:x="12089" fg:w="3"/><text x="62.5035%" y="319.50"></text></g><g><title>core::num::&lt;impl usize&gt;::unchecked_mul (3 samples, 0.02%)</title><rect x="62.2535%" y="293" width="0.0154%" height="15" fill="rgb(222,106,8)" fg:x="12089" fg:w="3"/><text x="62.5035%" y="303.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (2 samples, 0.01%)</title><rect x="62.2792%" y="309" width="0.0103%" height="15" fill="rgb(211,220,0)" fg:x="12094" fg:w="2"/><text x="62.5292%" y="319.50"></text></g><g><title>&lt;num_modular::monty::Montgomery&lt;u64,u64&gt; as num_modular::Reducer&lt;u64&gt;&gt;::new (7 samples, 0.04%)</title><rect x="62.2689%" y="341" width="0.0360%" height="15" fill="rgb(229,52,16)" fg:x="12092" fg:w="7"/><text x="62.5189%" y="351.50"></text></g><g><title>&lt;u64 as num_modular::monty::NegModInv&gt;::neginv (6 samples, 0.03%)</title><rect x="62.2741%" y="325" width="0.0309%" height="15" fill="rgb(212,155,18)" fg:x="12093" fg:w="6"/><text x="62.5241%" y="335.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_sub (3 samples, 0.02%)</title><rect x="62.2895%" y="309" width="0.0154%" height="15" fill="rgb(242,21,14)" fg:x="12096" fg:w="3"/><text x="62.5395%" y="319.50"></text></g><g><title>compiler_builtins::int::specialized_div_rem::u128_by_u64_div_rem (32 samples, 0.16%)</title><rect x="62.3204%" y="277" width="0.1648%" height="15" fill="rgb(222,19,48)" fg:x="12102" fg:w="32"/><text x="62.5704%" y="287.50"></text></g><g><title>num_modular::reduced::ReducedInt&lt;T,R&gt;::new (53 samples, 0.27%)</title><rect x="62.2689%" y="357" width="0.2729%" height="15" fill="rgb(232,45,27)" fg:x="12092" fg:w="53"/><text x="62.5189%" y="367.50"></text></g><g><title>&lt;num_modular::monty::Montgomery&lt;u64,u64&gt; as num_modular::Reducer&lt;u64&gt;&gt;::transform (46 samples, 0.24%)</title><rect x="62.3050%" y="341" width="0.2369%" height="15" fill="rgb(249,103,42)" fg:x="12099" fg:w="46"/><text x="62.5550%" y="351.50"></text></g><g><title>__umodti3 (44 samples, 0.23%)</title><rect x="62.3153%" y="325" width="0.2266%" height="15" fill="rgb(246,81,33)" fg:x="12101" fg:w="44"/><text x="62.5653%" y="335.50"></text></g><g><title>compiler_builtins::int::udiv::__umodti3 (44 samples, 0.23%)</title><rect x="62.3153%" y="309" width="0.2266%" height="15" fill="rgb(252,33,42)" fg:x="12101" fg:w="44"/><text x="62.5653%" y="319.50"></text></g><g><title>compiler_builtins::int::specialized_div_rem::u128_div_rem (44 samples, 0.23%)</title><rect x="62.3153%" y="293" width="0.2266%" height="15" fill="rgb(209,212,41)" fg:x="12101" fg:w="44"/><text x="62.5653%" y="303.50"></text></g><g><title>compiler_builtins::int::specialized_div_rem::u64_by_u64_div_rem (11 samples, 0.06%)</title><rect x="62.4852%" y="277" width="0.0566%" height="15" fill="rgb(207,154,6)" fg:x="12134" fg:w="11"/><text x="62.7352%" y="287.50"></text></g><g><title>core::num::&lt;impl u64&gt;::checked_rem (11 samples, 0.06%)</title><rect x="62.4852%" y="261" width="0.0566%" height="15" fill="rgb(223,64,47)" fg:x="12134" fg:w="11"/><text x="62.7352%" y="271.50"></text></g><g><title>&lt;&amp;u64 as core::ops::arith::Mul&lt;&amp;u64&gt;&gt;::mul (9 samples, 0.05%)</title><rect x="62.6551%" y="341" width="0.0463%" height="15" fill="rgb(211,161,38)" fg:x="12167" fg:w="9"/><text x="62.9051%" y="351.50"></text></g><g><title>&lt;u64 as core::ops::arith::Mul&gt;::mul (9 samples, 0.05%)</title><rect x="62.6551%" y="325" width="0.0463%" height="15" fill="rgb(219,138,40)" fg:x="12167" fg:w="9"/><text x="62.9051%" y="335.50"></text></g><g><title>&lt;u64 as num_integer::Integer&gt;::gcd (18 samples, 0.09%)</title><rect x="62.7015%" y="341" width="0.0927%" height="15" fill="rgb(241,228,46)" fg:x="12176" fg:w="18"/><text x="62.9515%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (4 samples, 0.02%)</title><rect x="62.7736%" y="325" width="0.0206%" height="15" fill="rgb(223,209,38)" fg:x="12190" fg:w="4"/><text x="63.0236%" y="335.50"></text></g><g><title>&lt;u64 as num_integer::Integer&gt;::is_multiple_of (15 samples, 0.08%)</title><rect x="62.7942%" y="341" width="0.0772%" height="15" fill="rgb(236,164,45)" fg:x="12194" fg:w="15"/><text x="63.0442%" y="351.50"></text></g><g><title>&lt;u64 as num_integer::roots::Roots&gt;::sqrt::go::guess (147 samples, 0.76%)</title><rect x="62.9384%" y="309" width="0.7570%" height="15" fill="rgb(231,15,5)" fg:x="12222" fg:w="147"/><text x="63.1884%" y="319.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (46 samples, 0.24%)</title><rect x="63.4585%" y="293" width="0.2369%" height="15" fill="rgb(252,35,15)" fg:x="12323" fg:w="46"/><text x="63.7085%" y="303.50"></text></g><g><title>&lt;u64 as num_integer::roots::Roots&gt;::sqrt::go::{{closure}} (311 samples, 1.60%)</title><rect x="63.8756%" y="293" width="1.6015%" height="15" fill="rgb(248,181,18)" fg:x="12404" fg:w="311"/><text x="64.1256%" y="303.50"></text></g><g><title>&lt;u64 as num_integer::roots::Roots&gt;::sqrt (515 samples, 2.65%)</title><rect x="62.8714%" y="341" width="2.6520%" height="15" fill="rgb(233,39,42)" fg:x="12209" fg:w="515"/><text x="63.1214%" y="351.50">&lt;u..</text></g><g><title>&lt;u64 as num_integer::roots::Roots&gt;::sqrt::go (513 samples, 2.64%)</title><rect x="62.8817%" y="325" width="2.6417%" height="15" fill="rgb(238,110,33)" fg:x="12211" fg:w="513"/><text x="63.1317%" y="335.50">&lt;u..</text></g><g><title>num_integer::roots::fixpoint (355 samples, 1.83%)</title><rect x="63.6953%" y="309" width="1.8281%" height="15" fill="rgb(233,195,10)" fg:x="12369" fg:w="355"/><text x="63.9453%" y="319.50">n..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u64&gt;::lt (9 samples, 0.05%)</title><rect x="65.4771%" y="293" width="0.0463%" height="15" fill="rgb(254,105,3)" fg:x="12715" fg:w="9"/><text x="65.7271%" y="303.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (13 samples, 0.07%)</title><rect x="65.5235%" y="341" width="0.0669%" height="15" fill="rgb(221,225,9)" fg:x="12724" fg:w="13"/><text x="65.7735%" y="351.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (13 samples, 0.07%)</title><rect x="65.5235%" y="325" width="0.0669%" height="15" fill="rgb(224,227,45)" fg:x="12724" fg:w="13"/><text x="65.7735%" y="335.50"></text></g><g><title>&lt;&amp;u64 as core::ops::bit::Shr&lt;usize&gt;&gt;::shr (10 samples, 0.05%)</title><rect x="65.6264%" y="325" width="0.0515%" height="15" fill="rgb(229,198,43)" fg:x="12744" fg:w="10"/><text x="65.8764%" y="335.50"></text></g><g><title>&lt;u64 as core::ops::bit::Shr&lt;usize&gt;&gt;::shr (10 samples, 0.05%)</title><rect x="65.6264%" y="309" width="0.0515%" height="15" fill="rgb(206,209,35)" fg:x="12744" fg:w="10"/><text x="65.8764%" y="319.50"></text></g><g><title>&lt;u64 as num_integer::roots::Roots&gt;::sqrt::go::guess (87 samples, 0.45%)</title><rect x="65.8221%" y="245" width="0.4480%" height="15" fill="rgb(245,195,53)" fg:x="12782" fg:w="87"/><text x="66.0721%" y="255.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (15 samples, 0.08%)</title><rect x="66.1929%" y="229" width="0.0772%" height="15" fill="rgb(240,92,26)" fg:x="12854" fg:w="15"/><text x="66.4429%" y="239.50"></text></g><g><title>&lt;u64 as num_integer::roots::Roots&gt;::sqrt::go::{{closure}} (213 samples, 1.10%)</title><rect x="66.3062%" y="229" width="1.0969%" height="15" fill="rgb(207,40,23)" fg:x="12876" fg:w="213"/><text x="66.5562%" y="239.50"></text></g><g><title>num_prime::factor::one_line (955 samples, 4.92%)</title><rect x="62.5418%" y="357" width="4.9179%" height="15" fill="rgb(223,111,35)" fg:x="12145" fg:w="955"/><text x="62.7918%" y="367.50">num_pr..</text></g><g><title>num_prime::integer::&lt;impl num_prime::traits::ExactRoots for u64&gt;::sqrt_exact (363 samples, 1.87%)</title><rect x="65.5904%" y="341" width="1.8693%" height="15" fill="rgb(229,147,28)" fg:x="12737" fg:w="363"/><text x="65.8404%" y="351.50">n..</text></g><g><title>num_prime::traits::ExactRoots::nth_root_exact (346 samples, 1.78%)</title><rect x="65.6779%" y="325" width="1.7818%" height="15" fill="rgb(211,29,28)" fg:x="12754" fg:w="346"/><text x="65.9279%" y="335.50">n..</text></g><g><title>&lt;u64 as num_integer::roots::Roots&gt;::nth_root (346 samples, 1.78%)</title><rect x="65.6779%" y="309" width="1.7818%" height="15" fill="rgb(228,72,33)" fg:x="12754" fg:w="346"/><text x="65.9279%" y="319.50">&lt;..</text></g><g><title>&lt;u64 as num_integer::roots::Roots&gt;::nth_root::go (346 samples, 1.78%)</title><rect x="65.6779%" y="293" width="1.7818%" height="15" fill="rgb(205,214,31)" fg:x="12754" fg:w="346"/><text x="65.9279%" y="303.50">&lt;..</text></g><g><title>&lt;u64 as num_integer::roots::Roots&gt;::sqrt (327 samples, 1.68%)</title><rect x="65.7758%" y="277" width="1.6839%" height="15" fill="rgb(224,111,15)" fg:x="12773" fg:w="327"/><text x="66.0258%" y="287.50"></text></g><g><title>&lt;u64 as num_integer::roots::Roots&gt;::sqrt::go (327 samples, 1.68%)</title><rect x="65.7758%" y="261" width="1.6839%" height="15" fill="rgb(253,21,26)" fg:x="12773" fg:w="327"/><text x="66.0258%" y="271.50"></text></g><g><title>num_integer::roots::fixpoint (231 samples, 1.19%)</title><rect x="66.2701%" y="245" width="1.1896%" height="15" fill="rgb(245,139,43)" fg:x="12869" fg:w="231"/><text x="66.5201%" y="255.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u64&gt;::lt (11 samples, 0.06%)</title><rect x="67.4031%" y="229" width="0.0566%" height="15" fill="rgb(252,170,7)" fg:x="13089" fg:w="11"/><text x="67.6531%" y="239.50"></text></g><g><title>&lt;&amp;num_prime::mint::Mint&lt;T,R&gt; as core::ops::arith::Sub&lt;&amp;num_prime::mint::Mint&lt;T,R&gt;&gt;&gt;::sub (51 samples, 0.26%)</title><rect x="68.0725%" y="341" width="0.2626%" height="15" fill="rgb(231,118,14)" fg:x="13219" fg:w="51"/><text x="68.3225%" y="351.50"></text></g><g><title>&lt;&amp;num_modular::reduced::ReducedInt&lt;T,R&gt; as core::ops::arith::Sub&lt;&amp;num_modular::reduced::ReducedInt&lt;T,R&gt;&gt;&gt;::sub (3 samples, 0.02%)</title><rect x="68.3197%" y="325" width="0.0154%" height="15" fill="rgb(238,83,0)" fg:x="13267" fg:w="3"/><text x="68.5697%" y="335.50"></text></g><g><title>&lt;num_modular::monty::Montgomery&lt;u64,u64&gt; as num_modular::Reducer&lt;u64&gt;&gt;::sub (2 samples, 0.01%)</title><rect x="68.3248%" y="309" width="0.0103%" height="15" fill="rgb(221,39,39)" fg:x="13268" fg:w="2"/><text x="68.5748%" y="319.50"></text></g><g><title>&lt;num_modular::reduced::Vanilla&lt;u64&gt; as num_modular::Reducer&lt;u64&gt;&gt;::sub (2 samples, 0.01%)</title><rect x="68.3248%" y="293" width="0.0103%" height="15" fill="rgb(222,119,46)" fg:x="13268" fg:w="2"/><text x="68.5748%" y="303.50"></text></g><g><title>&lt;num_prime::mint::Mint&lt;T,R&gt; as core::clone::Clone&gt;::clone (16 samples, 0.08%)</title><rect x="68.3351%" y="341" width="0.0824%" height="15" fill="rgb(222,165,49)" fg:x="13270" fg:w="16"/><text x="68.5851%" y="351.50"></text></g><g><title>&lt;either::Either&lt;L,R&gt; as core::clone::Clone&gt;::clone (16 samples, 0.08%)</title><rect x="68.3351%" y="325" width="0.0824%" height="15" fill="rgb(219,113,52)" fg:x="13270" fg:w="16"/><text x="68.5851%" y="335.50"></text></g><g><title>&lt;num_prime::mint::Mint&lt;T,R&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.03%)</title><rect x="68.4175%" y="341" width="0.0257%" height="15" fill="rgb(214,7,15)" fg:x="13286" fg:w="5"/><text x="68.6675%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (6 samples, 0.03%)</title><rect x="68.4587%" y="277" width="0.0309%" height="15" fill="rgb(235,32,4)" fg:x="13294" fg:w="6"/><text x="68.7087%" y="287.50"></text></g><g><title>&lt;num_modular::monty::Montgomery&lt;u64,u64&gt; as num_modular::Reducer&lt;u64&gt;&gt;::new (9 samples, 0.05%)</title><rect x="68.4536%" y="309" width="0.0463%" height="15" fill="rgb(238,90,54)" fg:x="13293" fg:w="9"/><text x="68.7036%" y="319.50"></text></g><g><title>&lt;u64 as num_modular::monty::NegModInv&gt;::neginv (9 samples, 0.05%)</title><rect x="68.4536%" y="293" width="0.0463%" height="15" fill="rgb(213,208,19)" fg:x="13293" fg:w="9"/><text x="68.7036%" y="303.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_sub (2 samples, 0.01%)</title><rect x="68.4896%" y="277" width="0.0103%" height="15" fill="rgb(233,156,4)" fg:x="13300" fg:w="2"/><text x="68.7396%" y="287.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (5 samples, 0.03%)</title><rect x="68.4999%" y="245" width="0.0257%" height="15" fill="rgb(207,194,5)" fg:x="13302" fg:w="5"/><text x="68.7499%" y="255.50"></text></g><g><title>sysvec_apic_timer_interrupt (5 samples, 0.03%)</title><rect x="68.4999%" y="229" width="0.0257%" height="15" fill="rgb(206,111,30)" fg:x="13302" fg:w="5"/><text x="68.7499%" y="239.50"></text></g><g><title>irqentry_exit (5 samples, 0.03%)</title><rect x="68.4999%" y="213" width="0.0257%" height="15" fill="rgb(243,70,54)" fg:x="13302" fg:w="5"/><text x="68.7499%" y="223.50"></text></g><g><title>irqentry_exit_to_user_mode (5 samples, 0.03%)</title><rect x="68.4999%" y="197" width="0.0257%" height="15" fill="rgb(242,28,8)" fg:x="13302" fg:w="5"/><text x="68.7499%" y="207.50"></text></g><g><title>exit_to_user_mode_prepare (5 samples, 0.03%)</title><rect x="68.4999%" y="181" width="0.0257%" height="15" fill="rgb(219,106,18)" fg:x="13302" fg:w="5"/><text x="68.7499%" y="191.50"></text></g><g><title>exit_to_user_mode_loop (5 samples, 0.03%)</title><rect x="68.4999%" y="165" width="0.0257%" height="15" fill="rgb(244,222,10)" fg:x="13302" fg:w="5"/><text x="68.7499%" y="175.50"></text></g><g><title>schedule (5 samples, 0.03%)</title><rect x="68.4999%" y="149" width="0.0257%" height="15" fill="rgb(236,179,52)" fg:x="13302" fg:w="5"/><text x="68.7499%" y="159.50"></text></g><g><title>__schedule (5 samples, 0.03%)</title><rect x="68.4999%" y="133" width="0.0257%" height="15" fill="rgb(213,23,39)" fg:x="13302" fg:w="5"/><text x="68.7499%" y="143.50"></text></g><g><title>finish_task_switch.isra.0 (5 samples, 0.03%)</title><rect x="68.4999%" y="117" width="0.0257%" height="15" fill="rgb(238,48,10)" fg:x="13302" fg:w="5"/><text x="68.7499%" y="127.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.03%)</title><rect x="68.4999%" y="101" width="0.0257%" height="15" fill="rgb(251,196,23)" fg:x="13302" fg:w="5"/><text x="68.7499%" y="111.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.03%)</title><rect x="68.4999%" y="85" width="0.0257%" height="15" fill="rgb(250,152,24)" fg:x="13302" fg:w="5"/><text x="68.7499%" y="95.50"></text></g><g><title>x86_pmu_enable (5 samples, 0.03%)</title><rect x="68.4999%" y="69" width="0.0257%" height="15" fill="rgb(209,150,17)" fg:x="13302" fg:w="5"/><text x="68.7499%" y="79.50"></text></g><g><title>intel_pmu_enable_all (5 samples, 0.03%)</title><rect x="68.4999%" y="53" width="0.0257%" height="15" fill="rgb(234,202,34)" fg:x="13302" fg:w="5"/><text x="68.7499%" y="63.50"></text></g><g><title>native_write_msr (5 samples, 0.03%)</title><rect x="68.4999%" y="37" width="0.0257%" height="15" fill="rgb(253,148,53)" fg:x="13302" fg:w="5"/><text x="68.7499%" y="47.50"></text></g><g><title>&lt;num_prime::mint::Mint&lt;T,R&gt; as core::ops::arith::Rem&lt;&amp;num_prime::mint::Mint&lt;T,R&gt;&gt;&gt;::rem (52 samples, 0.27%)</title><rect x="68.4433%" y="341" width="0.2678%" height="15" fill="rgb(218,129,16)" fg:x="13291" fg:w="52"/><text x="68.6933%" y="351.50"></text></g><g><title>num_modular::reduced::ReducedInt&lt;T,R&gt;::new (50 samples, 0.26%)</title><rect x="68.4536%" y="325" width="0.2575%" height="15" fill="rgb(216,85,19)" fg:x="13293" fg:w="50"/><text x="68.7036%" y="335.50"></text></g><g><title>&lt;num_modular::monty::Montgomery&lt;u64,u64&gt; as num_modular::Reducer&lt;u64&gt;&gt;::transform (41 samples, 0.21%)</title><rect x="68.4999%" y="309" width="0.2111%" height="15" fill="rgb(235,228,7)" fg:x="13302" fg:w="41"/><text x="68.7499%" y="319.50"></text></g><g><title>__umodti3 (41 samples, 0.21%)</title><rect x="68.4999%" y="293" width="0.2111%" height="15" fill="rgb(245,175,0)" fg:x="13302" fg:w="41"/><text x="68.7499%" y="303.50"></text></g><g><title>compiler_builtins::int::udiv::__umodti3 (41 samples, 0.21%)</title><rect x="68.4999%" y="277" width="0.2111%" height="15" fill="rgb(208,168,36)" fg:x="13302" fg:w="41"/><text x="68.7499%" y="287.50"></text></g><g><title>compiler_builtins::int::specialized_div_rem::u128_div_rem (41 samples, 0.21%)</title><rect x="68.4999%" y="261" width="0.2111%" height="15" fill="rgb(246,171,24)" fg:x="13302" fg:w="41"/><text x="68.7499%" y="271.50"></text></g><g><title>compiler_builtins::int::specialized_div_rem::u128_by_u64_div_rem (36 samples, 0.19%)</title><rect x="68.5257%" y="245" width="0.1854%" height="15" fill="rgb(215,142,24)" fg:x="13307" fg:w="36"/><text x="68.7757%" y="255.50"></text></g><g><title>core::num::&lt;impl u128&gt;::overflowing_add (5 samples, 0.03%)</title><rect x="68.7574%" y="277" width="0.0257%" height="15" fill="rgb(250,187,7)" fg:x="13352" fg:w="5"/><text x="69.0074%" y="287.50"></text></g><g><title>&lt;num_modular::reduced::ReducedInt&lt;T,R&gt; as num_modular::ModularInteger&gt;::residue (19 samples, 0.10%)</title><rect x="68.7111%" y="325" width="0.0978%" height="15" fill="rgb(228,66,33)" fg:x="13343" fg:w="19"/><text x="68.9611%" y="335.50"></text></g><g><title>&lt;num_modular::monty::Montgomery&lt;u64,u64&gt; as num_modular::Reducer&lt;u64&gt;&gt;::residue (19 samples, 0.10%)</title><rect x="68.7111%" y="309" width="0.0978%" height="15" fill="rgb(234,215,21)" fg:x="13343" fg:w="19"/><text x="68.9611%" y="319.50"></text></g><g><title>num_modular::monty::Montgomery&lt;u64,u64&gt;::reduce (19 samples, 0.10%)</title><rect x="68.7111%" y="293" width="0.0978%" height="15" fill="rgb(222,191,20)" fg:x="13343" fg:w="19"/><text x="68.9611%" y="303.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (5 samples, 0.03%)</title><rect x="68.7832%" y="277" width="0.0257%" height="15" fill="rgb(245,79,54)" fg:x="13357" fg:w="5"/><text x="69.0332%" y="287.50"></text></g><g><title>&lt;num_prime::mint::Mint&lt;T,R&gt; as num_integer::Integer&gt;::gcd (573 samples, 2.95%)</title><rect x="68.7111%" y="341" width="2.9507%" height="15" fill="rgb(240,10,37)" fg:x="13343" fg:w="573"/><text x="68.9611%" y="351.50">&lt;nu..</text></g><g><title>&lt;u64 as num_integer::Integer&gt;::gcd (554 samples, 2.85%)</title><rect x="68.8089%" y="325" width="2.8529%" height="15" fill="rgb(214,192,32)" fg:x="13362" fg:w="554"/><text x="69.0589%" y="335.50">&lt;u..</text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (191 samples, 0.98%)</title><rect x="70.6782%" y="309" width="0.9836%" height="15" fill="rgb(209,36,54)" fg:x="13725" fg:w="191"/><text x="70.9282%" y="319.50"></text></g><g><title>&lt;num_prime::mint::Mint&lt;T,R&gt; as num_modular::ModularCoreOps&lt;&amp;num_prime::mint::Mint&lt;T,R&gt;,&amp;num_prime::mint::Mint&lt;T,R&gt;&gt;&gt;::addm (51 samples, 0.26%)</title><rect x="71.6618%" y="341" width="0.2626%" height="15" fill="rgb(220,10,11)" fg:x="13916" fg:w="51"/><text x="71.9118%" y="351.50"></text></g><g><title>&lt;num_modular::reduced::ReducedInt&lt;T,R&gt; as core::ops::arith::Add&lt;&amp;num_modular::reduced::ReducedInt&lt;T,R&gt;&gt;&gt;::add (51 samples, 0.26%)</title><rect x="71.6618%" y="325" width="0.2626%" height="15" fill="rgb(221,106,17)" fg:x="13916" fg:w="51"/><text x="71.9118%" y="335.50"></text></g><g><title>&lt;num_modular::monty::Montgomery&lt;u64,u64&gt; as num_modular::Reducer&lt;u64&gt;&gt;::add (51 samples, 0.26%)</title><rect x="71.6618%" y="309" width="0.2626%" height="15" fill="rgb(251,142,44)" fg:x="13916" fg:w="51"/><text x="71.9118%" y="319.50"></text></g><g><title>&lt;num_modular::reduced::Vanilla&lt;u64&gt; as num_modular::Reducer&lt;u64&gt;&gt;::add (51 samples, 0.26%)</title><rect x="71.6618%" y="293" width="0.2626%" height="15" fill="rgb(238,13,15)" fg:x="13916" fg:w="51"/><text x="71.9118%" y="303.50"></text></g><g><title>core::num::&lt;impl u64&gt;::overflowing_add (12 samples, 0.06%)</title><rect x="71.8626%" y="277" width="0.0618%" height="15" fill="rgb(208,107,27)" fg:x="13955" fg:w="12"/><text x="72.1126%" y="287.50"></text></g><g><title>core::num::&lt;impl u128&gt;::overflowing_add (23 samples, 0.12%)</title><rect x="72.2591%" y="277" width="0.1184%" height="15" fill="rgb(205,136,37)" fg:x="14032" fg:w="23"/><text x="72.5091%" y="287.50"></text></g><g><title>&lt;num_prime::mint::Mint&lt;T,R&gt; as num_modular::ModularCoreOps&lt;&amp;num_prime::mint::Mint&lt;T,R&gt;,&amp;num_prime::mint::Mint&lt;T,R&gt;&gt;&gt;::mulm (110 samples, 0.57%)</title><rect x="71.9244%" y="341" width="0.5665%" height="15" fill="rgb(250,205,27)" fg:x="13967" fg:w="110"/><text x="72.1744%" y="351.50"></text></g><g><title>&lt;num_modular::reduced::ReducedInt&lt;T,R&gt; as core::ops::arith::Mul&lt;&amp;num_modular::reduced::ReducedInt&lt;T,R&gt;&gt;&gt;::mul (100 samples, 0.51%)</title><rect x="71.9759%" y="325" width="0.5150%" height="15" fill="rgb(210,80,43)" fg:x="13977" fg:w="100"/><text x="72.2259%" y="335.50"></text></g><g><title>&lt;num_modular::monty::Montgomery&lt;u64,u64&gt; as num_modular::Reducer&lt;u64&gt;&gt;::mul (95 samples, 0.49%)</title><rect x="72.0016%" y="309" width="0.4892%" height="15" fill="rgb(247,160,36)" fg:x="13982" fg:w="95"/><text x="72.2516%" y="319.50"></text></g><g><title>num_modular::monty::Montgomery&lt;u64,u64&gt;::reduce (81 samples, 0.42%)</title><rect x="72.0737%" y="293" width="0.4171%" height="15" fill="rgb(234,13,49)" fg:x="13996" fg:w="81"/><text x="72.3237%" y="303.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (22 samples, 0.11%)</title><rect x="72.3776%" y="277" width="0.1133%" height="15" fill="rgb(234,122,0)" fg:x="14055" fg:w="22"/><text x="72.6276%" y="287.50"></text></g><g><title>&lt;num_modular::reduced::ReducedInt&lt;T,R&gt; as num_modular::ModularInteger&gt;::square (3 samples, 0.02%)</title><rect x="72.7432%" y="325" width="0.0154%" height="15" fill="rgb(207,146,38)" fg:x="14126" fg:w="3"/><text x="72.9932%" y="335.50"></text></g><g><title>core::num::&lt;impl u128&gt;::overflowing_add (3 samples, 0.02%)</title><rect x="72.8668%" y="309" width="0.0154%" height="15" fill="rgb(207,177,25)" fg:x="14150" fg:w="3"/><text x="73.1168%" y="319.50"></text></g><g><title>&lt;num_prime::mint::Mint&lt;T,R&gt; as num_modular::ModularUnaryOps&lt;&amp;num_prime::mint::Mint&lt;T,R&gt;&gt;&gt;::sqm (80 samples, 0.41%)</title><rect x="72.4909%" y="341" width="0.4120%" height="15" fill="rgb(211,178,42)" fg:x="14077" fg:w="80"/><text x="72.7409%" y="351.50"></text></g><g><title>num_modular::monty::Montgomery&lt;u64,u64&gt;::reduce (28 samples, 0.14%)</title><rect x="72.7586%" y="325" width="0.1442%" height="15" fill="rgb(230,69,54)" fg:x="14129" fg:w="28"/><text x="73.0086%" y="335.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (4 samples, 0.02%)</title><rect x="72.8822%" y="309" width="0.0206%" height="15" fill="rgb(214,135,41)" fg:x="14153" fg:w="4"/><text x="73.1322%" y="319.50"></text></g><g><title>&lt;num_modular::reduced::ReducedInt&lt;T,R&gt; as num_modular::ModularInteger&gt;::residue (72 samples, 0.37%)</title><rect x="73.0367%" y="309" width="0.3708%" height="15" fill="rgb(237,67,25)" fg:x="14183" fg:w="72"/><text x="73.2867%" y="319.50"></text></g><g><title>&lt;num_modular::monty::Montgomery&lt;u64,u64&gt; as num_modular::Reducer&lt;u64&gt;&gt;::residue (72 samples, 0.37%)</title><rect x="73.0367%" y="293" width="0.3708%" height="15" fill="rgb(222,189,50)" fg:x="14183" fg:w="72"/><text x="73.2867%" y="303.50"></text></g><g><title>num_modular::monty::Montgomery&lt;u64,u64&gt;::reduce (59 samples, 0.30%)</title><rect x="73.1037%" y="277" width="0.3038%" height="15" fill="rgb(245,148,34)" fg:x="14196" fg:w="59"/><text x="73.3537%" y="287.50"></text></g><g><title>core::num::&lt;impl u128&gt;::overflowing_add (6 samples, 0.03%)</title><rect x="73.3766%" y="261" width="0.0309%" height="15" fill="rgb(222,29,6)" fg:x="14249" fg:w="6"/><text x="73.6266%" y="271.50"></text></g><g><title>num_prime::factor::pollard_rho (1,165 samples, 6.00%)</title><rect x="67.4597%" y="357" width="5.9993%" height="15" fill="rgb(221,189,43)" fg:x="13100" fg:w="1165"/><text x="67.7097%" y="367.50">num_prim..</text></g><g><title>core::cmp::PartialOrd::gt (107 samples, 0.55%)</title><rect x="72.9080%" y="341" width="0.5510%" height="15" fill="rgb(207,36,27)" fg:x="14158" fg:w="107"/><text x="73.1580%" y="351.50"></text></g><g><title>&lt;num_prime::mint::Mint&lt;T,R&gt; as core::cmp::PartialOrd&gt;::partial_cmp (106 samples, 0.55%)</title><rect x="72.9131%" y="325" width="0.5459%" height="15" fill="rgb(217,90,24)" fg:x="14159" fg:w="106"/><text x="73.1631%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u64&gt;::partial_cmp (10 samples, 0.05%)</title><rect x="73.4075%" y="309" width="0.0515%" height="15" fill="rgb(224,66,35)" fg:x="14255" fg:w="10"/><text x="73.6575%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (10 samples, 0.05%)</title><rect x="73.4075%" y="293" width="0.0515%" height="15" fill="rgb(221,13,50)" fg:x="14255" fg:w="10"/><text x="73.6575%" y="303.50"></text></g><g><title>&lt;u64 as core::ops::arith::Div&lt;&amp;u64&gt;&gt;::div (12 samples, 0.06%)</title><rect x="73.8555%" y="341" width="0.0618%" height="15" fill="rgb(236,68,49)" fg:x="14342" fg:w="12"/><text x="74.1055%" y="351.50"></text></g><g><title>&lt;u64 as core::ops::arith::Div&gt;::div (12 samples, 0.06%)</title><rect x="73.8555%" y="325" width="0.0618%" height="15" fill="rgb(229,146,28)" fg:x="14342" fg:w="12"/><text x="74.1055%" y="335.50"></text></g><g><title>&lt;u64 as core::ops::arith::Mul&lt;&amp;u64&gt;&gt;::mul (11 samples, 0.06%)</title><rect x="73.9173%" y="341" width="0.0566%" height="15" fill="rgb(225,31,38)" fg:x="14354" fg:w="11"/><text x="74.1673%" y="351.50"></text></g><g><title>&lt;u64 as core::ops::arith::Mul&gt;::mul (11 samples, 0.06%)</title><rect x="73.9173%" y="325" width="0.0566%" height="15" fill="rgb(250,208,3)" fg:x="14354" fg:w="11"/><text x="74.1673%" y="335.50"></text></g><g><title>&lt;u64 as num_integer::Integer&gt;::gcd (45 samples, 0.23%)</title><rect x="73.9739%" y="341" width="0.2317%" height="15" fill="rgb(246,54,23)" fg:x="14365" fg:w="45"/><text x="74.2239%" y="351.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (13 samples, 0.07%)</title><rect x="74.1387%" y="325" width="0.0669%" height="15" fill="rgb(243,76,11)" fg:x="14397" fg:w="13"/><text x="74.3887%" y="335.50"></text></g><g><title>&lt;u64 as num_integer::Integer&gt;::is_multiple_of (9 samples, 0.05%)</title><rect x="74.2057%" y="341" width="0.0463%" height="15" fill="rgb(245,21,50)" fg:x="14410" fg:w="9"/><text x="74.4557%" y="351.50"></text></g><g><title>&lt;u64 as num_integer::roots::Roots&gt;::sqrt (9 samples, 0.05%)</title><rect x="74.2520%" y="341" width="0.0463%" height="15" fill="rgb(228,9,43)" fg:x="14419" fg:w="9"/><text x="74.5020%" y="351.50"></text></g><g><title>&lt;u64 as num_integer::roots::Roots&gt;::sqrt::go (9 samples, 0.05%)</title><rect x="74.2520%" y="325" width="0.0463%" height="15" fill="rgb(208,100,47)" fg:x="14419" fg:w="9"/><text x="74.5020%" y="335.50"></text></g><g><title>num_integer::roots::fixpoint (8 samples, 0.04%)</title><rect x="74.2572%" y="309" width="0.0412%" height="15" fill="rgb(232,26,8)" fg:x="14420" fg:w="8"/><text x="74.5072%" y="319.50"></text></g><g><title>&lt;u64 as num_integer::roots::Roots&gt;::sqrt::go::{{closure}} (7 samples, 0.04%)</title><rect x="74.2623%" y="293" width="0.0360%" height="15" fill="rgb(216,166,38)" fg:x="14421" fg:w="7"/><text x="74.5123%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u64&gt;::eq (9 samples, 0.05%)</title><rect x="74.2984%" y="341" width="0.0463%" height="15" fill="rgb(251,202,51)" fg:x="14428" fg:w="9"/><text x="74.5484%" y="351.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (5 samples, 0.03%)</title><rect x="74.3447%" y="341" width="0.0257%" height="15" fill="rgb(254,216,34)" fg:x="14437" fg:w="5"/><text x="74.5947%" y="351.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (5 samples, 0.03%)</title><rect x="74.3447%" y="325" width="0.0257%" height="15" fill="rgb(251,32,27)" fg:x="14437" fg:w="5"/><text x="74.5947%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (5 samples, 0.03%)</title><rect x="74.3447%" y="309" width="0.0257%" height="15" fill="rgb(208,127,28)" fg:x="14437" fg:w="5"/><text x="74.5947%" y="319.50"></text></g><g><title>&lt;&amp;u64 as core::ops::arith::Add&lt;&amp;u64&gt;&gt;::add (13 samples, 0.07%)</title><rect x="74.9833%" y="325" width="0.0669%" height="15" fill="rgb(224,137,22)" fg:x="14561" fg:w="13"/><text x="75.2333%" y="335.50"></text></g><g><title>&lt;u64 as core::ops::arith::Add&gt;::add (13 samples, 0.07%)</title><rect x="74.9833%" y="309" width="0.0669%" height="15" fill="rgb(254,70,32)" fg:x="14561" fg:w="13"/><text x="75.2333%" y="319.50"></text></g><g><title>&lt;&amp;u64 as core::ops::arith::Mul&lt;&amp;u64&gt;&gt;::mul (58 samples, 0.30%)</title><rect x="75.0502%" y="325" width="0.2987%" height="15" fill="rgb(229,75,37)" fg:x="14574" fg:w="58"/><text x="75.3002%" y="335.50"></text></g><g><title>&lt;u64 as core::ops::arith::Mul&gt;::mul (58 samples, 0.30%)</title><rect x="75.0502%" y="309" width="0.2987%" height="15" fill="rgb(252,64,23)" fg:x="14574" fg:w="58"/><text x="75.3002%" y="319.50"></text></g><g><title>&lt;u64 as core::ops::arith::Sub&lt;&amp;u64&gt;&gt;::sub (26 samples, 0.13%)</title><rect x="75.3489%" y="325" width="0.1339%" height="15" fill="rgb(232,162,48)" fg:x="14632" fg:w="26"/><text x="75.5989%" y="335.50"></text></g><g><title>&lt;u64 as core::ops::arith::Sub&gt;::sub (26 samples, 0.13%)</title><rect x="75.3489%" y="309" width="0.1339%" height="15" fill="rgb(246,160,12)" fg:x="14632" fg:w="26"/><text x="75.5989%" y="319.50"></text></g><g><title>num_prime::factor::squfof::rho (923 samples, 4.75%)</title><rect x="74.3705%" y="341" width="4.7531%" height="15" fill="rgb(247,166,0)" fg:x="14442" fg:w="923"/><text x="74.6205%" y="351.50">num_pr..</text></g><g><title>&lt;u64 as num_integer::Integer&gt;::div_floor (707 samples, 3.64%)</title><rect x="75.4828%" y="325" width="3.6408%" height="15" fill="rgb(249,219,21)" fg:x="14658" fg:w="707"/><text x="75.7328%" y="335.50">&lt;u64..</text></g><g><title>&lt;&amp;u64 as core::ops::bit::Shr&lt;usize&gt;&gt;::shr (14 samples, 0.07%)</title><rect x="79.1853%" y="325" width="0.0721%" height="15" fill="rgb(205,209,3)" fg:x="15377" fg:w="14"/><text x="79.4353%" y="335.50"></text></g><g><title>&lt;u64 as core::ops::bit::Shr&lt;usize&gt;&gt;::shr (14 samples, 0.07%)</title><rect x="79.1853%" y="309" width="0.0721%" height="15" fill="rgb(243,44,1)" fg:x="15377" fg:w="14"/><text x="79.4353%" y="319.50"></text></g><g><title>num_prime::integer::&lt;impl num_prime::traits::BitTest for u64&gt;::trailing_zeros (11 samples, 0.06%)</title><rect x="79.2574%" y="325" width="0.0566%" height="15" fill="rgb(206,159,16)" fg:x="15391" fg:w="11"/><text x="79.5074%" y="335.50"></text></g><g><title>core::num::&lt;impl u64&gt;::trailing_zeros (11 samples, 0.06%)</title><rect x="79.2574%" y="309" width="0.0566%" height="15" fill="rgb(244,77,30)" fg:x="15391" fg:w="11"/><text x="79.5074%" y="319.50"></text></g><g><title>&lt;u64 as num_integer::roots::Roots&gt;::sqrt::go::guess (92 samples, 0.47%)</title><rect x="79.4325%" y="245" width="0.4738%" height="15" fill="rgb(218,69,12)" fg:x="15425" fg:w="92"/><text x="79.6825%" y="255.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (41 samples, 0.21%)</title><rect x="79.6951%" y="229" width="0.2111%" height="15" fill="rgb(212,87,7)" fg:x="15476" fg:w="41"/><text x="79.9451%" y="239.50"></text></g><g><title>&lt;u64 as num_integer::roots::Roots&gt;::sqrt::go::{{closure}} (57 samples, 0.29%)</title><rect x="79.9269%" y="229" width="0.2935%" height="15" fill="rgb(245,114,25)" fg:x="15521" fg:w="57"/><text x="80.1769%" y="239.50"></text></g><g><title>num_prime::factor::squfof (1,317 samples, 6.78%)</title><rect x="73.4590%" y="357" width="6.7820%" height="15" fill="rgb(210,61,42)" fg:x="14265" fg:w="1317"/><text x="73.7090%" y="367.50">num_prime..</text></g><g><title>num_prime::integer::&lt;impl num_prime::traits::ExactRoots for u64&gt;::sqrt_exact (217 samples, 1.12%)</title><rect x="79.1235%" y="341" width="1.1175%" height="15" fill="rgb(211,52,33)" fg:x="15365" fg:w="217"/><text x="79.3735%" y="351.50"></text></g><g><title>num_prime::traits::ExactRoots::nth_root_exact (180 samples, 0.93%)</title><rect x="79.3141%" y="325" width="0.9269%" height="15" fill="rgb(234,58,33)" fg:x="15402" fg:w="180"/><text x="79.5641%" y="335.50"></text></g><g><title>&lt;u64 as num_integer::roots::Roots&gt;::nth_root (180 samples, 0.93%)</title><rect x="79.3141%" y="309" width="0.9269%" height="15" fill="rgb(220,115,36)" fg:x="15402" fg:w="180"/><text x="79.5641%" y="319.50"></text></g><g><title>&lt;u64 as num_integer::roots::Roots&gt;::nth_root::go (161 samples, 0.83%)</title><rect x="79.4119%" y="293" width="0.8291%" height="15" fill="rgb(243,153,54)" fg:x="15421" fg:w="161"/><text x="79.6619%" y="303.50"></text></g><g><title>&lt;u64 as num_integer::roots::Roots&gt;::sqrt (157 samples, 0.81%)</title><rect x="79.4325%" y="277" width="0.8085%" height="15" fill="rgb(251,47,18)" fg:x="15425" fg:w="157"/><text x="79.6825%" y="287.50"></text></g><g><title>&lt;u64 as num_integer::roots::Roots&gt;::sqrt::go (157 samples, 0.81%)</title><rect x="79.4325%" y="261" width="0.8085%" height="15" fill="rgb(242,102,42)" fg:x="15425" fg:w="157"/><text x="79.6825%" y="271.50"></text></g><g><title>num_integer::roots::fixpoint (65 samples, 0.33%)</title><rect x="79.9063%" y="245" width="0.3347%" height="15" fill="rgb(234,31,38)" fg:x="15517" fg:w="65"/><text x="80.1563%" y="255.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u64&gt;::lt (4 samples, 0.02%)</title><rect x="80.2204%" y="229" width="0.0206%" height="15" fill="rgb(221,117,51)" fg:x="15578" fg:w="4"/><text x="80.4704%" y="239.50"></text></g><g><title>&lt;&amp;u64 as core::ops::bit::Shr&lt;usize&gt;&gt;::shr (2 samples, 0.01%)</title><rect x="80.2462%" y="341" width="0.0103%" height="15" fill="rgb(212,20,18)" fg:x="15583" fg:w="2"/><text x="80.4962%" y="351.50"></text></g><g><title>&lt;u64 as core::ops::bit::Shr&lt;usize&gt;&gt;::shr (2 samples, 0.01%)</title><rect x="80.2462%" y="325" width="0.0103%" height="15" fill="rgb(245,133,36)" fg:x="15583" fg:w="2"/><text x="80.4962%" y="335.50"></text></g><g><title>&lt;u64 as num_integer::roots::Roots&gt;::sqrt::go::guess (5 samples, 0.03%)</title><rect x="80.2667%" y="261" width="0.0257%" height="15" fill="rgb(212,6,19)" fg:x="15587" fg:w="5"/><text x="80.5167%" y="271.50"></text></g><g><title>std::f64::&lt;impl f64&gt;::sqrt (2 samples, 0.01%)</title><rect x="80.2822%" y="245" width="0.0103%" height="15" fill="rgb(218,1,36)" fg:x="15590" fg:w="2"/><text x="80.5322%" y="255.50"></text></g><g><title>&lt;u64 as num_integer::roots::Roots&gt;::sqrt::go::{{closure}} (2 samples, 0.01%)</title><rect x="80.2925%" y="245" width="0.0103%" height="15" fill="rgb(246,84,54)" fg:x="15592" fg:w="2"/><text x="80.5425%" y="255.50"></text></g><g><title>num_prime::integer::&lt;impl num_prime::traits::ExactRoots for u64&gt;::sqrt_exact (13 samples, 0.07%)</title><rect x="80.2410%" y="357" width="0.0669%" height="15" fill="rgb(242,110,6)" fg:x="15582" fg:w="13"/><text x="80.4910%" y="367.50"></text></g><g><title>num_prime::traits::ExactRoots::nth_root_exact (10 samples, 0.05%)</title><rect x="80.2564%" y="341" width="0.0515%" height="15" fill="rgb(214,47,5)" fg:x="15585" fg:w="10"/><text x="80.5064%" y="351.50"></text></g><g><title>&lt;u64 as num_integer::roots::Roots&gt;::nth_root (10 samples, 0.05%)</title><rect x="80.2564%" y="325" width="0.0515%" height="15" fill="rgb(218,159,25)" fg:x="15585" fg:w="10"/><text x="80.5064%" y="335.50"></text></g><g><title>&lt;u64 as num_integer::roots::Roots&gt;::nth_root::go (8 samples, 0.04%)</title><rect x="80.2667%" y="309" width="0.0412%" height="15" fill="rgb(215,211,28)" fg:x="15587" fg:w="8"/><text x="80.5167%" y="319.50"></text></g><g><title>&lt;u64 as num_integer::roots::Roots&gt;::sqrt (8 samples, 0.04%)</title><rect x="80.2667%" y="293" width="0.0412%" height="15" fill="rgb(238,59,32)" fg:x="15587" fg:w="8"/><text x="80.5167%" y="303.50"></text></g><g><title>&lt;u64 as num_integer::roots::Roots&gt;::sqrt::go (8 samples, 0.04%)</title><rect x="80.2667%" y="277" width="0.0412%" height="15" fill="rgb(226,82,3)" fg:x="15587" fg:w="8"/><text x="80.5167%" y="287.50"></text></g><g><title>num_integer::roots::fixpoint (3 samples, 0.02%)</title><rect x="80.2925%" y="261" width="0.0154%" height="15" fill="rgb(240,164,32)" fg:x="15592" fg:w="3"/><text x="80.5425%" y="271.50"></text></g><g><title>&lt;num_prime::mint::Mint&lt;T,R&gt; as core::convert::From&lt;T&gt;&gt;::from (10 samples, 0.05%)</title><rect x="80.3234%" y="309" width="0.0515%" height="15" fill="rgb(232,46,7)" fg:x="15598" fg:w="10"/><text x="80.5734%" y="319.50"></text></g><g><title>either::Either&lt;L,R&gt;::either (11 samples, 0.06%)</title><rect x="80.3749%" y="293" width="0.0566%" height="15" fill="rgb(229,129,53)" fg:x="15608" fg:w="11"/><text x="80.6249%" y="303.50"></text></g><g><title>&lt;&amp;num_prime::mint::Mint&lt;T,R&gt; as core::ops::bit::Shr&lt;usize&gt;&gt;::shr (11 samples, 0.06%)</title><rect x="81.6365%" y="277" width="0.0566%" height="15" fill="rgb(234,188,29)" fg:x="15853" fg:w="11"/><text x="81.8865%" y="287.50"></text></g><g><title>&lt;u32 as core::ops::bit::Shr&lt;usize&gt;&gt;::shr (11 samples, 0.06%)</title><rect x="81.6365%" y="261" width="0.0566%" height="15" fill="rgb(246,141,4)" fg:x="15853" fg:w="11"/><text x="81.8865%" y="271.50"></text></g><g><title>&lt;&amp;num_prime::mint::Mint&lt;T,R&gt; as num_modular::ModularUnaryOps&lt;&amp;num_prime::mint::Mint&lt;T,R&gt;&gt;&gt;::negm (15 samples, 0.08%)</title><rect x="81.6932%" y="277" width="0.0772%" height="15" fill="rgb(229,23,39)" fg:x="15864" fg:w="15"/><text x="81.9432%" y="287.50"></text></g><g><title>&lt;num_modular::reduced::ReducedInt&lt;T,R&gt; as core::ops::arith::Neg&gt;::neg (15 samples, 0.08%)</title><rect x="81.6932%" y="261" width="0.0772%" height="15" fill="rgb(206,12,3)" fg:x="15864" fg:w="15"/><text x="81.9432%" y="271.50"></text></g><g><title>&lt;num_modular::monty::Montgomery&lt;u32,u32&gt; as num_modular::Reducer&lt;u32&gt;&gt;::neg (15 samples, 0.08%)</title><rect x="81.6932%" y="245" width="0.0772%" height="15" fill="rgb(252,226,20)" fg:x="15864" fg:w="15"/><text x="81.9432%" y="255.50"></text></g><g><title>&lt;num_modular::reduced::Vanilla&lt;u32&gt; as num_modular::Reducer&lt;u32&gt;&gt;::neg (15 samples, 0.08%)</title><rect x="81.6932%" y="229" width="0.0772%" height="15" fill="rgb(216,123,35)" fg:x="15864" fg:w="15"/><text x="81.9432%" y="239.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_mul (21 samples, 0.11%)</title><rect x="82.0125%" y="213" width="0.1081%" height="15" fill="rgb(212,68,40)" fg:x="15926" fg:w="21"/><text x="82.2625%" y="223.50"></text></g><g><title>&lt;&amp;num_prime::mint::Mint&lt;T,R&gt; as num_modular::ModularUnaryOps&lt;&amp;num_prime::mint::Mint&lt;T,R&gt;&gt;&gt;::sqm (69 samples, 0.36%)</title><rect x="81.7704%" y="277" width="0.3553%" height="15" fill="rgb(254,125,32)" fg:x="15879" fg:w="69"/><text x="82.0204%" y="287.50"></text></g><g><title>&lt;num_modular::reduced::ReducedInt&lt;T,R&gt; as num_modular::ModularInteger&gt;::square (69 samples, 0.36%)</title><rect x="81.7704%" y="261" width="0.3553%" height="15" fill="rgb(253,97,22)" fg:x="15879" fg:w="69"/><text x="82.0204%" y="271.50"></text></g><g><title>&lt;num_modular::monty::Montgomery&lt;u32,u32&gt; as num_modular::Reducer&lt;u32&gt;&gt;::square (66 samples, 0.34%)</title><rect x="81.7859%" y="245" width="0.3399%" height="15" fill="rgb(241,101,14)" fg:x="15882" fg:w="66"/><text x="82.0359%" y="255.50"></text></g><g><title>num_modular::monty::Montgomery&lt;u32,u32&gt;::reduce (55 samples, 0.28%)</title><rect x="81.8425%" y="229" width="0.2832%" height="15" fill="rgb(238,103,29)" fg:x="15893" fg:w="55"/><text x="82.0925%" y="239.50"></text></g><g><title>&lt;num_prime::mint::Mint&lt;T,R&gt; as core::cmp::PartialEq&gt;::eq (6 samples, 0.03%)</title><rect x="82.1258%" y="277" width="0.0309%" height="15" fill="rgb(233,195,47)" fg:x="15948" fg:w="6"/><text x="82.3758%" y="287.50"></text></g><g><title>&lt;&amp;u32 as core::ops::bit::Shr&lt;i32&gt;&gt;::shr (6 samples, 0.03%)</title><rect x="82.2905%" y="213" width="0.0309%" height="15" fill="rgb(246,218,30)" fg:x="15980" fg:w="6"/><text x="82.5405%" y="223.50"></text></g><g><title>&lt;u32 as core::ops::bit::Shr&lt;i32&gt;&gt;::shr (6 samples, 0.03%)</title><rect x="82.2905%" y="197" width="0.0309%" height="15" fill="rgb(219,145,47)" fg:x="15980" fg:w="6"/><text x="82.5405%" y="207.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_mul (84 samples, 0.43%)</title><rect x="82.3266%" y="213" width="0.4326%" height="15" fill="rgb(243,12,26)" fg:x="15987" fg:w="84"/><text x="82.5766%" y="223.50"></text></g><g><title>&lt;num_modular::monty::Montgomery&lt;u32,u32&gt; as num_modular::Reducer&lt;u32&gt;&gt;::new (132 samples, 0.68%)</title><rect x="82.1567%" y="245" width="0.6797%" height="15" fill="rgb(214,87,16)" fg:x="15954" fg:w="132"/><text x="82.4067%" y="255.50"></text></g><g><title>&lt;u32 as num_modular::monty::NegModInv&gt;::neginv (128 samples, 0.66%)</title><rect x="82.1772%" y="229" width="0.6591%" height="15" fill="rgb(208,99,42)" fg:x="15958" fg:w="128"/><text x="82.4272%" y="239.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (15 samples, 0.08%)</title><rect x="82.7592%" y="213" width="0.0772%" height="15" fill="rgb(253,99,2)" fg:x="16071" fg:w="15"/><text x="83.0092%" y="223.50"></text></g><g><title>&lt;num_prime::mint::Mint&lt;T,R&gt; as core::ops::arith::Rem&lt;&amp;num_prime::mint::Mint&lt;T,R&gt;&gt;&gt;::rem (272 samples, 1.40%)</title><rect x="82.1567%" y="277" width="1.4007%" height="15" fill="rgb(220,168,23)" fg:x="15954" fg:w="272"/><text x="82.4067%" y="287.50"></text></g><g><title>num_modular::reduced::ReducedInt&lt;T,R&gt;::new (272 samples, 1.40%)</title><rect x="82.1567%" y="261" width="1.4007%" height="15" fill="rgb(242,38,24)" fg:x="15954" fg:w="272"/><text x="82.4067%" y="271.50"></text></g><g><title>&lt;num_modular::monty::Montgomery&lt;u32,u32&gt; as num_modular::Reducer&lt;u32&gt;&gt;::transform (140 samples, 0.72%)</title><rect x="82.8364%" y="245" width="0.7209%" height="15" fill="rgb(225,182,9)" fg:x="16086" fg:w="140"/><text x="83.0864%" y="255.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_mul (131 samples, 0.67%)</title><rect x="87.8470%" y="213" width="0.6746%" height="15" fill="rgb(243,178,37)" fg:x="17059" fg:w="131"/><text x="88.0970%" y="223.50"></text></g><g><title>&lt;num_modular::monty::Montgomery&lt;u32,u32&gt; as num_modular::Reducer&lt;u32&gt;&gt;::mul (862 samples, 4.44%)</title><rect x="84.5615%" y="245" width="4.4390%" height="15" fill="rgb(232,139,19)" fg:x="16421" fg:w="862"/><text x="84.8115%" y="255.50">&lt;num_..</text></g><g><title>num_modular::monty::Montgomery&lt;u32,u32&gt;::reduce (672 samples, 3.46%)</title><rect x="85.5399%" y="229" width="3.4605%" height="15" fill="rgb(225,201,24)" fg:x="16611" fg:w="672"/><text x="85.7899%" y="239.50">num..</text></g><g><title>core::num::&lt;impl u64&gt;::overflowing_add (93 samples, 0.48%)</title><rect x="88.5216%" y="213" width="0.4789%" height="15" fill="rgb(221,47,46)" fg:x="17190" fg:w="93"/><text x="88.7716%" y="223.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_mul (188 samples, 0.97%)</title><rect x="91.8791%" y="213" width="0.9681%" height="15" fill="rgb(249,23,13)" fg:x="17842" fg:w="188"/><text x="92.1291%" y="223.50"></text></g><g><title>&lt;num_modular::monty::Montgomery&lt;u32,u32&gt; as num_modular::Reducer&lt;u32&gt;&gt;::square (807 samples, 4.16%)</title><rect x="89.0005%" y="245" width="4.1557%" height="15" fill="rgb(219,9,5)" fg:x="17283" fg:w="807"/><text x="89.2505%" y="255.50">&lt;num_..</text></g><g><title>num_modular::monty::Montgomery&lt;u32,u32&gt;::reduce (675 samples, 3.48%)</title><rect x="89.6802%" y="229" width="3.4760%" height="15" fill="rgb(254,171,16)" fg:x="17415" fg:w="675"/><text x="89.9302%" y="239.50">num..</text></g><g><title>core::num::&lt;impl u64&gt;::overflowing_add (60 samples, 0.31%)</title><rect x="92.8472%" y="213" width="0.3090%" height="15" fill="rgb(230,171,20)" fg:x="18030" fg:w="60"/><text x="93.0972%" y="223.50"></text></g><g><title>&lt;num_modular::monty::Montgomery&lt;u32,u32&gt; as num_modular::Reducer&lt;u32&gt;&gt;::pow (2,033 samples, 10.47%)</title><rect x="83.6603%" y="261" width="10.4691%" height="15" fill="rgb(210,71,41)" fg:x="16246" fg:w="2033"/><text x="83.9103%" y="271.50">&lt;num_modular::m..</text></g><g><title>&lt;num_modular::monty::Montgomery&lt;u32,u32&gt; as num_modular::Reducer&lt;u32&gt;&gt;::transform (189 samples, 0.97%)</title><rect x="93.1562%" y="245" width="0.9733%" height="15" fill="rgb(206,173,20)" fg:x="18090" fg:w="189"/><text x="93.4062%" y="255.50"></text></g><g><title>&lt;num_modular::reduced::ReducedInt&lt;T,R&gt; as num_traits::pow::Pow&lt;T&gt;&gt;::pow (8 samples, 0.04%)</title><rect x="94.1295%" y="261" width="0.0412%" height="15" fill="rgb(233,88,34)" fg:x="18279" fg:w="8"/><text x="94.3795%" y="271.50"></text></g><g><title>&lt;&amp;u32 as core::ops::bit::Shr&lt;i32&gt;&gt;::shr (6 samples, 0.03%)</title><rect x="94.1758%" y="213" width="0.0309%" height="15" fill="rgb(223,209,46)" fg:x="18288" fg:w="6"/><text x="94.4258%" y="223.50"></text></g><g><title>&lt;u32 as core::ops::bit::Shr&lt;i32&gt;&gt;::shr (6 samples, 0.03%)</title><rect x="94.1758%" y="197" width="0.0309%" height="15" fill="rgb(250,43,18)" fg:x="18288" fg:w="6"/><text x="94.4258%" y="207.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_mul (58 samples, 0.30%)</title><rect x="94.2067%" y="213" width="0.2987%" height="15" fill="rgb(208,13,10)" fg:x="18294" fg:w="58"/><text x="94.4567%" y="223.50"></text></g><g><title>&lt;num_modular::monty::Montgomery&lt;u32,u32&gt; as num_modular::Reducer&lt;u32&gt;&gt;::new (66 samples, 0.34%)</title><rect x="94.1707%" y="245" width="0.3399%" height="15" fill="rgb(212,200,36)" fg:x="18287" fg:w="66"/><text x="94.4207%" y="255.50"></text></g><g><title>&lt;u32 as num_modular::monty::NegModInv&gt;::neginv (66 samples, 0.34%)</title><rect x="94.1707%" y="229" width="0.3399%" height="15" fill="rgb(225,90,30)" fg:x="18287" fg:w="66"/><text x="94.4207%" y="239.50"></text></g><g><title>&lt;num_prime::mint::Mint&lt;T,R&gt; as num_modular::ModularPow&lt;&amp;num_prime::mint::Mint&lt;T,R&gt;,&amp;num_prime::mint::Mint&lt;T,R&gt;&gt;&gt;::powm (2,345 samples, 12.08%)</title><rect x="83.5573%" y="277" width="12.0758%" height="15" fill="rgb(236,182,39)" fg:x="16226" fg:w="2345"/><text x="83.8073%" y="287.50">&lt;num_prime::mint::..</text></g><g><title>num_modular::reduced::ReducedInt&lt;T,R&gt;::new (284 samples, 1.46%)</title><rect x="94.1707%" y="261" width="1.4625%" height="15" fill="rgb(212,144,35)" fg:x="18287" fg:w="284"/><text x="94.4207%" y="271.50"></text></g><g><title>&lt;num_modular::monty::Montgomery&lt;u32,u32&gt; as num_modular::Reducer&lt;u32&gt;&gt;::transform (218 samples, 1.12%)</title><rect x="94.5105%" y="245" width="1.1226%" height="15" fill="rgb(228,63,44)" fg:x="18353" fg:w="218"/><text x="94.7605%" y="255.50"></text></g><g><title>&lt;num_prime::mint::Mint&lt;T,R&gt; as num_prime::traits::BitTest&gt;::trailing_zeros (11 samples, 0.06%)</title><rect x="95.6331%" y="277" width="0.0566%" height="15" fill="rgb(228,109,6)" fg:x="18571" fg:w="11"/><text x="95.8831%" y="287.50"></text></g><g><title>num_prime::integer::&lt;impl num_prime::traits::BitTest for u32&gt;::trailing_zeros (11 samples, 0.06%)</title><rect x="95.6331%" y="261" width="0.0566%" height="15" fill="rgb(238,117,24)" fg:x="18571" fg:w="11"/><text x="95.8831%" y="271.50"></text></g><g><title>core::num::&lt;impl u32&gt;::trailing_zeros (11 samples, 0.06%)</title><rect x="95.6331%" y="245" width="0.0566%" height="15" fill="rgb(242,26,26)" fg:x="18571" fg:w="11"/><text x="95.8831%" y="255.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::lt (10 samples, 0.05%)</title><rect x="95.6949%" y="277" width="0.0515%" height="15" fill="rgb(221,92,48)" fg:x="18583" fg:w="10"/><text x="95.9449%" y="287.50"></text></g><g><title>core::cmp::PartialOrd::lt (10 samples, 0.05%)</title><rect x="95.6949%" y="261" width="0.0515%" height="15" fill="rgb(209,209,32)" fg:x="18583" fg:w="10"/><text x="95.9449%" y="271.50"></text></g><g><title>&lt;num_prime::mint::Mint&lt;T,R&gt; as core::cmp::PartialOrd&gt;::partial_cmp (10 samples, 0.05%)</title><rect x="95.6949%" y="245" width="0.0515%" height="15" fill="rgb(221,70,22)" fg:x="18583" fg:w="10"/><text x="95.9449%" y="255.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::all (3,022 samples, 15.56%)</title><rect x="80.3182%" y="341" width="15.5621%" height="15" fill="rgb(248,145,5)" fg:x="15597" fg:w="3022"/><text x="80.5682%" y="351.50">&lt;core::slice::iter::Iter..</text></g><g><title>num_prime::nt_funcs::is_prime64_miller::{{closure}} (3,021 samples, 15.56%)</title><rect x="80.3234%" y="325" width="15.5569%" height="15" fill="rgb(226,116,26)" fg:x="15598" fg:w="3021"/><text x="80.5734%" y="335.50">num_prime::nt_funcs::is_..</text></g><g><title>num_prime::primality::&lt;impl num_prime::traits::PrimalityUtils for T&gt;::is_sprp (3,011 samples, 15.51%)</title><rect x="80.3749%" y="309" width="15.5054%" height="15" fill="rgb(244,5,17)" fg:x="15608" fg:w="3011"/><text x="80.6249%" y="319.50">num_prime::primality::&lt;i..</text></g><g><title>num_prime::primality::&lt;impl num_prime::traits::PrimalityUtils for T&gt;::test_sprp (3,000 samples, 15.45%)</title><rect x="80.4315%" y="293" width="15.4488%" height="15" fill="rgb(252,159,33)" fg:x="15619" fg:w="3000"/><text x="80.6815%" y="303.50">num_prime::primality::&lt;i..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (26 samples, 0.13%)</title><rect x="95.7464%" y="277" width="0.1339%" height="15" fill="rgb(206,71,0)" fg:x="18593" fg:w="26"/><text x="95.9964%" y="287.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (26 samples, 0.13%)</title><rect x="95.7464%" y="261" width="0.1339%" height="15" fill="rgb(233,118,54)" fg:x="18593" fg:w="26"/><text x="95.9964%" y="271.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (23 samples, 0.12%)</title><rect x="95.7619%" y="245" width="0.1184%" height="15" fill="rgb(234,83,48)" fg:x="18596" fg:w="23"/><text x="96.0119%" y="255.50"></text></g><g><title>num_prime::nt_funcs::is_prime64_miller (3,026 samples, 15.58%)</title><rect x="80.3079%" y="357" width="15.5827%" height="15" fill="rgb(228,3,54)" fg:x="15595" fg:w="3026"/><text x="80.5579%" y="367.50">num_prime::nt_funcs::is_..</text></g><g><title>&lt;num_prime::mint::Mint&lt;T,R&gt; as core::convert::From&lt;T&gt;&gt;::from (2 samples, 0.01%)</title><rect x="95.8803%" y="341" width="0.0103%" height="15" fill="rgb(226,155,13)" fg:x="18619" fg:w="2"/><text x="96.1303%" y="351.50"></text></g><g><title>num_prime::traits::ExactRoots::cbrt_exact (35 samples, 0.18%)</title><rect x="95.8906%" y="357" width="0.1802%" height="15" fill="rgb(241,28,37)" fg:x="18621" fg:w="35"/><text x="96.1406%" y="367.50"></text></g><g><title>num_prime::traits::ExactRoots::nth_root_exact (35 samples, 0.18%)</title><rect x="95.8906%" y="341" width="0.1802%" height="15" fill="rgb(233,93,10)" fg:x="18621" fg:w="35"/><text x="96.1406%" y="351.50"></text></g><g><title>&lt;u64 as num_integer::roots::Roots&gt;::nth_root (34 samples, 0.18%)</title><rect x="95.8958%" y="325" width="0.1751%" height="15" fill="rgb(225,113,19)" fg:x="18622" fg:w="34"/><text x="96.1458%" y="335.50"></text></g><g><title>&lt;u64 as num_integer::roots::Roots&gt;::cbrt::go (33 samples, 0.17%)</title><rect x="95.9009%" y="309" width="0.1699%" height="15" fill="rgb(241,2,18)" fg:x="18623" fg:w="33"/><text x="96.1509%" y="319.50"></text></g><g><title>&lt;u32 as num_integer::roots::Roots&gt;::cbrt (33 samples, 0.17%)</title><rect x="95.9009%" y="293" width="0.1699%" height="15" fill="rgb(228,207,21)" fg:x="18623" fg:w="33"/><text x="96.1509%" y="303.50"></text></g><g><title>&lt;u32 as num_integer::roots::Roots&gt;::cbrt::go (33 samples, 0.17%)</title><rect x="95.9009%" y="277" width="0.1699%" height="15" fill="rgb(213,211,35)" fg:x="18623" fg:w="33"/><text x="96.1509%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;rand::rngs::thread::ThreadRng&gt; (4 samples, 0.02%)</title><rect x="96.0760%" y="341" width="0.0206%" height="15" fill="rgb(209,83,10)" fg:x="18657" fg:w="4"/><text x="96.3260%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::UnsafeCell&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;rand_chacha::chacha::ChaCha12Core,rand_core::os::OsRng&gt;&gt;&gt;&gt; (4 samples, 0.02%)</title><rect x="96.0760%" y="325" width="0.0206%" height="15" fill="rgb(209,164,1)" fg:x="18657" fg:w="4"/><text x="96.3260%" y="335.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.02%)</title><rect x="96.0760%" y="309" width="0.0206%" height="15" fill="rgb(213,184,43)" fg:x="18657" fg:w="4"/><text x="96.3260%" y="319.50"></text></g><g><title>alloc::rc::RcInnerPtr::dec_strong (4 samples, 0.02%)</title><rect x="96.0760%" y="293" width="0.0206%" height="15" fill="rgb(231,61,34)" fg:x="18657" fg:w="4"/><text x="96.3260%" y="303.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (4 samples, 0.02%)</title><rect x="96.0760%" y="277" width="0.0206%" height="15" fill="rgb(235,75,3)" fg:x="18657" fg:w="4"/><text x="96.3260%" y="287.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (4 samples, 0.02%)</title><rect x="96.0760%" y="261" width="0.0206%" height="15" fill="rgb(220,106,47)" fg:x="18657" fg:w="4"/><text x="96.3260%" y="271.50"></text></g><g><title>core::mem::replace (4 samples, 0.02%)</title><rect x="96.0760%" y="245" width="0.0206%" height="15" fill="rgb(210,196,33)" fg:x="18657" fg:w="4"/><text x="96.3260%" y="255.50"></text></g><g><title>core::ptr::write (4 samples, 0.02%)</title><rect x="96.0760%" y="229" width="0.0206%" height="15" fill="rgb(229,154,42)" fg:x="18657" fg:w="4"/><text x="96.3260%" y="239.50"></text></g><g><title>ppv_lite86::x86_64::sse2::avx2::&lt;impl ppv_lite86::types::MultiLane&lt;[ppv_lite86::x86_64::sse2::u32x4_sse2&lt;ppv_lite86::x86_64::YesS3,ppv_lite86::x86_64::YesS4,NI&gt;: 4]&gt; for ppv_lite86::soft::x2&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt;,ppv_lite86::x86_64::sse2::G0&gt;&gt;::from_lanes (8 samples, 0.04%)</title><rect x="96.1121%" y="149" width="0.0412%" height="15" fill="rgb(228,114,26)" fg:x="18664" fg:w="8"/><text x="96.3621%" y="159.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::MultiLane&lt;[ppv_lite86::x86_64::sse2::u32x4_sse2&lt;ppv_lite86::x86_64::YesS3,ppv_lite86::x86_64::YesS4,NI&gt;: 2]&gt;&gt;::from_lanes (8 samples, 0.04%)</title><rect x="96.1121%" y="133" width="0.0412%" height="15" fill="rgb(208,144,1)" fg:x="18664" fg:w="8"/><text x="96.3621%" y="143.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_setr_m128i (8 samples, 0.04%)</title><rect x="96.1121%" y="117" width="0.0412%" height="15" fill="rgb(239,112,37)" fg:x="18664" fg:w="8"/><text x="96.3621%" y="127.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_m128i (8 samples, 0.04%)</title><rect x="96.1121%" y="101" width="0.0412%" height="15" fill="rgb(210,96,50)" fg:x="18664" fg:w="8"/><text x="96.3621%" y="111.50"></text></g><g><title>core::core_arch::x86::avx::_mm256_set_m128 (8 samples, 0.04%)</title><rect x="96.1121%" y="85" width="0.0412%" height="15" fill="rgb(222,178,2)" fg:x="18664" fg:w="8"/><text x="96.3621%" y="95.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as core::ops::arith::AddAssign&gt;::add_assign (3 samples, 0.02%)</title><rect x="96.1533%" y="133" width="0.0154%" height="15" fill="rgb(226,74,18)" fg:x="18672" fg:w="3"/><text x="96.4033%" y="143.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::AddAssign&gt;::add_assign (3 samples, 0.02%)</title><rect x="96.1533%" y="117" width="0.0154%" height="15" fill="rgb(225,67,54)" fg:x="18672" fg:w="3"/><text x="96.4033%" y="127.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as core::ops::arith::Add&gt;::add (3 samples, 0.02%)</title><rect x="96.1533%" y="101" width="0.0154%" height="15" fill="rgb(251,92,32)" fg:x="18672" fg:w="3"/><text x="96.4033%" y="111.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_add_epi32 (3 samples, 0.02%)</title><rect x="96.1533%" y="85" width="0.0154%" height="15" fill="rgb(228,149,22)" fg:x="18672" fg:w="3"/><text x="96.4033%" y="95.50"></text></g><g><title>&lt;ppv_lite86::soft::x2&lt;W,G&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (2 samples, 0.01%)</title><rect x="96.1739%" y="133" width="0.0103%" height="15" fill="rgb(243,54,13)" fg:x="18676" fg:w="2"/><text x="96.4239%" y="143.50"></text></g><g><title>&lt;ppv_lite86::x86_64::sse2::avx2::u32x4x2_avx2&lt;NI&gt; as ppv_lite86::types::RotateEachWord32&gt;::rotate_each_word_right16 (2 samples, 0.01%)</title><rect x="96.1739%" y="117" width="0.0103%" height="15" fill="rgb(243,180,28)" fg:x="18676" fg:w="2"/><text x="96.4239%" y="127.50"></text></g><g><title>core::core_arch::x86::avx2::_mm256_shuffle_epi8 (2 samples, 0.01%)</title><rect x="96.1739%" y="101" width="0.0103%" height="15" fill="rgb(208,167,24)" fg:x="18676" fg:w="2"/><text x="96.4239%" y="111.50"></text></g><g><title>rand::rng::Rng::gen (19 samples, 0.10%)</title><rect x="96.0966%" y="341" width="0.0978%" height="15" fill="rgb(245,73,45)" fg:x="18661" fg:w="19"/><text x="96.3466%" y="351.50"></text></g><g><title>rand::distributions::integer::&lt;impl rand::distributions::distribution::Distribution&lt;u64&gt; for rand::distributions::Standard&gt;::sample (19 samples, 0.10%)</title><rect x="96.0966%" y="325" width="0.0978%" height="15" fill="rgb(237,203,48)" fg:x="18661" fg:w="19"/><text x="96.3466%" y="335.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as rand_core::RngCore&gt;::next_u64 (19 samples, 0.10%)</title><rect x="96.0966%" y="309" width="0.0978%" height="15" fill="rgb(211,197,16)" fg:x="18661" fg:w="19"/><text x="96.3466%" y="319.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingRng&lt;R,Rsdr&gt; as rand_core::RngCore&gt;::next_u64 (19 samples, 0.10%)</title><rect x="96.0966%" y="293" width="0.0978%" height="15" fill="rgb(243,99,51)" fg:x="18661" fg:w="19"/><text x="96.3466%" y="303.50"></text></g><g><title>&lt;rand_core::block::BlockRng&lt;R&gt; as rand_core::RngCore&gt;::next_u64 (19 samples, 0.10%)</title><rect x="96.0966%" y="277" width="0.0978%" height="15" fill="rgb(215,123,29)" fg:x="18661" fg:w="19"/><text x="96.3466%" y="287.50"></text></g><g><title>rand_core::block::BlockRng&lt;R&gt;::generate_and_set (17 samples, 0.09%)</title><rect x="96.1069%" y="261" width="0.0875%" height="15" fill="rgb(239,186,37)" fg:x="18663" fg:w="17"/><text x="96.3569%" y="271.50"></text></g><g><title>&lt;rand::rngs::adapter::reseeding::ReseedingCore&lt;R,Rsdr&gt; as rand_core::block::BlockRngCore&gt;::generate (17 samples, 0.09%)</title><rect x="96.1069%" y="245" width="0.0875%" height="15" fill="rgb(252,136,39)" fg:x="18663" fg:w="17"/><text x="96.3569%" y="255.50"></text></g><g><title>&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (17 samples, 0.09%)</title><rect x="96.1069%" y="229" width="0.0875%" height="15" fill="rgb(223,213,32)" fg:x="18663" fg:w="17"/><text x="96.3569%" y="239.50"></text></g><g><title>rand_chacha::guts::ChaCha::refill4 (17 samples, 0.09%)</title><rect x="96.1069%" y="213" width="0.0875%" height="15" fill="rgb(233,115,5)" fg:x="18663" fg:w="17"/><text x="96.3569%" y="223.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (17 samples, 0.09%)</title><rect x="96.1069%" y="197" width="0.0875%" height="15" fill="rgb(207,226,44)" fg:x="18663" fg:w="17"/><text x="96.3569%" y="207.50"></text></g><g><title>rand_chacha::guts::refill_wide::fn_impl (17 samples, 0.09%)</title><rect x="96.1069%" y="181" width="0.0875%" height="15" fill="rgb(208,126,0)" fg:x="18663" fg:w="17"/><text x="96.3569%" y="191.50"></text></g><g><title>rand_chacha::guts::refill_wide_impl (17 samples, 0.09%)</title><rect x="96.1069%" y="165" width="0.0875%" height="15" fill="rgb(244,66,21)" fg:x="18663" fg:w="17"/><text x="96.3569%" y="175.50"></text></g><g><title>rand_chacha::guts::round (8 samples, 0.04%)</title><rect x="96.1533%" y="149" width="0.0412%" height="15" fill="rgb(222,97,12)" fg:x="18672" fg:w="8"/><text x="96.4033%" y="159.50"></text></g><g><title>rand::rngs::thread::THREAD_RNG_KEY::__getit (2 samples, 0.01%)</title><rect x="96.1944%" y="293" width="0.0103%" height="15" fill="rgb(219,213,19)" fg:x="18680" fg:w="2"/><text x="96.4444%" y="303.50"></text></g><g><title>std::sys::common::thread_local::fast_local::fast::Key&lt;T&gt;::get (2 samples, 0.01%)</title><rect x="96.1944%" y="277" width="0.0103%" height="15" fill="rgb(252,169,30)" fg:x="18680" fg:w="2"/><text x="96.4444%" y="287.50"></text></g><g><title>num_prime::nt_funcs::factorize64_advanced (7,004 samples, 36.07%)</title><rect x="60.1576%" y="373" width="36.0678%" height="15" fill="rgb(206,32,51)" fg:x="11682" fg:w="7004"/><text x="60.4076%" y="383.50">num_prime::nt_funcs::factorize64_advanced</text></g><g><title>rand::random (30 samples, 0.15%)</title><rect x="96.0709%" y="357" width="0.1545%" height="15" fill="rgb(250,172,42)" fg:x="18656" fg:w="30"/><text x="96.3209%" y="367.50"></text></g><g><title>rand::rngs::thread::thread_rng (6 samples, 0.03%)</title><rect x="96.1944%" y="341" width="0.0309%" height="15" fill="rgb(209,34,43)" fg:x="18680" fg:w="6"/><text x="96.4444%" y="351.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6 samples, 0.03%)</title><rect x="96.1944%" y="325" width="0.0309%" height="15" fill="rgb(223,11,35)" fg:x="18680" fg:w="6"/><text x="96.4444%" y="335.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6 samples, 0.03%)</title><rect x="96.1944%" y="309" width="0.0309%" height="15" fill="rgb(251,219,26)" fg:x="18680" fg:w="6"/><text x="96.4444%" y="319.50"></text></g><g><title>rand::rngs::thread::thread_rng::{{closure}} (4 samples, 0.02%)</title><rect x="96.2047%" y="293" width="0.0206%" height="15" fill="rgb(231,119,3)" fg:x="18682" fg:w="4"/><text x="96.4547%" y="303.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.02%)</title><rect x="96.2047%" y="277" width="0.0206%" height="15" fill="rgb(216,97,11)" fg:x="18682" fg:w="4"/><text x="96.4547%" y="287.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (4 samples, 0.02%)</title><rect x="96.2047%" y="261" width="0.0206%" height="15" fill="rgb(223,59,9)" fg:x="18682" fg:w="4"/><text x="96.4547%" y="271.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (4 samples, 0.02%)</title><rect x="96.2047%" y="245" width="0.0206%" height="15" fill="rgb(233,93,31)" fg:x="18682" fg:w="4"/><text x="96.4547%" y="255.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (4 samples, 0.02%)</title><rect x="96.2047%" y="229" width="0.0206%" height="15" fill="rgb(239,81,33)" fg:x="18682" fg:w="4"/><text x="96.4547%" y="239.50"></text></g><g><title>core::mem::replace (4 samples, 0.02%)</title><rect x="96.2047%" y="213" width="0.0206%" height="15" fill="rgb(213,120,34)" fg:x="18682" fg:w="4"/><text x="96.4547%" y="223.50"></text></g><g><title>core::ptr::write (4 samples, 0.02%)</title><rect x="96.2047%" y="197" width="0.0206%" height="15" fill="rgb(243,49,53)" fg:x="18682" fg:w="4"/><text x="96.4547%" y="207.50"></text></g><g><title>&lt;num_prime::mint::Mint&lt;T,R&gt; as core::convert::From&lt;T&gt;&gt;::from (3 samples, 0.02%)</title><rect x="96.2665%" y="309" width="0.0154%" height="15" fill="rgb(247,216,33)" fg:x="18694" fg:w="3"/><text x="96.5165%" y="319.50"></text></g><g><title>&lt;&amp;num_prime::mint::Mint&lt;T,R&gt; as num_modular::ModularUnaryOps&lt;&amp;num_prime::mint::Mint&lt;T,R&gt;&gt;&gt;::sqm (17 samples, 0.09%)</title><rect x="96.3592%" y="277" width="0.0875%" height="15" fill="rgb(226,26,14)" fg:x="18712" fg:w="17"/><text x="96.6092%" y="287.50"></text></g><g><title>&lt;num_modular::reduced::ReducedInt&lt;T,R&gt; as num_modular::ModularInteger&gt;::square (17 samples, 0.09%)</title><rect x="96.3592%" y="261" width="0.0875%" height="15" fill="rgb(215,49,53)" fg:x="18712" fg:w="17"/><text x="96.6092%" y="271.50"></text></g><g><title>&lt;num_modular::monty::Montgomery&lt;u32,u32&gt; as num_modular::Reducer&lt;u32&gt;&gt;::square (17 samples, 0.09%)</title><rect x="96.3592%" y="245" width="0.0875%" height="15" fill="rgb(245,162,40)" fg:x="18712" fg:w="17"/><text x="96.6092%" y="255.50"></text></g><g><title>num_modular::monty::Montgomery&lt;u32,u32&gt;::reduce (16 samples, 0.08%)</title><rect x="96.3644%" y="229" width="0.0824%" height="15" fill="rgb(229,68,17)" fg:x="18713" fg:w="16"/><text x="96.6144%" y="239.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_mul (2 samples, 0.01%)</title><rect x="96.4365%" y="213" width="0.0103%" height="15" fill="rgb(213,182,10)" fg:x="18727" fg:w="2"/><text x="96.6865%" y="223.50"></text></g><g><title>&lt;num_prime::mint::Mint&lt;T,R&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.01%)</title><rect x="96.4468%" y="277" width="0.0103%" height="15" fill="rgb(245,125,30)" fg:x="18729" fg:w="2"/><text x="96.6968%" y="287.50"></text></g><g><title>&lt;&amp;u32 as core::ops::bit::Shr&lt;i32&gt;&gt;::shr (2 samples, 0.01%)</title><rect x="96.4828%" y="213" width="0.0103%" height="15" fill="rgb(232,202,2)" fg:x="18736" fg:w="2"/><text x="96.7328%" y="223.50"></text></g><g><title>&lt;u32 as core::ops::bit::Shr&lt;i32&gt;&gt;::shr (2 samples, 0.01%)</title><rect x="96.4828%" y="197" width="0.0103%" height="15" fill="rgb(237,140,51)" fg:x="18736" fg:w="2"/><text x="96.7328%" y="207.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_mul (11 samples, 0.06%)</title><rect x="96.4931%" y="213" width="0.0566%" height="15" fill="rgb(236,157,25)" fg:x="18738" fg:w="11"/><text x="96.7431%" y="223.50"></text></g><g><title>&lt;num_modular::monty::Montgomery&lt;u32,u32&gt; as num_modular::Reducer&lt;u32&gt;&gt;::new (21 samples, 0.11%)</title><rect x="96.4571%" y="245" width="0.1081%" height="15" fill="rgb(219,209,0)" fg:x="18731" fg:w="21"/><text x="96.7071%" y="255.50"></text></g><g><title>&lt;u32 as num_modular::monty::NegModInv&gt;::neginv (21 samples, 0.11%)</title><rect x="96.4571%" y="229" width="0.1081%" height="15" fill="rgb(240,116,54)" fg:x="18731" fg:w="21"/><text x="96.7071%" y="239.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (3 samples, 0.02%)</title><rect x="96.5498%" y="213" width="0.0154%" height="15" fill="rgb(216,10,36)" fg:x="18749" fg:w="3"/><text x="96.7998%" y="223.50"></text></g><g><title>&lt;num_prime::mint::Mint&lt;T,R&gt; as core::ops::arith::Rem&lt;&amp;num_prime::mint::Mint&lt;T,R&gt;&gt;&gt;::rem (39 samples, 0.20%)</title><rect x="96.4571%" y="277" width="0.2008%" height="15" fill="rgb(222,72,44)" fg:x="18731" fg:w="39"/><text x="96.7071%" y="287.50"></text></g><g><title>num_modular::reduced::ReducedInt&lt;T,R&gt;::new (39 samples, 0.20%)</title><rect x="96.4571%" y="261" width="0.2008%" height="15" fill="rgb(232,159,9)" fg:x="18731" fg:w="39"/><text x="96.7071%" y="271.50"></text></g><g><title>&lt;num_modular::monty::Montgomery&lt;u32,u32&gt; as num_modular::Reducer&lt;u32&gt;&gt;::transform (18 samples, 0.09%)</title><rect x="96.5652%" y="245" width="0.0927%" height="15" fill="rgb(210,39,32)" fg:x="18752" fg:w="18"/><text x="96.8152%" y="255.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_mul (25 samples, 0.13%)</title><rect x="97.5797%" y="213" width="0.1287%" height="15" fill="rgb(216,194,45)" fg:x="18949" fg:w="25"/><text x="97.8297%" y="223.50"></text></g><g><title>&lt;num_modular::monty::Montgomery&lt;u32,u32&gt; as num_modular::Reducer&lt;u32&gt;&gt;::mul (174 samples, 0.90%)</title><rect x="96.9411%" y="245" width="0.8960%" height="15" fill="rgb(218,18,35)" fg:x="18825" fg:w="174"/><text x="97.1911%" y="255.50"></text></g><g><title>num_modular::monty::Montgomery&lt;u32,u32&gt;::reduce (134 samples, 0.69%)</title><rect x="97.1471%" y="229" width="0.6900%" height="15" fill="rgb(207,83,51)" fg:x="18865" fg:w="134"/><text x="97.3971%" y="239.50"></text></g><g><title>core::num::&lt;impl u64&gt;::overflowing_add (25 samples, 0.13%)</title><rect x="97.7084%" y="213" width="0.1287%" height="15" fill="rgb(225,63,43)" fg:x="18974" fg:w="25"/><text x="97.9584%" y="223.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_mul (44 samples, 0.23%)</title><rect x="98.5221%" y="213" width="0.2266%" height="15" fill="rgb(207,57,36)" fg:x="19132" fg:w="44"/><text x="98.7721%" y="223.50"></text></g><g><title>&lt;num_modular::monty::Montgomery&lt;u32,u32&gt; as num_modular::Reducer&lt;u32&gt;&gt;::square (202 samples, 1.04%)</title><rect x="97.8372%" y="245" width="1.0402%" height="15" fill="rgb(216,99,33)" fg:x="18999" fg:w="202"/><text x="98.0872%" y="255.50"></text></g><g><title>num_modular::monty::Montgomery&lt;u32,u32&gt;::reduce (161 samples, 0.83%)</title><rect x="98.0483%" y="229" width="0.8291%" height="15" fill="rgb(225,42,16)" fg:x="19040" fg:w="161"/><text x="98.2983%" y="239.50"></text></g><g><title>core::num::&lt;impl u64&gt;::overflowing_add (25 samples, 0.13%)</title><rect x="98.7486%" y="213" width="0.1287%" height="15" fill="rgb(220,201,45)" fg:x="19176" fg:w="25"/><text x="98.9986%" y="223.50"></text></g><g><title>&lt;num_modular::monty::Montgomery&lt;u32,u32&gt; as num_modular::Reducer&lt;u32&gt;&gt;::pow (461 samples, 2.37%)</title><rect x="96.6682%" y="261" width="2.3740%" height="15" fill="rgb(225,33,4)" fg:x="18772" fg:w="461"/><text x="96.9182%" y="271.50">&lt;n..</text></g><g><title>&lt;num_modular::monty::Montgomery&lt;u32,u32&gt; as num_modular::Reducer&lt;u32&gt;&gt;::transform (32 samples, 0.16%)</title><rect x="98.8774%" y="245" width="0.1648%" height="15" fill="rgb(224,33,50)" fg:x="19201" fg:w="32"/><text x="99.1274%" y="255.50"></text></g><g><title>&lt;num_modular::reduced::ReducedInt&lt;T,R&gt; as num_traits::pow::Pow&lt;T&gt;&gt;::pow (2 samples, 0.01%)</title><rect x="99.0422%" y="261" width="0.0103%" height="15" fill="rgb(246,198,51)" fg:x="19233" fg:w="2"/><text x="99.2922%" y="271.50"></text></g><g><title>&lt;num_modular::monty::Montgomery&lt;u32,u32&gt; as num_modular::Reducer&lt;u32&gt;&gt;::new (13 samples, 0.07%)</title><rect x="99.0525%" y="245" width="0.0669%" height="15" fill="rgb(205,22,4)" fg:x="19235" fg:w="13"/><text x="99.3025%" y="255.50"></text></g><g><title>&lt;u32 as num_modular::monty::NegModInv&gt;::neginv (13 samples, 0.07%)</title><rect x="99.0525%" y="229" width="0.0669%" height="15" fill="rgb(206,3,8)" fg:x="19235" fg:w="13"/><text x="99.3025%" y="239.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_mul (13 samples, 0.07%)</title><rect x="99.0525%" y="213" width="0.0669%" height="15" fill="rgb(251,23,15)" fg:x="19235" fg:w="13"/><text x="99.3025%" y="223.50"></text></g><g><title>&lt;num_prime::mint::Mint&lt;T,R&gt; as num_modular::ModularPow&lt;&amp;num_prime::mint::Mint&lt;T,R&gt;,&amp;num_prime::mint::Mint&lt;T,R&gt;&gt;&gt;::powm (505 samples, 2.60%)</title><rect x="96.6579%" y="277" width="2.6005%" height="15" fill="rgb(252,88,28)" fg:x="18770" fg:w="505"/><text x="96.9079%" y="287.50">&lt;n..</text></g><g><title>num_modular::reduced::ReducedInt&lt;T,R&gt;::new (40 samples, 0.21%)</title><rect x="99.0525%" y="261" width="0.2060%" height="15" fill="rgb(212,127,14)" fg:x="19235" fg:w="40"/><text x="99.3025%" y="271.50"></text></g><g><title>&lt;num_modular::monty::Montgomery&lt;u32,u32&gt; as num_modular::Reducer&lt;u32&gt;&gt;::transform (27 samples, 0.14%)</title><rect x="99.1194%" y="245" width="0.1390%" height="15" fill="rgb(247,145,37)" fg:x="19248" fg:w="27"/><text x="99.3694%" y="255.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::lt (3 samples, 0.02%)</title><rect x="99.2636%" y="277" width="0.0154%" height="15" fill="rgb(209,117,53)" fg:x="19276" fg:w="3"/><text x="99.5136%" y="287.50"></text></g><g><title>core::cmp::PartialOrd::lt (3 samples, 0.02%)</title><rect x="99.2636%" y="261" width="0.0154%" height="15" fill="rgb(212,90,42)" fg:x="19276" fg:w="3"/><text x="99.5136%" y="271.50"></text></g><g><title>&lt;num_prime::mint::Mint&lt;T,R&gt; as core::cmp::PartialOrd&gt;::partial_cmp (3 samples, 0.02%)</title><rect x="99.2636%" y="245" width="0.0154%" height="15" fill="rgb(218,164,37)" fg:x="19276" fg:w="3"/><text x="99.5136%" y="255.50"></text></g><g><title>__libc_start_main_impl (18,753 samples, 96.57%)</title><rect x="2.7190%" y="661" width="96.5704%" height="15" fill="rgb(246,65,34)" fg:x="528" fg:w="18753"/><text x="2.9690%" y="671.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (18,753 samples, 96.57%)</title><rect x="2.7190%" y="645" width="96.5704%" height="15" fill="rgb(231,100,33)" fg:x="528" fg:w="18753"/><text x="2.9690%" y="655.50">__libc_start_call_main</text></g><g><title>main (18,753 samples, 96.57%)</title><rect x="2.7190%" y="629" width="96.5704%" height="15" fill="rgb(228,126,14)" fg:x="528" fg:w="18753"/><text x="2.9690%" y="639.50">main</text></g><g><title>std::rt::lang_start_internal (18,753 samples, 96.57%)</title><rect x="2.7190%" y="613" width="96.5704%" height="15" fill="rgb(215,173,21)" fg:x="528" fg:w="18753"/><text x="2.9690%" y="623.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (18,753 samples, 96.57%)</title><rect x="2.7190%" y="597" width="96.5704%" height="15" fill="rgb(210,6,40)" fg:x="528" fg:w="18753"/><text x="2.9690%" y="607.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (18,753 samples, 96.57%)</title><rect x="2.7190%" y="581" width="96.5704%" height="15" fill="rgb(212,48,18)" fg:x="528" fg:w="18753"/><text x="2.9690%" y="591.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (18,753 samples, 96.57%)</title><rect x="2.7190%" y="565" width="96.5704%" height="15" fill="rgb(230,214,11)" fg:x="528" fg:w="18753"/><text x="2.9690%" y="575.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (18,753 samples, 96.57%)</title><rect x="2.7190%" y="549" width="96.5704%" height="15" fill="rgb(254,105,39)" fg:x="528" fg:w="18753"/><text x="2.9690%" y="559.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (18,753 samples, 96.57%)</title><rect x="2.7190%" y="533" width="96.5704%" height="15" fill="rgb(245,158,5)" fg:x="528" fg:w="18753"/><text x="2.9690%" y="543.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (18,753 samples, 96.57%)</title><rect x="2.7190%" y="517" width="96.5704%" height="15" fill="rgb(249,208,11)" fg:x="528" fg:w="18753"/><text x="2.9690%" y="527.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (18,753 samples, 96.57%)</title><rect x="2.7190%" y="501" width="96.5704%" height="15" fill="rgb(210,39,28)" fg:x="528" fg:w="18753"/><text x="2.9690%" y="511.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (18,753 samples, 96.57%)</title><rect x="2.7190%" y="485" width="96.5704%" height="15" fill="rgb(211,56,53)" fg:x="528" fg:w="18753"/><text x="2.9690%" y="495.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (18,753 samples, 96.57%)</title><rect x="2.7190%" y="469" width="96.5704%" height="15" fill="rgb(226,201,30)" fg:x="528" fg:w="18753"/><text x="2.9690%" y="479.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (18,753 samples, 96.57%)</title><rect x="2.7190%" y="453" width="96.5704%" height="15" fill="rgb(239,101,34)" fg:x="528" fg:w="18753"/><text x="2.9690%" y="463.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (18,753 samples, 96.57%)</title><rect x="2.7190%" y="437" width="96.5704%" height="15" fill="rgb(226,209,5)" fg:x="528" fg:w="18753"/><text x="2.9690%" y="447.50">core::ops::function::FnOnce::call_once</text></g><g><title>max_order_elements::main (18,753 samples, 96.57%)</title><rect x="2.7190%" y="421" width="96.5704%" height="15" fill="rgb(250,105,47)" fg:x="528" fg:w="18753"/><text x="2.9690%" y="431.50">max_order_elements::main</text></g><g><title>max_order_elements::ModularRing::new (11,119 samples, 57.26%)</title><rect x="42.0310%" y="405" width="57.2584%" height="15" fill="rgb(230,72,3)" fg:x="8162" fg:w="11119"/><text x="42.2810%" y="415.50">max_order_elements::ModularRing::new</text></g><g><title>num_prime::nt_funcs::factorize64 (10,340 samples, 53.25%)</title><rect x="46.0425%" y="389" width="53.2468%" height="15" fill="rgb(232,218,39)" fg:x="8941" fg:w="10340"/><text x="46.2925%" y="399.50">num_prime::nt_funcs::factorize64</text></g><g><title>num_prime::nt_funcs::is_prime64 (595 samples, 3.06%)</title><rect x="96.2253%" y="373" width="3.0640%" height="15" fill="rgb(248,166,6)" fg:x="18686" fg:w="595"/><text x="96.4753%" y="383.50">num..</text></g><g><title>num_prime::nt_funcs::is_prime64_miller (590 samples, 3.04%)</title><rect x="96.2511%" y="357" width="3.0383%" height="15" fill="rgb(247,89,20)" fg:x="18691" fg:w="590"/><text x="96.5011%" y="367.50">num..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::all (590 samples, 3.04%)</title><rect x="96.2511%" y="341" width="3.0383%" height="15" fill="rgb(248,130,54)" fg:x="18691" fg:w="590"/><text x="96.5011%" y="351.50">&lt;co..</text></g><g><title>num_prime::nt_funcs::is_prime64_miller::{{closure}} (587 samples, 3.02%)</title><rect x="96.2665%" y="325" width="3.0228%" height="15" fill="rgb(234,196,4)" fg:x="18694" fg:w="587"/><text x="96.5165%" y="335.50">num..</text></g><g><title>num_prime::primality::&lt;impl num_prime::traits::PrimalityUtils for T&gt;::is_sprp (584 samples, 3.01%)</title><rect x="96.2820%" y="309" width="3.0074%" height="15" fill="rgb(250,143,31)" fg:x="18697" fg:w="584"/><text x="96.5320%" y="319.50">num..</text></g><g><title>num_prime::primality::&lt;impl num_prime::traits::PrimalityUtils for T&gt;::test_sprp (583 samples, 3.00%)</title><rect x="96.2871%" y="293" width="3.0022%" height="15" fill="rgb(211,110,34)" fg:x="18698" fg:w="583"/><text x="96.5371%" y="303.50">num..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.01%)</title><rect x="99.2791%" y="277" width="0.0103%" height="15" fill="rgb(215,124,48)" fg:x="19279" fg:w="2"/><text x="99.5291%" y="287.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.01%)</title><rect x="99.2791%" y="261" width="0.0103%" height="15" fill="rgb(216,46,13)" fg:x="19279" fg:w="2"/><text x="99.5291%" y="271.50"></text></g><g><title>_start (18,754 samples, 96.58%)</title><rect x="2.7190%" y="677" width="96.5755%" height="15" fill="rgb(205,184,25)" fg:x="528" fg:w="18754"/><text x="2.9690%" y="687.50">_start</text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (19 samples, 0.10%)</title><rect x="99.2945%" y="677" width="0.0978%" height="15" fill="rgb(228,1,10)" fg:x="19282" fg:w="19"/><text x="99.5445%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (3 samples, 0.02%)</title><rect x="99.3923%" y="677" width="0.0154%" height="15" fill="rgb(213,116,27)" fg:x="19301" fg:w="3"/><text x="99.6423%" y="687.50"></text></g><g><title>&lt;u64 as num_integer::roots::Roots&gt;::sqrt (7 samples, 0.04%)</title><rect x="99.4387%" y="661" width="0.0360%" height="15" fill="rgb(241,95,50)" fg:x="19310" fg:w="7"/><text x="99.6887%" y="671.50"></text></g><g><title>num_prime::factor::one_line (25 samples, 0.13%)</title><rect x="99.4181%" y="677" width="0.1287%" height="15" fill="rgb(238,48,32)" fg:x="19306" fg:w="25"/><text x="99.6681%" y="687.50"></text></g><g><title>num_prime::integer::&lt;impl num_prime::traits::ExactRoots for u64&gt;::sqrt_exact (14 samples, 0.07%)</title><rect x="99.4747%" y="661" width="0.0721%" height="15" fill="rgb(235,113,49)" fg:x="19317" fg:w="14"/><text x="99.7247%" y="671.50"></text></g><g><title>num_prime::traits::ExactRoots::nth_root_exact (14 samples, 0.07%)</title><rect x="99.4747%" y="645" width="0.0721%" height="15" fill="rgb(205,127,43)" fg:x="19317" fg:w="14"/><text x="99.7247%" y="655.50"></text></g><g><title>&lt;u64 as num_integer::roots::Roots&gt;::nth_root (14 samples, 0.07%)</title><rect x="99.4747%" y="629" width="0.0721%" height="15" fill="rgb(250,162,2)" fg:x="19317" fg:w="14"/><text x="99.7247%" y="639.50"></text></g><g><title>&lt;num_prime::mint::Mint&lt;T,R&gt; as num_integer::Integer&gt;::gcd (9 samples, 0.05%)</title><rect x="99.5674%" y="661" width="0.0463%" height="15" fill="rgb(220,13,41)" fg:x="19335" fg:w="9"/><text x="99.8174%" y="671.50"></text></g><g><title>&lt;num_modular::reduced::ReducedInt&lt;T,R&gt; as num_modular::ModularInteger&gt;::residue (9 samples, 0.05%)</title><rect x="99.5674%" y="645" width="0.0463%" height="15" fill="rgb(249,221,25)" fg:x="19335" fg:w="9"/><text x="99.8174%" y="655.50"></text></g><g><title>&lt;num_modular::monty::Montgomery&lt;u64,u64&gt; as num_modular::Reducer&lt;u64&gt;&gt;::residue (9 samples, 0.05%)</title><rect x="99.5674%" y="629" width="0.0463%" height="15" fill="rgb(215,208,19)" fg:x="19335" fg:w="9"/><text x="99.8174%" y="639.50"></text></g><g><title>&lt;num_prime::mint::Mint&lt;T,R&gt; as num_modular::ModularUnaryOps&lt;&amp;num_prime::mint::Mint&lt;T,R&gt;&gt;&gt;::sqm (2 samples, 0.01%)</title><rect x="99.6138%" y="661" width="0.0103%" height="15" fill="rgb(236,175,2)" fg:x="19344" fg:w="2"/><text x="99.8638%" y="671.50"></text></g><g><title>num_prime::factor::pollard_rho (22 samples, 0.11%)</title><rect x="99.5468%" y="677" width="0.1133%" height="15" fill="rgb(241,52,2)" fg:x="19331" fg:w="22"/><text x="99.7968%" y="687.50"></text></g><g><title>core::cmp::PartialOrd::gt (7 samples, 0.04%)</title><rect x="99.6241%" y="661" width="0.0360%" height="15" fill="rgb(248,140,14)" fg:x="19346" fg:w="7"/><text x="99.8741%" y="671.50"></text></g><g><title>num_prime::factor::squfof (7 samples, 0.04%)</title><rect x="99.6601%" y="677" width="0.0360%" height="15" fill="rgb(253,22,42)" fg:x="19353" fg:w="7"/><text x="99.9101%" y="687.50"></text></g><g><title>num_prime::integer::&lt;impl num_prime::traits::ExactRoots for u64&gt;::sqrt_exact (6 samples, 0.03%)</title><rect x="99.6653%" y="661" width="0.0309%" height="15" fill="rgb(234,61,47)" fg:x="19354" fg:w="6"/><text x="99.9153%" y="671.50"></text></g><g><title>num_prime::traits::ExactRoots::nth_root_exact (6 samples, 0.03%)</title><rect x="99.6653%" y="645" width="0.0309%" height="15" fill="rgb(208,226,15)" fg:x="19354" fg:w="6"/><text x="99.9153%" y="655.50"></text></g><g><title>&lt;u64 as num_integer::roots::Roots&gt;::nth_root (6 samples, 0.03%)</title><rect x="99.6653%" y="629" width="0.0309%" height="15" fill="rgb(217,221,4)" fg:x="19354" fg:w="6"/><text x="99.9153%" y="639.50"></text></g><g><title>num_prime::nt_funcs::is_prime64_miller (5 samples, 0.03%)</title><rect x="99.6962%" y="677" width="0.0257%" height="15" fill="rgb(212,174,34)" fg:x="19360" fg:w="5"/><text x="99.9462%" y="687.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::all (4 samples, 0.02%)</title><rect x="99.7013%" y="661" width="0.0206%" height="15" fill="rgb(253,83,4)" fg:x="19361" fg:w="4"/><text x="99.9513%" y="671.50"></text></g><g><title>num_prime::nt_funcs::is_prime64_miller::{{closure}} (4 samples, 0.02%)</title><rect x="99.7013%" y="645" width="0.0206%" height="15" fill="rgb(250,195,49)" fg:x="19361" fg:w="4"/><text x="99.9513%" y="655.50"></text></g><g><title>num_prime::primality::&lt;impl num_prime::traits::PrimalityUtils for T&gt;::is_sprp (4 samples, 0.02%)</title><rect x="99.7013%" y="629" width="0.0206%" height="15" fill="rgb(241,192,25)" fg:x="19361" fg:w="4"/><text x="99.9513%" y="639.50"></text></g><g><title>&lt;&amp;num_prime::mint::Mint&lt;T,R&gt; as num_modular::ModularUnaryOps&lt;&amp;num_prime::mint::Mint&lt;T,R&gt;&gt;&gt;::sqm (12 samples, 0.06%)</title><rect x="99.7940%" y="661" width="0.0618%" height="15" fill="rgb(208,124,10)" fg:x="19379" fg:w="12"/><text x="100.0440%" y="671.50"></text></g><g><title>&lt;num_modular::reduced::ReducedInt&lt;T,R&gt; as num_modular::ModularInteger&gt;::square (12 samples, 0.06%)</title><rect x="99.7940%" y="645" width="0.0618%" height="15" fill="rgb(222,33,0)" fg:x="19379" fg:w="12"/><text x="100.0440%" y="655.50"></text></g><g><title>&lt;num_modular::monty::Montgomery&lt;u32,u32&gt; as num_modular::Reducer&lt;u32&gt;&gt;::square (12 samples, 0.06%)</title><rect x="99.7940%" y="629" width="0.0618%" height="15" fill="rgb(234,209,28)" fg:x="19379" fg:w="12"/><text x="100.0440%" y="639.50"></text></g><g><title>&lt;num_prime::mint::Mint&lt;T,R&gt; as core::ops::arith::Rem&lt;&amp;num_prime::mint::Mint&lt;T,R&gt;&gt;&gt;::rem (7 samples, 0.04%)</title><rect x="99.8558%" y="661" width="0.0360%" height="15" fill="rgb(224,11,23)" fg:x="19391" fg:w="7"/><text x="100.1058%" y="671.50"></text></g><g><title>num_modular::reduced::ReducedInt&lt;T,R&gt;::new (7 samples, 0.04%)</title><rect x="99.8558%" y="645" width="0.0360%" height="15" fill="rgb(232,99,1)" fg:x="19391" fg:w="7"/><text x="100.1058%" y="655.50"></text></g><g><title>&lt;num_modular::monty::Montgomery&lt;u32,u32&gt; as num_modular::Reducer&lt;u32&gt;&gt;::new (7 samples, 0.04%)</title><rect x="99.8558%" y="629" width="0.0360%" height="15" fill="rgb(237,95,45)" fg:x="19391" fg:w="7"/><text x="100.1058%" y="639.50"></text></g><g><title>num_prime::primality::&lt;impl num_prime::traits::PrimalityUtils for T&gt;::test_sprp (47 samples, 0.24%)</title><rect x="99.7219%" y="677" width="0.2420%" height="15" fill="rgb(208,109,11)" fg:x="19365" fg:w="47"/><text x="99.9719%" y="687.50"></text></g><g><title>&lt;num_prime::mint::Mint&lt;T,R&gt; as num_modular::ModularPow&lt;&amp;num_prime::mint::Mint&lt;T,R&gt;,&amp;num_prime::mint::Mint&lt;T,R&gt;&gt;&gt;::powm (14 samples, 0.07%)</title><rect x="99.8919%" y="661" width="0.0721%" height="15" fill="rgb(216,190,48)" fg:x="19398" fg:w="14"/><text x="100.1419%" y="671.50"></text></g><g><title>num_modular::reduced::ReducedInt&lt;T,R&gt;::new (8 samples, 0.04%)</title><rect x="99.9228%" y="645" width="0.0412%" height="15" fill="rgb(251,171,36)" fg:x="19404" fg:w="8"/><text x="100.1728%" y="655.50"></text></g><g><title>&lt;num_modular::monty::Montgomery&lt;u32,u32&gt; as num_modular::Reducer&lt;u32&gt;&gt;::new (8 samples, 0.04%)</title><rect x="99.9228%" y="629" width="0.0412%" height="15" fill="rgb(230,62,22)" fg:x="19404" fg:w="8"/><text x="100.1728%" y="639.50"></text></g><g><title>max-order-eleme (19,414 samples, 99.97%)</title><rect x="0.0000%" y="693" width="99.9743%" height="15" fill="rgb(225,114,35)" fg:x="0" fg:w="19414"/><text x="0.2500%" y="703.50">max-order-eleme</text></g><g><title>rand::random (2 samples, 0.01%)</title><rect x="99.9640%" y="677" width="0.0103%" height="15" fill="rgb(215,118,42)" fg:x="19412" fg:w="2"/><text x="100.2140%" y="687.50"></text></g><g><title>all (19,419 samples, 100%)</title><rect x="0.0000%" y="709" width="100.0000%" height="15" fill="rgb(243,119,21)" fg:x="0" fg:w="19419"/><text x="0.2500%" y="719.50"></text></g><g><title>perf-exec (5 samples, 0.03%)</title><rect x="99.9743%" y="693" width="0.0257%" height="15" fill="rgb(252,177,53)" fg:x="19414" fg:w="5"/><text x="100.2243%" y="703.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.03%)</title><rect x="99.9743%" y="677" width="0.0257%" height="15" fill="rgb(237,209,29)" fg:x="19414" fg:w="5"/><text x="100.2243%" y="687.50"></text></g><g><title>do_syscall_64 (5 samples, 0.03%)</title><rect x="99.9743%" y="661" width="0.0257%" height="15" fill="rgb(212,65,23)" fg:x="19414" fg:w="5"/><text x="100.2243%" y="671.50"></text></g><g><title>__x64_sys_execve (5 samples, 0.03%)</title><rect x="99.9743%" y="645" width="0.0257%" height="15" fill="rgb(230,222,46)" fg:x="19414" fg:w="5"/><text x="100.2243%" y="655.50"></text></g><g><title>do_execveat_common.isra.0 (5 samples, 0.03%)</title><rect x="99.9743%" y="629" width="0.0257%" height="15" fill="rgb(215,135,32)" fg:x="19414" fg:w="5"/><text x="100.2243%" y="639.50"></text></g><g><title>bprm_execve (5 samples, 0.03%)</title><rect x="99.9743%" y="613" width="0.0257%" height="15" fill="rgb(246,101,22)" fg:x="19414" fg:w="5"/><text x="100.2243%" y="623.50"></text></g><g><title>bprm_execve.part.0 (5 samples, 0.03%)</title><rect x="99.9743%" y="597" width="0.0257%" height="15" fill="rgb(206,107,13)" fg:x="19414" fg:w="5"/><text x="100.2243%" y="607.50"></text></g><g><title>exec_binprm (5 samples, 0.03%)</title><rect x="99.9743%" y="581" width="0.0257%" height="15" fill="rgb(250,100,44)" fg:x="19414" fg:w="5"/><text x="100.2243%" y="591.50"></text></g><g><title>search_binary_handler (5 samples, 0.03%)</title><rect x="99.9743%" y="565" width="0.0257%" height="15" fill="rgb(231,147,38)" fg:x="19414" fg:w="5"/><text x="100.2243%" y="575.50"></text></g><g><title>load_elf_binary (5 samples, 0.03%)</title><rect x="99.9743%" y="549" width="0.0257%" height="15" fill="rgb(229,8,40)" fg:x="19414" fg:w="5"/><text x="100.2243%" y="559.50"></text></g><g><title>begin_new_exec (5 samples, 0.03%)</title><rect x="99.9743%" y="533" width="0.0257%" height="15" fill="rgb(221,135,30)" fg:x="19414" fg:w="5"/><text x="100.2243%" y="543.50"></text></g><g><title>perf_event_exec (5 samples, 0.03%)</title><rect x="99.9743%" y="517" width="0.0257%" height="15" fill="rgb(249,193,18)" fg:x="19414" fg:w="5"/><text x="100.2243%" y="527.50"></text></g><g><title>perf_event_enable_on_exec (5 samples, 0.03%)</title><rect x="99.9743%" y="501" width="0.0257%" height="15" fill="rgb(209,133,39)" fg:x="19414" fg:w="5"/><text x="100.2243%" y="511.50"></text></g><g><title>ctx_resched (5 samples, 0.03%)</title><rect x="99.9743%" y="485" width="0.0257%" height="15" fill="rgb(232,100,14)" fg:x="19414" fg:w="5"/><text x="100.2243%" y="495.50"></text></g><g><title>perf_ctx_enable (5 samples, 0.03%)</title><rect x="99.9743%" y="469" width="0.0257%" height="15" fill="rgb(224,185,1)" fg:x="19414" fg:w="5"/><text x="100.2243%" y="479.50"></text></g><g><title>x86_pmu_enable (5 samples, 0.03%)</title><rect x="99.9743%" y="453" width="0.0257%" height="15" fill="rgb(223,139,8)" fg:x="19414" fg:w="5"/><text x="100.2243%" y="463.50"></text></g><g><title>intel_pmu_enable_all (5 samples, 0.03%)</title><rect x="99.9743%" y="437" width="0.0257%" height="15" fill="rgb(232,213,38)" fg:x="19414" fg:w="5"/><text x="100.2243%" y="447.50"></text></g><g><title>native_write_msr (5 samples, 0.03%)</title><rect x="99.9743%" y="421" width="0.0257%" height="15" fill="rgb(207,94,22)" fg:x="19414" fg:w="5"/><text x="100.2243%" y="431.50"></text></g></svg></svg>